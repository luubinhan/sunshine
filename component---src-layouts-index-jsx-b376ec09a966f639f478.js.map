{"version":3,"sources":["webpack:///component---src-layouts-index-jsx-b376ec09a966f639f478.js","webpack:///./.cache/json/layout-index.json?2af0","webpack:///./.cache/layouts/index.js","webpack:///./data/data.js","webpack:///./~/eve/eve.js","webpack:///./~/react-burger-menu/lib/BurgerIcon.js","webpack:///./~/react-burger-menu/lib/BurgerMenu.js","webpack:///./~/react-burger-menu/lib/CrossIcon.js","webpack:///./~/react-burger-menu/lib/baseStyles.js","webpack:///./~/react-burger-menu/lib/menuFactory.js","webpack:///./~/react-burger-menu/lib/menus/bubble.js","webpack:///./~/react-burger-menu/lib/menus/elastic.js","webpack:///./~/react-burger-menu/lib/menus/fallDown.js","webpack:///./~/react-burger-menu/lib/menus/push.js","webpack:///./~/react-burger-menu/lib/menus/pushRotate.js","webpack:///./~/react-burger-menu/lib/menus/reveal.js","webpack:///./~/react-burger-menu/lib/menus/scaleDown.js","webpack:///./~/react-burger-menu/lib/menus/scaleRotate.js","webpack:///./~/react-burger-menu/lib/menus/slide.js","webpack:///./~/react-burger-menu/lib/menus/stack.js","webpack:///./~/react-burger-menu/lib/snapsvgImporter.js","webpack:///./~/snapsvg-cjs/dist/snap.svg-cjs.js","webpack:///./src/components/Footer/Footer.jsx","webpack:///./src/components/Footer/index.js","webpack:///./src/components/UserLinks/UserLinks.jsx","webpack:///./src/layouts/index.jsx","webpack:///./src/layouts/logo-shop-mat-troi-nho.png"],"names":["webpackJsonp","216","module","exports","layoutContext","543","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_react","_react2","_index","_index2","_layoutIndex","_layoutIndex2","props","createElement","52","PRIMARY_NAVIGATION","slug","name","href","isActive","icon","childrens","RIGHT_NAV","829","827","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","glob","current_event","stop","version","has","separator","comaseparator","wildcard","numsort","a","b","events","n","firstDefined","ii","this","lastDefined","objtos","toString","Str","String","isArray","Array","ar","eve","scope","l","oldstop","args","slice","listeners","z","indexed","queue","out","ce","push","zIndex","sort","apply","_events","item","items","k","j","jj","nes","names","split","e","es","concat","f","sep","replace","RegExp","on","exist","event","attrs","nt","subname","cur","join","test","nts","off","unbind","splice","inodes","unshift","funcs","prune","once","f2","undefined","window","1189","_classCallCheck","instance","Constructor","TypeError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_createClass","defineProperties","descriptor","protoProps","staticProps","_get","_x","_x2","_x3","_again","object","property","receiver","Function","desc","getOwnPropertyDescriptor","getter","get","parent","getPrototypeOf","_propTypes","_propTypes2","BurgerIcon","_Component","state","hover","index","position","height","left","right","top","opacity","_this","buttonStyle","width","margin","padding","border","fontSize","cursor","customIcon","extraProps","className","style","styles","bmIcon","cloneElement","map","bar","barClassName","trim","getLineStyle","bmBurgerBars","bmBurgerButton","onClick","onMouseOver","setState","onMouseOut","Component","propTypes","string","element","defaultProps","1190","slide","stack","elastic","bubble","pushRotate","scaleDown","scaleRotate","fallDown","reveal","1191","CrossIcon","type","transform","buttonWrapperStyle","textIndent","background","outline","bmCross","crossClassName","getCrossStyle","bmCrossButton","1192","overlay","isOpen","MozTransform","MsTransform","OTransform","WebkitTransform","transition","menuWrap","menu","boxSizing","overflow","itemList","display","51","_x4","_x5","_reactDom","_reactDom2","_baseStyles","_baseStyles2","_BurgerIcon","_BurgerIcon2","_CrossIcon","_CrossIcon2","Menu","options","noStateChange","newState","applyWrapperStyles","onStateChange","timeoutId","clearTimeout","setTimeout","set","bodyClassName","body","document","querySelector","classList","pageWrap","pageWrapId","handleExternalWrapper","outerContainer","outerContainerId","id","wrapperStyles","html","wrapper","getElementById","console","error","builtStyles","getStyle","prop","forEach","el","inline","propName","charAt","toUpperCase","output","formattedWidth","keyCode","toggleMenu","disableOverlayClick","Error","customOnKeyDown","onkeydown","disableCloseOnEsc","listenForClose","bind","_this2","svg","morphShape","findDOMNode","path","lib","select","animate","attr","pathInitial","nextProps","_this3","noOverlay","overlayClassName","shouldDisableOverlayClick","getStyles","morphShapeClassName","viewBox","preserveAspectRatio","d","menuClassName","itemListClassName","Children","children","customCrossIcon","crossButtonClassName","customBurgerIcon","burgerButtonClassName","burgerBarClassName","oneOfType","oneOf","func","bool","isRequired","number","1193","_snapsvgImporter","_snapsvgImporter2","_menuFactory","_menuFactory2","pathOpen","pos","steps","stepsTotal","mina","nextStep","easein","nthChild","closeButton","1194","easeinout","whiteSpace","1195","perspective","perspectiveOrigin","1196","1197","transformOrigin","transformStyle","1198","visibility","burgerIcon","1199","1200","1201","1202","405","Snap","1291","requestID","animations","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","Date","getTime","idgen","idprefix","ID","timer","now","sta","val","s","ds","dur","B","speed","spd","duration","stopit","update","pause","pdif","resume","frame","res","start","end","easing","timeStamp","len","A","anim","linear","status","time","getById","easeout","Math","pow","q","Q","sqrt","x","X","abs","y","Y","t","backin","backout","sin","PI","bounce","p","root","w","h","nodeType","wrap","is","Element","doc","Paper","$","createTextNode","text","createComment","substring","getAttributeNS","xlink","xmlns","getAttribute","nodeValue","setAttributeNS","setAttribute","removeAttribute","createElementNS","o","toLowerCase","isFinite","objectToString","clone","repush","array","cacher","postprocessor","newf","arg","cache","count","shift","angle","x1","y1","x2","y2","x3","y3","math","atan2","rad","deg","svgTransform2string","tstr","all","params","tan","transform2matrix","bbox","tdata","parseTransformString","m","Matrix","bb","tlen","command","absolute","inver","invert","translate","rotate","scale","add","getSomeDefs","node","ownerSVGElement","parentNode","pdefs","defs","make","getSomeSVG","unit2px","getW","E","mgr","getBBox","getH","nam","class","fill","appendChild","removeChild","add2group","list","childNodes","snap","hub","paper","tagName","nodeName","anims","_","g","mask","pattern","symbol","method","Fragment","frag","proto","ownerDocument","getElementsByTagName","dom","contentDocument","jsonFiller","win","toFloat","parseFloat","toInt","parseInt","mmax","max","mmin","min","round","colourRegExp","commaSpaces","hsrg","hs","rg","pathCommand","tCommand","pathValues","url","format","tokenRegex","objNotationRegex","replacer","quote","quotedName","isFunc","str","cos","asin","num","acos","atan","len2","closestPoint","distance2","dx","dy","best","bestLength","scan","scanDistance","pathNode","pathLength","getTotalLength","precision","pathSegList","numberOfItems","bestDistance","Infinity","scanLength","getPointAtLength","before","after","beforeLength","afterLength","beforeDistance","afterDistance","distance","snapTo","values","tolerance","rem","getRGB","colour","indexOf","r","hex","rgbtoString","toHex","red","green","blue","rgb","match","hsb2rgb","hsl2rgb","hsb","hsl","toFixed","color","defaultView","getComputedStyle","getPropertyValue","hsbtoString","hsltoString","prepareRGB","clr","packageRGB","rgb2hsl","rgb2hsb","v","R","G","C","H","S","V","L","M","parsePathString","pathString","pth","arr","paramCounts","c","u","data","TString","rgTransform","_unit2px","contains","compareDocumentPosition","adown","documentElement","bup","query","selectAll","nodelist","querySelectorAll","setInterval","attributes","json","att","parse","createDocumentFragment","full","div","innerHTML","firstChild","fragment","ch","toJSON","lastIndexOf","css","letter","cssAttr","alignment-baseline","baseline-shift","clip","clip-path","clip-rule","color-interpolation","color-interpolation-filters","color-profile","color-rendering","direction","dominant-baseline","enable-background","fill-opacity","fill-rule","filter","flood-color","flood-opacity","font","font-family","font-size","font-size-adjust","font-stretch","font-style","font-variant","font-weight","glyph-orientation-horizontal","glyph-orientation-vertical","image-rendering","kerning","letter-spacing","lighting-color","marker","marker-end","marker-mid","marker-start","pointer-events","shape-rendering","stop-color","stop-opacity","stroke","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-anchor","text-decoration","text-rendering","unicode-bidi","word-spacing","writing-mode","ajax","postData","req","XMLHttpRequest","pd","encodeURIComponent","open","setRequestHeader","onreadystatechange","readyState","send","load","responseText","getOffset","elem","box","getBoundingClientRect","docElem","clientTop","clientLeft","pageYOffset","scrollTop","pageXOffset","scrollLeft","getElementByPoint","canvas","elementFromPoint","opera","so","sr","createSVGRect","hits","getIntersectionList","plugin","extractTransform","doReturn","matrix","fixids","urltest","it","uses","linktest","els","ids","oldid","old","fs","chld","elproto","isWithoutTransform","getClientRects","removed","localMatrix","original","pathfinder","deflt","bboxwt","realPath","propString","papa","global","getCTM","local","ms","localString","toTransformString","globalMatrix","totalMatrix","diffMatrix","total","gradientTransform","patternTransform","append","appendTo","prepend","first","insertBefore","prependTo","nextSibling","insertAfter","remove","asPX","use","xlink:href","cloneNode","toDefs","toPattern","patternUnits","refX","refY","cx","cy","markerWidth","markerHeight","orient","eldata","removeData","outerSVG","innerSVG","toDataURL","btoa","contents","unescape","matrixproto","norm","normalize","mag","aNew","bNew","multLeft","cNew","eNew","me","skewX","skew","skewY","fromCharCode","offset","determinant","row","scalex","shear","scaley","isSimple","isSuperSimple","noRotation","shorter","fillStroke","URL","grad","gradient","setFontSize","textExtract","chi","getFontSize","reURLValue","deurl","clipIt","gradrg","seed","step","stops","tokens","toAbsolute","txt","baseVal","vb","rx","ry","tp","textPath","tuner","chunk","tuned","setter","textContent","internal","rgNotSpace","addClass","clazz","finalValue","classes","curClasses","removeClass","hasClass","toggleClass","flag","getNumber","getUnit","unit","operators","+","-","/","*","reUnit","reAddon","plus","evnt","atr","aUnit","op","isNaN","bplus","from","to","rect","circle","preload","onerror","src","img","cssText","onload","image","offsetWidth","offsetHeight","ellipse","group","vbx","vby","vbw","vbh","ptrn","vx","vy","vw","vh","line","polyline","points","polygon","Gstops","GaddStop","inserted","stopOffset","GgetBBox","GsetStops","addStop","gradientLinear","gradientRadial","gradientUnits","setStops","fx","fy","clear","next","paths","ps","sleep","r1","r2","r0","rectPath","p2s","pathClone","pathArray","getPointAtSegmentLength","p1x","p1y","c1x","c1y","c2x","c2y","p2x","p2y","bezlen","findDotsAtSegment","getTotLen","getLengthFactory","istotal","subpath","O","onlystart","path2curve","point","sp","subpaths","t1","t13","t12","t2","t3","mx","my","nx","ny","ax","ay","alpha","bezierBBox","curveDim","isPointInsideBBox","isBBoxIntersect","bbox1","bbox2","base3","p1","p2","p3","p4","x4","y4","z2","Tvalues","Cvalues","sum","ct","xbase","ybase","comb","ll","intersect","denominator","px","py","px2","py2","interHelper","bez1","bez2","justCount","l1","l2","n1","n2","dots1","dots2","xy","di","di1","dj","dj1","ci","cj","pathIntersection","path1","path2","interPathHelper","pathIntersectionNumber","x1m","y1m","x2m","y2m","pi","pj","intr","kk","segment1","segment2","isPointInsidePath","pathBBox","dim","xmin","ymin","xmax","ymax","ellipsePath","pathToRelative","lowerCase","rel","pa","pathToAbsolute","pa0","crz","dots","pop","catmullRom2bezier","l2c","q2c","_13","_23","a2c","large_arc_flag","sweep_flag","recursive","_120","f1","rx2","ry2","df","f2old","x2old","y2old","c1","s1","c2","s2","hx","hy","m1","m2","m3","m4","newres","x0","y0","b2ac","sqrtb2ac","tvalues","bounds","mt","jlen","curve","bx","by","qx","qy","attrs2","processPath","pcom","T","fixArc","pp","pcoms1","pcoms2","fixM","a1","a2","pfirst","seg","seg2","seglen","seg2len","mapPath","pathi","crp","iLen","getSubpathsAtLength","getPath","getSubpath","closest","inside","found","intersection","intersectionNumber","isPointInside","toRelative","toCubic","Set","bindings","setproto","thisArg","Animation","each","begin","handler","cb","callbacker","aname","unbound","insertion","tail","todel","arglen","exclude","getEmpty","equaliseTransform","tt1","tt2","maxlength","path2array","getViewBox","getColour","isNumeric","arrayEqual","arr1","arr2","equal","Number","bUnit","supportsTouch","touchMap","mousedown","mousemove","mouseup","getScroll","preventTouch","originalEvent","preventDefault","stopTouch","stopPropagation","addEvent","fn","realName","scrollY","scrollX","targetTouches","olde","clientX","clientY","addEventListener","removeEventListener","drag","dragMove","dragi","touch","touches","identifier","_drag","move_scope","dragUp","unmousemove","unmouseup","end_scope","start_scope","eventName","f_in","f_out","scope_in","scope_out","mouseover","mouseout","unhover","unmouseover","unmouseout","draggable","onmove","onstart","onend","init","origTransform","undrag","unmousedown","pproto","rgurl","filstr","filterUnits","blur","def","shadow","grayscale","amount","sepia","saturate","hueRotate","amount2","brightness","contrast","firstLetter","getAlign","way","align","animation","inAnim","_attrs","_callback","curStatus","eq","fkeys","tkeys","keys","saveColor","colors","A100","A200","A400","A700","pink","purple","deeppurple","indigo","lightblue","cyan","teal","lightgreen","lime","yellow","amber","orange","deeporange","brown","grey","bluegrey","mui","flat","turquoise","greensea","sunflower","emerland","nephritis","carrot","pumpkin","peterriver","belizehole","alizarin","pomegranate","amethyst","wisteria","clouds","silver","wetasphalt","midnightblue","concrete","asbestos","importMUIColors","548","_possibleConstructorReturn","self","ReferenceError","_gatsbyLink","_gatsbyLink2","_UserLinks","_UserLinks2","_mystyle","Footer","render","config","copyright","phone","Container","address","email","labeled","Row","Col","sm","xs","1044","549","_Footer","_Footer2","832","554","UserLinks","getLinkElements","userLinks","link","label","iconClassName","637","_reactHelmet","_reactHelmet2","_reactBurgerMenu","_antd","_SiteConfig","_SiteConfig2","_data","_logoShopMatTroiNho","_logoShopMatTroiNho2","MainLayout","_React$Component","_initialiseProps","showBugger","componentWillReceiveProps","getLocalTitle","capitalize","pathPrefix","currentPath","location","pathname","title","includes","tag","category","selectedKey","siteTitle","content","siteDescription","Button","primary","hasChildrens","callChangeLink","renderChildrenMenu","fluid","alt","Nav","Popover","contentGiaoHang","trigger","contentThanhToan","contentUuDai","contentDoiTra","facebook","Master","BackTop","navigateTo","1297","1047","1048","1049"],"mappings":"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","file":"component---src-layouts-index-jsx-b376ec09a966f639f478.js","sourcesContent":["webpackJsonp([79611799117203,60335399758886],{\n\n/***/ 216:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"layoutContext\":{}}\n\n/***/ }),\n\n/***/ 543:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _index = __webpack_require__(637);\n\t\n\tvar _index2 = _interopRequireDefault(_index);\n\t\n\tvar _layoutIndex = __webpack_require__(216);\n\t\n\tvar _layoutIndex2 = _interopRequireDefault(_layoutIndex);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = function (props) {\n\t  return _react2.default.createElement(_index2.default, _extends({}, props, _layoutIndex2.default));\n\t};\n\t\n\tmodule.exports = exports[\"default\"];\n\n/***/ }),\n\n/***/ 52:\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\tvar PRIMARY_NAVIGATION = exports.PRIMARY_NAVIGATION = [{\n\t  key: 'be-trai',\n\t  slug: 'be-trai',\n\t  name: 'Bé Trai',\n\t  href: '/categories/be-trai',\n\t  isActive: false,\n\t  icon: '',\n\t  childrens: [{\n\t    key: 'do-bo',\n\t    name: 'Đồ Bộ',\n\t    icon: '',\n\t    href: '/tags/do-bo?categories=be-trai'\n\t  }, {\n\t    key: 'ao',\n\t    name: 'Áo',\n\t    icon: '',\n\t    href: '/tags/ao?categories=be-trai'\n\t  }, {\n\t    key: 'ao-khoac',\n\t    name: 'Áo khoác',\n\t    icon: '',\n\t    href: '/tags/ao-khoac?categories=be-trai'\n\t  }, {\n\t    key: 'ao-lien-quan',\n\t    name: 'Áo liền quần',\n\t    icon: '',\n\t    href: '/tags/ao-lien-quan?categories=be-trai'\n\t  }, {\n\t    key: 'quan',\n\t    name: 'Quần',\n\t    icon: '',\n\t    href: '/tags/quan?categories=be-trai'\n\t  }, {\n\t    key: 'do-ngu',\n\t    name: 'Đồ ngủ',\n\t    icon: '',\n\t    href: '/tags/do-ngu?categories=be-trai'\n\t  }]\n\t}, {\n\t  key: 'be-gai',\n\t  slug: 'be-gai',\n\t  name: 'Bé Gái',\n\t  href: '/categories/be-gai',\n\t  isActive: false,\n\t  icon: '',\n\t  childrens: [{\n\t    key: 'do-bo',\n\t    name: 'Đồ bộ',\n\t    icon: '',\n\t    href: '/tags/do-bo?categories=be-gai'\n\t  }, {\n\t    key: 'ao',\n\t    name: 'Áo',\n\t    icon: '',\n\t    href: '/tags/ao?categories=be-gai'\n\t  }, {\n\t    key: 'ao-khoac',\n\t    name: 'Áo khoác',\n\t    icon: '',\n\t    href: '/tags/ao-khoac?categories=be-gai'\n\t  }, {\n\t    key: 'ao-lien-quan',\n\t    name: 'Áo liền quần',\n\t    icon: '',\n\t    href: '/tags/ao-lien-quan?categories=be-gai'\n\t  }, {\n\t    key: 'quan',\n\t    name: 'Quần',\n\t    icon: '',\n\t    href: '/tags/quan?categories=be-gai'\n\t  }, {\n\t    key: 'dam-vay',\n\t    name: 'Đầm váy',\n\t    icon: '',\n\t    href: '/tags/dam-vay?categories=be-gai'\n\t  }, {\n\t    key: 'do-ngu',\n\t    name: 'Đồ ngủ',\n\t    icon: '',\n\t    href: '/tags/do-ngu?categories=be-gai'\n\t  }]\n\t}];\n\t\n\tvar RIGHT_NAV = exports.RIGHT_NAV = [{\n\t  key: 'khuyen-mai',\n\t  slug: 'khuyen-mai',\n\t  name: 'Khuyến Mãi',\n\t  href: '/categories/khuyen-mai',\n\t  isActive: false,\n\t  icon: ''\n\t}, {\n\t  key: 'lien-he',\n\t  slug: 'lien-he',\n\t  name: 'Liên hệ',\n\t  href: '/lien-he',\n\t  isActive: false,\n\t  icon: ''\n\t}];\n\n/***/ }),\n\n/***/ 829:\n/***/ (function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 827:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n\t//\n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t//\n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t//\n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\t// ┌────────────────────────────────────────────────────────────┐ \\\\\n\t// │ Eve 0.5.4 - JavaScript Events Library                      │ \\\\\n\t// ├────────────────────────────────────────────────────────────┤ \\\\\n\t// │ Author Dmitry Baranovskiy (http://dmitry.baranovskiy.com/) │ \\\\\n\t// └────────────────────────────────────────────────────────────┘ \\\\\n\t\n\t(function (glob) {\n\t    var version = \"0.5.4\",\n\t        has = \"hasOwnProperty\",\n\t        separator = /[\\.\\/]/,\n\t        comaseparator = /\\s*,\\s*/,\n\t        wildcard = \"*\",\n\t        numsort = function (a, b) {\n\t            return a - b;\n\t        },\n\t        current_event,\n\t        stop,\n\t        events = {n: {}},\n\t        firstDefined = function () {\n\t            for (var i = 0, ii = this.length; i < ii; i++) {\n\t                if (typeof this[i] != \"undefined\") {\n\t                    return this[i];\n\t                }\n\t            }\n\t        },\n\t        lastDefined = function () {\n\t            var i = this.length;\n\t            while (--i) {\n\t                if (typeof this[i] != \"undefined\") {\n\t                    return this[i];\n\t                }\n\t            }\n\t        },\n\t        objtos = Object.prototype.toString,\n\t        Str = String,\n\t        isArray = Array.isArray || function (ar) {\n\t            return ar instanceof Array || objtos.call(ar) == \"[object Array]\";\n\t        },\n\t    /*\\\n\t     * eve\n\t     [ method ]\n\t\n\t     * Fires event with given `name`, given scope and other parameters.\n\t\n\t     - name (string) name of the *event*, dot (`.`) or slash (`/`) separated\n\t     - scope (object) context for the event handlers\n\t     - varargs (...) the rest of arguments will be sent to event handlers\n\t\n\t     = (object) array of returned values from the listeners. Array has two methods `.firstDefined()` and `.lastDefined()` to get first or last not `undefined` value.\n\t    \\*/\n\t        eve = function (name, scope) {\n\t            var oldstop = stop,\n\t                args = Array.prototype.slice.call(arguments, 2),\n\t                listeners = eve.listeners(name),\n\t                z = 0,\n\t                l,\n\t                indexed = [],\n\t                queue = {},\n\t                out = [],\n\t                ce = current_event;\n\t            out.firstDefined = firstDefined;\n\t            out.lastDefined = lastDefined;\n\t            current_event = name;\n\t            stop = 0;\n\t            for (var i = 0, ii = listeners.length; i < ii; i++) if (\"zIndex\" in listeners[i]) {\n\t                indexed.push(listeners[i].zIndex);\n\t                if (listeners[i].zIndex < 0) {\n\t                    queue[listeners[i].zIndex] = listeners[i];\n\t                }\n\t            }\n\t            indexed.sort(numsort);\n\t            while (indexed[z] < 0) {\n\t                l = queue[indexed[z++]];\n\t                out.push(l.apply(scope, args));\n\t                if (stop) {\n\t                    stop = oldstop;\n\t                    return out;\n\t                }\n\t            }\n\t            for (i = 0; i < ii; i++) {\n\t                l = listeners[i];\n\t                if (\"zIndex\" in l) {\n\t                    if (l.zIndex == indexed[z]) {\n\t                        out.push(l.apply(scope, args));\n\t                        if (stop) {\n\t                            break;\n\t                        }\n\t                        do {\n\t                            z++;\n\t                            l = queue[indexed[z]];\n\t                            l && out.push(l.apply(scope, args));\n\t                            if (stop) {\n\t                                break;\n\t                            }\n\t                        } while (l)\n\t                    } else {\n\t                        queue[l.zIndex] = l;\n\t                    }\n\t                } else {\n\t                    out.push(l.apply(scope, args));\n\t                    if (stop) {\n\t                        break;\n\t                    }\n\t                }\n\t            }\n\t            stop = oldstop;\n\t            current_event = ce;\n\t            return out;\n\t        };\n\t    // Undocumented. Debug only.\n\t    eve._events = events;\n\t    /*\\\n\t     * eve.listeners\n\t     [ method ]\n\t\n\t     * Internal method which gives you array of all event handlers that will be triggered by the given `name`.\n\t\n\t     - name (string) name of the event, dot (`.`) or slash (`/`) separated\n\t\n\t     = (array) array of event handlers\n\t    \\*/\n\t    eve.listeners = function (name) {\n\t        var names = isArray(name) ? name : name.split(separator),\n\t            e = events,\n\t            item,\n\t            items,\n\t            k,\n\t            i,\n\t            ii,\n\t            j,\n\t            jj,\n\t            nes,\n\t            es = [e],\n\t            out = [];\n\t        for (i = 0, ii = names.length; i < ii; i++) {\n\t            nes = [];\n\t            for (j = 0, jj = es.length; j < jj; j++) {\n\t                e = es[j].n;\n\t                items = [e[names[i]], e[wildcard]];\n\t                k = 2;\n\t                while (k--) {\n\t                    item = items[k];\n\t                    if (item) {\n\t                        nes.push(item);\n\t                        out = out.concat(item.f || []);\n\t                    }\n\t                }\n\t            }\n\t            es = nes;\n\t        }\n\t        return out;\n\t    };\n\t    /*\\\n\t     * eve.separator\n\t     [ method ]\n\t\n\t     * If for some reasons you don’t like default separators (`.` or `/`) you can specify yours\n\t     * here. Be aware that if you pass a string longer than one character it will be treated as\n\t     * a list of characters.\n\t\n\t     - separator (string) new separator. Empty string resets to default: `.` or `/`.\n\t    \\*/\n\t    eve.separator = function (sep) {\n\t        if (sep) {\n\t            sep = Str(sep).replace(/(?=[\\.\\^\\]\\[\\-])/g, \"\\\\\");\n\t            sep = \"[\" + sep + \"]\";\n\t            separator = new RegExp(sep);\n\t        } else {\n\t            separator = /[\\.\\/]/;\n\t        }\n\t    };\n\t    /*\\\n\t     * eve.on\n\t     [ method ]\n\t     **\n\t     * Binds given event handler with a given name. You can use wildcards “`*`” for the names:\n\t     | eve.on(\"*.under.*\", f);\n\t     | eve(\"mouse.under.floor\"); // triggers f\n\t     * Use @eve to trigger the listener.\n\t     **\n\t     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n\t     - f (function) event handler function\n\t     **\n\t     - name (array) if you don’t want to use separators, you can use array of strings\n\t     - f (function) event handler function\n\t     **\n\t     = (function) returned function accepts a single numeric parameter that represents z-index of the handler. It is an optional feature and only used when you need to ensure that some subset of handlers will be invoked in a given order, despite of the order of assignment.\n\t     > Example:\n\t     | eve.on(\"mouse\", eatIt)(2);\n\t     | eve.on(\"mouse\", scream);\n\t     | eve.on(\"mouse\", catchIt)(1);\n\t     * This will ensure that `catchIt` function will be called before `eatIt`.\n\t     *\n\t     * If you want to put your handler before non-indexed handlers, specify a negative value.\n\t     * Note: I assume most of the time you don’t need to worry about z-index, but it’s nice to have this feature “just in case”.\n\t    \\*/\n\t    eve.on = function (name, f) {\n\t        if (typeof f != \"function\") {\n\t            return function () {};\n\t        }\n\t        var names = isArray(name) ? isArray(name[0]) ? name : [name] : Str(name).split(comaseparator);\n\t        for (var i = 0, ii = names.length; i < ii; i++) {\n\t            (function (name) {\n\t                var names = isArray(name) ? name : Str(name).split(separator),\n\t                    e = events,\n\t                    exist;\n\t                for (var i = 0, ii = names.length; i < ii; i++) {\n\t                    e = e.n;\n\t                    e = e.hasOwnProperty(names[i]) && e[names[i]] || (e[names[i]] = {n: {}});\n\t                }\n\t                e.f = e.f || [];\n\t                for (i = 0, ii = e.f.length; i < ii; i++) if (e.f[i] == f) {\n\t                    exist = true;\n\t                    break;\n\t                }\n\t                !exist && e.f.push(f);\n\t            }(names[i]));\n\t        }\n\t        return function (zIndex) {\n\t            if (+zIndex == +zIndex) {\n\t                f.zIndex = +zIndex;\n\t            }\n\t        };\n\t    };\n\t    /*\\\n\t     * eve.f\n\t     [ method ]\n\t     **\n\t     * Returns function that will fire given event with optional arguments.\n\t     * Arguments that will be passed to the result function will be also\n\t     * concated to the list of final arguments.\n\t     | el.onclick = eve.f(\"click\", 1, 2);\n\t     | eve.on(\"click\", function (a, b, c) {\n\t     |     console.log(a, b, c); // 1, 2, [event object]\n\t     | });\n\t     - event (string) event name\n\t     - varargs (…) and any other arguments\n\t     = (function) possible event handler function\n\t    \\*/\n\t    eve.f = function (event) {\n\t        var attrs = [].slice.call(arguments, 1);\n\t        return function () {\n\t            eve.apply(null, [event, null].concat(attrs).concat([].slice.call(arguments, 0)));\n\t        };\n\t    };\n\t    /*\\\n\t     * eve.stop\n\t     [ method ]\n\t     **\n\t     * Is used inside an event handler to stop the event, preventing any subsequent listeners from firing.\n\t    \\*/\n\t    eve.stop = function () {\n\t        stop = 1;\n\t    };\n\t    /*\\\n\t     * eve.nt\n\t     [ method ]\n\t     **\n\t     * Could be used inside event handler to figure out actual name of the event.\n\t     **\n\t     - subname (string) #optional subname of the event\n\t     **\n\t     = (string) name of the event, if `subname` is not specified\n\t     * or\n\t     = (boolean) `true`, if current event’s name contains `subname`\n\t    \\*/\n\t    eve.nt = function (subname) {\n\t        var cur = isArray(current_event) ? current_event.join(\".\") : current_event;\n\t        if (subname) {\n\t            return new RegExp(\"(?:\\\\.|\\\\/|^)\" + subname + \"(?:\\\\.|\\\\/|$)\").test(cur);\n\t        }\n\t        return cur;\n\t    };\n\t    /*\\\n\t     * eve.nts\n\t     [ method ]\n\t     **\n\t     * Could be used inside event handler to figure out actual name of the event.\n\t     **\n\t     **\n\t     = (array) names of the event\n\t    \\*/\n\t    eve.nts = function () {\n\t        return isArray(current_event) ? current_event : current_event.split(separator);\n\t    };\n\t    /*\\\n\t     * eve.off\n\t     [ method ]\n\t     **\n\t     * Removes given function from the list of event listeners assigned to given name.\n\t     * If no arguments specified all the events will be cleared.\n\t     **\n\t     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n\t     - f (function) event handler function\n\t    \\*/\n\t    /*\\\n\t     * eve.unbind\n\t     [ method ]\n\t     **\n\t     * See @eve.off\n\t    \\*/\n\t    eve.off = eve.unbind = function (name, f) {\n\t        if (!name) {\n\t            eve._events = events = {n: {}};\n\t            return;\n\t        }\n\t        var names = isArray(name) ? isArray(name[0]) ? name : [name] : Str(name).split(comaseparator);\n\t        if (names.length > 1) {\n\t            for (var i = 0, ii = names.length; i < ii; i++) {\n\t                eve.off(names[i], f);\n\t            }\n\t            return;\n\t        }\n\t        names = isArray(name) ? name : Str(name).split(separator);\n\t        var e,\n\t            key,\n\t            splice,\n\t            i, ii, j, jj,\n\t            cur = [events],\n\t            inodes = [];\n\t        for (i = 0, ii = names.length; i < ii; i++) {\n\t            for (j = 0; j < cur.length; j += splice.length - 2) {\n\t                splice = [j, 1];\n\t                e = cur[j].n;\n\t                if (names[i] != wildcard) {\n\t                    if (e[names[i]]) {\n\t                        splice.push(e[names[i]]);\n\t                        inodes.unshift({\n\t                            n: e,\n\t                            name: names[i]\n\t                        });\n\t                    }\n\t                } else {\n\t                    for (key in e) if (e[has](key)) {\n\t                        splice.push(e[key]);\n\t                        inodes.unshift({\n\t                            n: e,\n\t                            name: key\n\t                        });\n\t                    }\n\t                }\n\t                cur.splice.apply(cur, splice);\n\t            }\n\t        }\n\t        for (i = 0, ii = cur.length; i < ii; i++) {\n\t            e = cur[i];\n\t            while (e.n) {\n\t                if (f) {\n\t                    if (e.f) {\n\t                        for (j = 0, jj = e.f.length; j < jj; j++) if (e.f[j] == f) {\n\t                            e.f.splice(j, 1);\n\t                            break;\n\t                        }\n\t                        !e.f.length && delete e.f;\n\t                    }\n\t                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n\t                        var funcs = e.n[key].f;\n\t                        for (j = 0, jj = funcs.length; j < jj; j++) if (funcs[j] == f) {\n\t                            funcs.splice(j, 1);\n\t                            break;\n\t                        }\n\t                        !funcs.length && delete e.n[key].f;\n\t                    }\n\t                } else {\n\t                    delete e.f;\n\t                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n\t                        delete e.n[key].f;\n\t                    }\n\t                }\n\t                e = e.n;\n\t            }\n\t        }\n\t        // prune inner nodes in path\n\t        prune: for (i = 0, ii = inodes.length; i < ii; i++) {\n\t            e = inodes[i];\n\t            for (key in e.n[e.name].f) {\n\t                // not empty (has listeners)\n\t                continue prune;\n\t            }\n\t            for (key in e.n[e.name].n) {\n\t                // not empty (has children)\n\t                continue prune;\n\t            }\n\t            // is empty\n\t            delete e.n[e.name];\n\t        }\n\t    };\n\t    /*\\\n\t     * eve.once\n\t     [ method ]\n\t     **\n\t     * Binds given event handler with a given name to only run once then unbind itself.\n\t     | eve.once(\"login\", f);\n\t     | eve(\"login\"); // triggers f\n\t     | eve(\"login\"); // no listeners\n\t     * Use @eve to trigger the listener.\n\t     **\n\t     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n\t     - f (function) event handler function\n\t     **\n\t     = (function) same return function as @eve.on\n\t    \\*/\n\t    eve.once = function (name, f) {\n\t        var f2 = function () {\n\t            eve.off(name, f2);\n\t            return f.apply(this, arguments);\n\t        };\n\t        return eve.on(name, f2);\n\t    };\n\t    /*\\\n\t     * eve.version\n\t     [ property (string) ]\n\t     **\n\t     * Current version of the library.\n\t    \\*/\n\t    eve.version = version;\n\t    eve.toString = function () {\n\t        return \"You are running Eve \" + version;\n\t    };\n\t    glob.eve = eve;\n\t    typeof module != \"undefined\" && module.exports ? module.exports = eve :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () { return eve; }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : glob.eve = eve;\n\t})(typeof window != \"undefined\" ? window : this);\n\n\n/***/ }),\n\n/***/ 1189:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar BurgerIcon = (function (_Component) {\n\t  _inherits(BurgerIcon, _Component);\n\t\n\t  function BurgerIcon(props) {\n\t    _classCallCheck(this, BurgerIcon);\n\t\n\t    _get(Object.getPrototypeOf(BurgerIcon.prototype), 'constructor', this).call(this, props);\n\t    this.state = {\n\t      hover: false\n\t    };\n\t  }\n\t\n\t  _createClass(BurgerIcon, [{\n\t    key: 'getLineStyle',\n\t    value: function getLineStyle(index) {\n\t      return {\n\t        position: 'absolute',\n\t        height: '20%',\n\t        left: 0,\n\t        right: 0,\n\t        top: 20 * (index * 2) + '%',\n\t        opacity: this.state.hover ? 0.6 : 1\n\t      };\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this = this;\n\t\n\t      var icon = undefined;\n\t      var buttonStyle = {\n\t        position: 'absolute',\n\t        left: 0,\n\t        top: 0,\n\t        width: '100%',\n\t        height: '100%',\n\t        margin: 0,\n\t        padding: 0,\n\t        border: 'none',\n\t        opacity: 0,\n\t        fontSize: 8,\n\t        cursor: 'pointer'\n\t      };\n\t\n\t      if (this.props.customIcon) {\n\t        var extraProps = {\n\t          className: 'bm-icon',\n\t          style: _extends({ width: '100%', height: '100%' }, this.props.styles.bmIcon)\n\t        };\n\t        icon = _react2['default'].cloneElement(this.props.customIcon, extraProps);\n\t      } else {\n\t        icon = _react2['default'].createElement(\n\t          'span',\n\t          null,\n\t          [0, 1, 2].map(function (bar) {\n\t            return _react2['default'].createElement('span', {\n\t              key: bar,\n\t              className: ('bm-burger-bars ' + _this.props.barClassName).trim(),\n\t              style: _extends({}, _this.getLineStyle(bar), _this.props.styles.bmBurgerBars)\n\t            });\n\t          })\n\t        );\n\t      }\n\t\n\t      return _react2['default'].createElement(\n\t        'div',\n\t        {\n\t          className: ('bm-burger-button ' + this.props.className).trim(),\n\t          style: _extends({ zIndex: 1000 }, this.props.styles.bmBurgerButton)\n\t        },\n\t        icon,\n\t        _react2['default'].createElement(\n\t          'button',\n\t          {\n\t            onClick: this.props.onClick,\n\t            onMouseOver: function () {\n\t              return _this.setState({ hover: true });\n\t            },\n\t            onMouseOut: function () {\n\t              return _this.setState({ hover: false });\n\t            },\n\t            style: buttonStyle\n\t          },\n\t          'Open Menu'\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return BurgerIcon;\n\t})(_react.Component);\n\t\n\texports['default'] = BurgerIcon;\n\t\n\tBurgerIcon.propTypes = {\n\t  barClassName: _propTypes2['default'].string,\n\t  customIcon: _propTypes2['default'].element,\n\t  styles: _propTypes2['default'].object\n\t};\n\t\n\tBurgerIcon.defaultProps = {\n\t  barClassName: '',\n\t  className: '',\n\t  styles: {}\n\t};\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1190:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\texports['default'] = {\n\t  slide: __webpack_require__(1201),\n\t  stack: __webpack_require__(1202),\n\t  elastic: __webpack_require__(1194),\n\t  bubble: __webpack_require__(1193),\n\t  push: __webpack_require__(1196),\n\t  pushRotate: __webpack_require__(1197),\n\t  scaleDown: __webpack_require__(1199),\n\t  scaleRotate: __webpack_require__(1200),\n\t  fallDown: __webpack_require__(1195),\n\t  reveal: __webpack_require__(1198)\n\t};\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1191:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar CrossIcon = (function (_Component) {\n\t  _inherits(CrossIcon, _Component);\n\t\n\t  function CrossIcon() {\n\t    _classCallCheck(this, CrossIcon);\n\t\n\t    _get(Object.getPrototypeOf(CrossIcon.prototype), 'constructor', this).apply(this, arguments);\n\t  }\n\t\n\t  _createClass(CrossIcon, [{\n\t    key: 'getCrossStyle',\n\t    value: function getCrossStyle(type) {\n\t      return {\n\t        position: 'absolute',\n\t        width: 3,\n\t        height: 14,\n\t        transform: type === 'before' ? 'rotate(45deg)' : 'rotate(-45deg)'\n\t      };\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this = this;\n\t\n\t      var icon;\n\t      var buttonWrapperStyle = {\n\t        position: 'absolute',\n\t        width: 24,\n\t        height: 24,\n\t        right: 8,\n\t        top: 8\n\t      };\n\t      var buttonStyle = {\n\t        position: 'absolute',\n\t        left: 0,\n\t        top: 0,\n\t        width: '100%',\n\t        height: '100%',\n\t        margin: 0,\n\t        padding: 0,\n\t        border: 'none',\n\t        textIndent: -9999,\n\t        background: 'transparent',\n\t        outline: 'none',\n\t        cursor: 'pointer'\n\t      };\n\t\n\t      if (this.props.customIcon) {\n\t        var extraProps = {\n\t          className: 'bm-cross',\n\t          style: _extends({ width: '100%', height: '100%' }, this.props.styles.bmCross)\n\t        };\n\t        icon = _react2['default'].cloneElement(this.props.customIcon, extraProps);\n\t      } else {\n\t        icon = _react2['default'].createElement(\n\t          'span',\n\t          { style: { position: 'absolute', top: '6px', right: '14px' } },\n\t          ['before', 'after'].map(function (type, i) {\n\t            return _react2['default'].createElement('span', {\n\t              key: i,\n\t              className: ('bm-cross ' + _this.props.crossClassName).trim(),\n\t              style: _extends({}, _this.getCrossStyle(type), _this.props.styles.bmCross)\n\t            });\n\t          })\n\t        );\n\t      }\n\t\n\t      return _react2['default'].createElement(\n\t        'div',\n\t        {\n\t          className: ('bm-cross-button ' + this.props.className).trim(),\n\t          style: _extends({}, buttonWrapperStyle, this.props.styles.bmCrossButton)\n\t        },\n\t        icon,\n\t        _react2['default'].createElement(\n\t          'button',\n\t          { onClick: this.props.onClick, style: buttonStyle },\n\t          'Close Menu'\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return CrossIcon;\n\t})(_react.Component);\n\t\n\texports['default'] = CrossIcon;\n\t\n\tCrossIcon.propTypes = {\n\t  crossClassName: _propTypes2['default'].string,\n\t  customIcon: _propTypes2['default'].element,\n\t  styles: _propTypes2['default'].object\n\t};\n\t\n\tCrossIcon.defaultProps = {\n\t  crossClassName: '',\n\t  className: '',\n\t  styles: {}\n\t};\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1192:\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\tvar styles = {\n\t  overlay: function overlay(isOpen) {\n\t    return {\n\t      position: 'fixed',\n\t      zIndex: 1000,\n\t      width: '100%',\n\t      height: '100%',\n\t      background: 'rgba(0, 0, 0, 0.3)',\n\t      opacity: isOpen ? 1 : 0,\n\t      MozTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n\t      MsTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n\t      OTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n\t      WebkitTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n\t      transform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n\t      transition: isOpen ? 'opacity 0.3s' : 'opacity 0.3s, transform 0s 0.3s'\n\t    };\n\t  },\n\t\n\t  menuWrap: function menuWrap(isOpen, width, right) {\n\t    return {\n\t      position: 'fixed',\n\t      right: right ? 0 : 'inherit',\n\t      zIndex: 1100,\n\t      width: width,\n\t      height: '100%',\n\t      MozTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n\t      MsTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n\t      OTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n\t      WebkitTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n\t      transform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n\t      transition: 'all 0.5s'\n\t    };\n\t  },\n\t\n\t  menu: function menu() {\n\t    return {\n\t      height: '100%',\n\t      boxSizing: 'border-box',\n\t      overflow: 'auto'\n\t    };\n\t  },\n\t\n\t  itemList: function itemList() {\n\t    return {\n\t      height: '100%'\n\t    };\n\t  },\n\t\n\t  item: function item() {\n\t    return {\n\t      display: 'block',\n\t      outline: 'none'\n\t    };\n\t  }\n\t};\n\t\n\texports['default'] = styles;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 51:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x3, _x4, _x5) { var _again = true; _function: while (_again) { var object = _x3, property = _x4, receiver = _x5; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x3 = parent; _x4 = property; _x5 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactDom = __webpack_require__(10);\n\t\n\tvar _reactDom2 = _interopRequireDefault(_reactDom);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _baseStyles = __webpack_require__(1192);\n\t\n\tvar _baseStyles2 = _interopRequireDefault(_baseStyles);\n\t\n\tvar _BurgerIcon = __webpack_require__(1189);\n\t\n\tvar _BurgerIcon2 = _interopRequireDefault(_BurgerIcon);\n\t\n\tvar _CrossIcon = __webpack_require__(1191);\n\t\n\tvar _CrossIcon2 = _interopRequireDefault(_CrossIcon);\n\t\n\texports['default'] = function (styles) {\n\t  var Menu = (function (_Component) {\n\t    _inherits(Menu, _Component);\n\t\n\t    function Menu(props) {\n\t      _classCallCheck(this, Menu);\n\t\n\t      _get(Object.getPrototypeOf(Menu.prototype), 'constructor', this).call(this, props);\n\t      this.state = {\n\t        isOpen: false\n\t      };\n\t    }\n\t\n\t    _createClass(Menu, [{\n\t      key: 'toggleMenu',\n\t      value: function toggleMenu() {\n\t        var _this = this;\n\t\n\t        var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t        var isOpen = options.isOpen;\n\t        var noStateChange = options.noStateChange;\n\t\n\t        var newState = {\n\t          isOpen: typeof isOpen !== 'undefined' ? isOpen : !this.state.isOpen\n\t        };\n\t\n\t        this.applyWrapperStyles();\n\t\n\t        this.setState(newState, function () {\n\t          !noStateChange && _this.props.onStateChange(newState);\n\t\n\t          // Timeout ensures wrappers are cleared after animation finishes.\n\t          _this.timeoutId && clearTimeout(_this.timeoutId);\n\t          _this.timeoutId = setTimeout(function () {\n\t            _this.timeoutId = null;\n\t            if (!newState.isOpen) {\n\t              _this.applyWrapperStyles(false);\n\t            }\n\t          }, 500);\n\t        });\n\t      }\n\t\n\t      // Applies component-specific styles to external wrapper elements.\n\t    }, {\n\t      key: 'applyWrapperStyles',\n\t      value: function applyWrapperStyles() {\n\t        var set = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n\t\n\t        if (this.props.bodyClassName) {\n\t          var body = document.querySelector('body');\n\t          body.classList[set ? 'add' : 'remove'](this.props.bodyClassName);\n\t        }\n\t\n\t        if (styles.pageWrap && this.props.pageWrapId) {\n\t          this.handleExternalWrapper(this.props.pageWrapId, styles.pageWrap, set);\n\t        }\n\t\n\t        if (styles.outerContainer && this.props.outerContainerId) {\n\t          this.handleExternalWrapper(this.props.outerContainerId, styles.outerContainer, set);\n\t        }\n\t      }\n\t\n\t      // Sets or unsets styles on DOM elements outside the menu component.\n\t      // This is necessary for correct page interaction with some of the menus.\n\t      // Throws and returns if the required external elements don't exist,\n\t      // which means any external page animations won't be applied.\n\t    }, {\n\t      key: 'handleExternalWrapper',\n\t      value: function handleExternalWrapper(id, wrapperStyles, set) {\n\t        var html = document.querySelector('html');\n\t        var body = document.querySelector('body');\n\t        var wrapper = document.getElementById(id);\n\t\n\t        if (!wrapper) {\n\t          console.error(\"Element with ID '\" + id + \"' not found\");\n\t          return;\n\t        }\n\t\n\t        var builtStyles = this.getStyle(wrapperStyles);\n\t\n\t        for (var prop in builtStyles) {\n\t          if (builtStyles.hasOwnProperty(prop)) {\n\t            wrapper.style[prop] = set ? builtStyles[prop] : '';\n\t          }\n\t        }\n\t\n\t        // Prevent any horizontal scroll.\n\t        [html, body].forEach(function (element) {\n\t          element.style['overflow-x'] = set ? 'hidden' : '';\n\t        });\n\t      }\n\t\n\t      // Builds styles incrementally for a given element.\n\t    }, {\n\t      key: 'getStyles',\n\t      value: function getStyles(el, index, inline) {\n\t        var propName = 'bm' + el.replace(el.charAt(0), el.charAt(0).toUpperCase());\n\t\n\t        // Set base styles.\n\t        var output = _baseStyles2['default'][el] ? this.getStyle(_baseStyles2['default'][el]) : {};\n\t\n\t        // Add animation-specific styles.\n\t        if (styles[el]) {\n\t          output = _extends({}, output, this.getStyle(styles[el], index + 1));\n\t        }\n\t\n\t        // Add custom styles.\n\t        if (this.props.styles[propName]) {\n\t          output = _extends({}, output, this.props.styles[propName]);\n\t        }\n\t\n\t        // Add element inline styles.\n\t        if (inline) {\n\t          output = _extends({}, output, inline);\n\t        }\n\t\n\t        return output;\n\t      }\n\t    }, {\n\t      key: 'getStyle',\n\t      value: function getStyle(style, index) {\n\t        var width = this.props.width;\n\t\n\t        var formattedWidth = typeof width !== 'string' ? width + 'px' : width;\n\t        return style(this.state.isOpen, formattedWidth, this.props.right, index);\n\t      }\n\t    }, {\n\t      key: 'listenForClose',\n\t      value: function listenForClose(e) {\n\t        e = e || window.event;\n\t\n\t        if (this.state.isOpen && (e.key === 'Escape' || e.keyCode === 27)) {\n\t          this.toggleMenu();\n\t        }\n\t      }\n\t    }, {\n\t      key: 'shouldDisableOverlayClick',\n\t      value: function shouldDisableOverlayClick() {\n\t        if (typeof this.props.disableOverlayClick === 'function') {\n\t          return this.props.disableOverlayClick();\n\t        } else {\n\t          return this.props.disableOverlayClick;\n\t        }\n\t      }\n\t    }, {\n\t      key: 'componentWillMount',\n\t      value: function componentWillMount() {\n\t        if (!styles) {\n\t          throw new Error('No styles supplied');\n\t        }\n\t      }\n\t    }, {\n\t      key: 'componentDidMount',\n\t      value: function componentDidMount() {\n\t        // Bind ESC key handler (unless disabled or custom function supplied).\n\t        if (this.props.customOnKeyDown) {\n\t          window.onkeydown = this.props.customOnKeyDown;\n\t        } else if (!this.props.disableCloseOnEsc) {\n\t          window.onkeydown = this.listenForClose.bind(this);\n\t        }\n\t\n\t        // Allow initial open state to be set by props.\n\t        if (this.props.isOpen) {\n\t          this.toggleMenu({ isOpen: true, noStateChange: true });\n\t        }\n\t      }\n\t    }, {\n\t      key: 'componentWillUnmount',\n\t      value: function componentWillUnmount() {\n\t        window.onkeydown = null;\n\t\n\t        this.applyWrapperStyles(false);\n\t      }\n\t    }, {\n\t      key: 'componentDidUpdate',\n\t      value: function componentDidUpdate() {\n\t        var _this2 = this;\n\t\n\t        if (styles.svg) {\n\t          (function () {\n\t            var morphShape = _reactDom2['default'].findDOMNode(_this2, 'bm-morph-shape');\n\t            var path = styles.svg.lib(morphShape).select('path');\n\t\n\t            if (_this2.state.isOpen) {\n\t              // Animate SVG path.\n\t              styles.svg.animate(path);\n\t            } else {\n\t              // Reset path (timeout ensures animation happens off screen).\n\t              setTimeout(function () {\n\t                path.attr('d', styles.svg.pathInitial);\n\t              }, 300);\n\t            }\n\t          })();\n\t        }\n\t      }\n\t    }, {\n\t      key: 'componentWillReceiveProps',\n\t      value: function componentWillReceiveProps(nextProps) {\n\t        if (typeof nextProps.isOpen !== 'undefined' && nextProps.isOpen !== this.state.isOpen) {\n\t          this.toggleMenu();\n\t        }\n\t      }\n\t    }, {\n\t      key: 'render',\n\t      value: function render() {\n\t        var _this3 = this;\n\t\n\t        return _react2['default'].createElement(\n\t          'div',\n\t          null,\n\t          !this.props.noOverlay && _react2['default'].createElement('div', {\n\t            className: ('bm-overlay ' + this.props.overlayClassName).trim(),\n\t            onClick: function () {\n\t              return !_this3.shouldDisableOverlayClick() && _this3.toggleMenu();\n\t            },\n\t            style: this.getStyles('overlay')\n\t          }),\n\t          _react2['default'].createElement(\n\t            'div',\n\t            {\n\t              id: this.props.id,\n\t              className: ('bm-menu-wrap ' + this.props.className).trim(),\n\t              style: this.getStyles('menuWrap')\n\t            },\n\t            styles.svg && _react2['default'].createElement(\n\t              'div',\n\t              {\n\t                className: ('bm-morph-shape ' + this.props.morphShapeClassName).trim(),\n\t                style: this.getStyles('morphShape')\n\t              },\n\t              _react2['default'].createElement(\n\t                'svg',\n\t                {\n\t                  width: '100%',\n\t                  height: '100%',\n\t                  viewBox: '0 0 100 800',\n\t                  preserveAspectRatio: 'none'\n\t                },\n\t                _react2['default'].createElement('path', { d: styles.svg.pathInitial })\n\t              )\n\t            ),\n\t            _react2['default'].createElement(\n\t              'div',\n\t              {\n\t                className: ('bm-menu ' + this.props.menuClassName).trim(),\n\t                style: this.getStyles('menu')\n\t              },\n\t              _react2['default'].createElement(\n\t                'nav',\n\t                {\n\t                  className: ('bm-item-list ' + this.props.itemListClassName).trim(),\n\t                  style: this.getStyles('itemList')\n\t                },\n\t                _react2['default'].Children.map(this.props.children, function (item, index) {\n\t                  if (item) {\n\t                    var extraProps = {\n\t                      key: index,\n\t                      style: _this3.getStyles('item', index, item.props.style)\n\t                    };\n\t                    return _react2['default'].cloneElement(item, extraProps);\n\t                  }\n\t                })\n\t              )\n\t            ),\n\t            this.props.customCrossIcon !== false && _react2['default'].createElement(\n\t              'div',\n\t              { style: this.getStyles('closeButton') },\n\t              _react2['default'].createElement(_CrossIcon2['default'], {\n\t                onClick: function () {\n\t                  return _this3.toggleMenu();\n\t                },\n\t                styles: this.props.styles,\n\t                customIcon: this.props.customCrossIcon,\n\t                className: this.props.crossButtonClassName,\n\t                crossClassName: this.props.crossClassName\n\t              })\n\t            )\n\t          ),\n\t          this.props.customBurgerIcon !== false && _react2['default'].createElement(\n\t            'div',\n\t            { style: this.getStyles('burgerIcon') },\n\t            _react2['default'].createElement(_BurgerIcon2['default'], {\n\t              onClick: function () {\n\t                return _this3.toggleMenu();\n\t              },\n\t              styles: this.props.styles,\n\t              customIcon: this.props.customBurgerIcon,\n\t              className: this.props.burgerButtonClassName,\n\t              barClassName: this.props.burgerBarClassName\n\t            })\n\t          )\n\t        );\n\t      }\n\t    }]);\n\t\n\t    return Menu;\n\t  })(_react.Component);\n\t\n\t  Menu.propTypes = {\n\t    bodyClassName: _propTypes2['default'].string,\n\t    burgerBarClassName: _propTypes2['default'].string,\n\t    burgerButtonClassName: _propTypes2['default'].string,\n\t    crossButtonClassName: _propTypes2['default'].string,\n\t    crossClassName: _propTypes2['default'].string,\n\t    customBurgerIcon: _propTypes2['default'].oneOfType([_propTypes2['default'].element, _propTypes2['default'].oneOf([false])]),\n\t    customCrossIcon: _propTypes2['default'].oneOfType([_propTypes2['default'].element, _propTypes2['default'].oneOf([false])]),\n\t    customOnKeyDown: _propTypes2['default'].func,\n\t    disableCloseOnEsc: _propTypes2['default'].bool,\n\t    disableOverlayClick: _propTypes2['default'].oneOfType([_propTypes2['default'].bool, _propTypes2['default'].func]),\n\t    id: _propTypes2['default'].string,\n\t    isOpen: _propTypes2['default'].bool,\n\t    itemListClassName: _propTypes2['default'].string,\n\t    menuClassName: _propTypes2['default'].string,\n\t    morphShapeClassName: _propTypes2['default'].string,\n\t    noOverlay: _propTypes2['default'].bool,\n\t    onStateChange: _propTypes2['default'].func,\n\t    outerContainerId: styles && styles.outerContainer ? _propTypes2['default'].string.isRequired : _propTypes2['default'].string,\n\t    overlayClassName: _propTypes2['default'].string,\n\t    pageWrapId: styles && styles.pageWrap ? _propTypes2['default'].string.isRequired : _propTypes2['default'].string,\n\t    right: _propTypes2['default'].bool,\n\t    styles: _propTypes2['default'].object,\n\t    width: _propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].string])\n\t  };\n\t\n\t  Menu.defaultProps = {\n\t    bodyClassName: '',\n\t    burgerBarClassName: '',\n\t    burgerButtonClassName: '',\n\t    className: '',\n\t    crossButtonClassName: '',\n\t    crossClassName: '',\n\t    disableCloseOnEsc: false,\n\t    id: '',\n\t    itemListClassName: '',\n\t    menuClassName: '',\n\t    morphShapeClassName: '',\n\t    noOverlay: false,\n\t    onStateChange: function onStateChange() {},\n\t    outerContainerId: '',\n\t    overlayClassName: '',\n\t    pageWrapId: '',\n\t    styles: {},\n\t    width: 300\n\t  };\n\t\n\t  return Menu;\n\t};\n\t\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1193:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _snapsvgImporter = __webpack_require__(405);\n\t\n\tvar _snapsvgImporter2 = _interopRequireDefault(_snapsvgImporter);\n\t\n\tvar _menuFactory = __webpack_require__(51);\n\t\n\tvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\t\n\tvar styles = {\n\t  svg: {\n\t    lib: _snapsvgImporter2['default'],\n\t    pathInitial: 'M-7.312,0H0c0,0,0,113.839,0,400c0,264.506,0,400,0,400h-7.312V0z',\n\t    pathOpen: 'M-7.312,0H15c0,0,66,113.339,66,399.5C81,664.006,15,800,15,800H-7.312V0z;M-7.312,0H100c0,0,0,113.839,0,400c0,264.506,0,400,0,400H-7.312V0z',\n\t    animate: function animate(path) {\n\t      var pos = 0;\n\t      var steps = this.pathOpen.split(';');\n\t      var stepsTotal = steps.length;\n\t      var mina = window.mina;\n\t\n\t      var nextStep = function nextStep() {\n\t        if (pos > stepsTotal - 1) return;\n\t\n\t        path.animate({ path: steps[pos] }, pos === 0 ? 400 : 500, pos === 0 ? mina.easein : mina.elastic, function () {\n\t          nextStep();\n\t        });\n\t\n\t        pos++;\n\t      };\n\t\n\t      nextStep();\n\t    }\n\t  },\n\t\n\t  morphShape: function morphShape(isOpen, width, right) {\n\t    return {\n\t      position: 'absolute',\n\t      width: '100%',\n\t      height: '100%',\n\t      right: right ? 'inherit' : 0,\n\t      left: right ? 0 : 'inherit',\n\t      MozTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n\t      MsTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n\t      OTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n\t      WebkitTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n\t      transform: right ? 'rotateY(180deg)' : 'rotateY(0deg)'\n\t    };\n\t  },\n\t\n\t  menuWrap: function menuWrap(isOpen, width, right) {\n\t    return {\n\t      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n\t      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n\t      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n\t      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n\t      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n\t      transition: isOpen ? 'transform 0.4s 0s' : 'transform 0.4s'\n\t    };\n\t  },\n\t\n\t  menu: function menu(isOpen, width, right) {\n\t    width -= 140;\n\t    return {\n\t      position: 'fixed',\n\t      MozTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      MsTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      OTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      WebkitTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      transform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      transition: isOpen ? 'opacity 0.1s 0.4s cubic-bezier(.17, .67, .1, 1.27), transform 0.1s 0.4s cubic-bezier(.17, .67, .1, 1.27)' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n\t      opacity: isOpen ? 1 : 0\n\t    };\n\t  },\n\t\n\t  item: function item(isOpen, width, right, nthChild) {\n\t    width -= 140;\n\t    return {\n\t      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      transition: isOpen ? 'opacity 0.3s 0.4s, transform 0.3s 0.4s' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n\t      opacity: isOpen ? 1 : 0\n\t    };\n\t  },\n\t\n\t  closeButton: function closeButton(isOpen, width, right) {\n\t    width -= 140;\n\t    return {\n\t      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      transition: isOpen ? 'opacity 0.3s 0.4s cubic-bezier(.17, .67, .1, 1.27), transform 0.3s 0.4s cubic-bezier(.17, .67, .1, 1.27)' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n\t      opacity: isOpen ? 1 : 0\n\t    };\n\t  }\n\t};\n\t\n\texports['default'] = (0, _menuFactory2['default'])(styles);\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1194:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _snapsvgImporter = __webpack_require__(405);\n\t\n\tvar _snapsvgImporter2 = _interopRequireDefault(_snapsvgImporter);\n\t\n\tvar _menuFactory = __webpack_require__(51);\n\t\n\tvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\t\n\tvar styles = {\n\t  svg: {\n\t    lib: _snapsvgImporter2['default'],\n\t    pathInitial: 'M-1,0h101c0,0-97.833,153.603-97.833,396.167C2.167,627.579,100,800,100,800H-1V0z',\n\t    pathOpen: 'M-1,0h101c0,0,0-1,0,395c0,404,0,405,0,405H-1V0z',\n\t    animate: function animate(path) {\n\t      path.animate({ path: this.pathOpen }, 400, window.mina.easeinout);\n\t    }\n\t  },\n\t\n\t  morphShape: function morphShape(isOpen, width, right) {\n\t    return {\n\t      position: 'absolute',\n\t      width: 120,\n\t      height: '100%',\n\t      right: right ? 'inherit' : 0,\n\t      left: right ? 0 : 'inherit',\n\t      MozTransform: right ? 'rotateY(180deg)' : '',\n\t      MsTransform: right ? 'rotateY(180deg)' : '',\n\t      OTransform: right ? 'rotateY(180deg)' : '',\n\t      WebkitTransform: right ? 'rotateY(180deg)' : '',\n\t      transform: right ? 'rotateY(180deg)' : ''\n\t    };\n\t  },\n\t\n\t  menuWrap: function menuWrap(isOpen, width, right) {\n\t    return {\n\t      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n\t      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n\t      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n\t      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n\t      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n\t      transition: 'all 0.3s'\n\t    };\n\t  },\n\t\n\t  menu: function menu(isOpen, width, right) {\n\t    return {\n\t      position: 'fixed',\n\t      right: right ? 0 : 'inherit',\n\t      width: 180,\n\t      whiteSpace: 'nowrap',\n\t      boxSizing: 'border-box',\n\t      overflow: 'visible'\n\t    };\n\t  },\n\t\n\t  itemList: function itemList(isOpen, width, right) {\n\t    if (right) {\n\t      return {\n\t        position: 'relative',\n\t        left: '-110px',\n\t        width: '170%',\n\t        overflow: 'auto'\n\t      };\n\t    }\n\t  },\n\t\n\t  pageWrap: function pageWrap(isOpen, width, right) {\n\t    return {\n\t      MozTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n\t      MsTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n\t      OTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n\t      WebkitTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n\t      transform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n\t      transition: isOpen ? 'all 0.3s' : 'all 0.3s 0.1s'\n\t    };\n\t  },\n\t\n\t  outerContainer: function outerContainer(isOpen) {\n\t    return {\n\t      overflow: isOpen ? '' : 'hidden'\n\t    };\n\t  }\n\t};\n\t\n\texports['default'] = (0, _menuFactory2['default'])(styles);\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1195:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _menuFactory = __webpack_require__(51);\n\t\n\tvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\t\n\tvar styles = {\n\t  menuWrap: function menuWrap(isOpen) {\n\t    return {\n\t      MozTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n\t      MsTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n\t      OTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n\t      WebkitTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n\t      transform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n\t      transition: 'all 0.5s ease-in-out'\n\t    };\n\t  },\n\t\n\t  pageWrap: function pageWrap(isOpen, width, right) {\n\t    return {\n\t      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n\t      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n\t      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n\t      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n\t      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n\t      transition: 'all 0.5s'\n\t    };\n\t  },\n\t\n\t  outerContainer: function outerContainer(isOpen) {\n\t    return {\n\t      perspective: '1500px',\n\t      perspectiveOrigin: '0% 50%',\n\t      overflow: isOpen ? '' : 'hidden'\n\t    };\n\t  }\n\t};\n\t\n\texports['default'] = (0, _menuFactory2['default'])(styles);\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1196:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _menuFactory = __webpack_require__(51);\n\t\n\tvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\t\n\tvar styles = {\n\t  pageWrap: function pageWrap(isOpen, width, right) {\n\t    return {\n\t      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n\t      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n\t      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n\t      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n\t      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n\t      transition: 'all 0.5s'\n\t    };\n\t  },\n\t\n\t  outerContainer: function outerContainer(isOpen) {\n\t    return {\n\t      overflow: isOpen ? '' : 'hidden'\n\t    };\n\t  }\n\t};\n\t\n\texports['default'] = (0, _menuFactory2['default'])(styles);\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1197:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _menuFactory = __webpack_require__(51);\n\t\n\tvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\t\n\tvar styles = {\n\t  pageWrap: function pageWrap(isOpen, width, right) {\n\t    return {\n\t      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n\t      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n\t      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n\t      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n\t      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n\t      transformOrigin: right ? '100% 50%' : '0% 50%',\n\t      transformStyle: 'preserve-3d',\n\t      transition: 'all 0.5s'\n\t    };\n\t  },\n\t\n\t  outerContainer: function outerContainer(isOpen) {\n\t    return {\n\t      perspective: '1500px',\n\t      overflow: isOpen ? '' : 'hidden'\n\t    };\n\t  }\n\t};\n\t\n\texports['default'] = (0, _menuFactory2['default'])(styles);\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1198:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _menuFactory = __webpack_require__(51);\n\t\n\tvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\t\n\tvar styles = {\n\t  menuWrap: function menuWrap(isOpen, width, right) {\n\t    return {\n\t      visibility: isOpen ? 'visible' : 'hidden',\n\t      MozTransform: 'translate3d(0, 0, 0)',\n\t      MsTransform: 'translate3d(0, 0, 0)',\n\t      OTransform: 'translate3d(0, 0, 0)',\n\t      WebkitTransform: 'translate3d(0, 0, 0)',\n\t      transform: 'translate3d(0, 0, 0)',\n\t      zIndex: 1000\n\t    };\n\t  },\n\t\n\t  overlay: function overlay(isOpen, width, right) {\n\t    return {\n\t      zIndex: 1400,\n\t      MozTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n\t      MsTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n\t      OTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n\t      WebkitTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n\t      transform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n\t      transition: 'all 0.5s',\n\t      visibility: isOpen ? 'visible' : 'hidden'\n\t    };\n\t  },\n\t\n\t  pageWrap: function pageWrap(isOpen, width, right) {\n\t    return {\n\t      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n\t      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n\t      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n\t      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n\t      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n\t      transition: 'all 0.5s',\n\t      zIndex: 1200,\n\t      position: 'relative'\n\t    };\n\t  },\n\t\n\t  burgerIcon: function burgerIcon(isOpen, width, right) {\n\t    return {\n\t      MozTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n\t      MsTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n\t      OTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n\t      WebkitTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n\t      transform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n\t      transition: 'all 0.1s',\n\t      position: 'relative',\n\t      zIndex: 1300\n\t    };\n\t  },\n\t\n\t  outerContainer: function outerContainer(isOpen) {\n\t    return {\n\t      overflow: isOpen ? '' : 'hidden'\n\t    };\n\t  }\n\t};\n\t\n\texports['default'] = (0, _menuFactory2['default'])(styles);\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1199:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _menuFactory = __webpack_require__(51);\n\t\n\tvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\t\n\tvar styles = {\n\t  pageWrap: function pageWrap(isOpen, width) {\n\t    return {\n\t      MozTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n\t      MsTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n\t      OTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n\t      WebkitTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n\t      transform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n\t      transformOrigin: '100%',\n\t      transformStyle: 'preserve-3d',\n\t      transition: 'all 0.5s'\n\t    };\n\t  },\n\t\n\t  outerContainer: function outerContainer() {\n\t    return {\n\t      perspective: '1500px'\n\t    };\n\t  }\n\t};\n\t\n\texports['default'] = (0, _menuFactory2['default'])(styles);\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1200:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _menuFactory = __webpack_require__(51);\n\t\n\tvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\t\n\tvar styles = {\n\t  pageWrap: function pageWrap(isOpen, width, right) {\n\t    return {\n\t      MozTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n\t      MsTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n\t      OTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n\t      WebkitTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n\t      transform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n\t      transformStyle: 'preserve-3d',\n\t      transition: 'all 0.5s',\n\t      overflow: isOpen ? '' : 'hidden'\n\t    };\n\t  },\n\t\n\t  outerContainer: function outerContainer(isOpen) {\n\t    return {\n\t      perspective: '1500px',\n\t      overflow: isOpen ? '' : 'hidden'\n\t    };\n\t  }\n\t};\n\t\n\texports['default'] = (0, _menuFactory2['default'])(styles);\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1201:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _menuFactory = __webpack_require__(51);\n\t\n\tvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\t\n\tvar styles = {};\n\t\n\texports['default'] = (0, _menuFactory2['default'])(styles);\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1202:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _menuFactory = __webpack_require__(51);\n\t\n\tvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\t\n\tvar styles = {\n\t  menuWrap: function menuWrap(isOpen, width, right) {\n\t    return {\n\t      MozTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      MsTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      OTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      WebkitTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      transform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n\t      transition: isOpen ? 'transform 0.8s cubic-bezier(0.7, 0, 0.3, 1)' : 'transform 0.4s cubic-bezier(0.7, 0, 0.3, 1)'\n\t    };\n\t  },\n\t\n\t  item: function item(isOpen, width, right, nthChild) {\n\t    return {\n\t      MozTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n\t      MsTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n\t      OTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n\t      WebkitTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n\t      transform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n\t      transition: isOpen ? 'transform 0.8s cubic-bezier(0.7, 0, 0.3, 1)' : 'transform 0s 0.2s cubic-bezier(0.7, 0, 0.3, 1)'\n\t    };\n\t  }\n\t};\n\t\n\texports['default'] = (0, _menuFactory2['default'])(styles);\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 405:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\texports['default'] = function () {\n\t  var Snap = undefined;\n\t  try {\n\t    Snap = __webpack_require__(1291);\n\t  } finally {\n\t    return Snap;\n\t  }\n\t};\n\t\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1291:\n/***/ (function(module, exports, __webpack_require__) {\n\n\twindow.eve = __webpack_require__(827)\n\t\n\t// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n\t//\n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t//\n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t//\n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\tvar mina = (function (eve) {\n\t    var animations = {},\n\t    requestAnimFrame = window.requestAnimationFrame       ||\n\t                       window.webkitRequestAnimationFrame ||\n\t                       window.mozRequestAnimationFrame    ||\n\t                       window.oRequestAnimationFrame      ||\n\t                       window.msRequestAnimationFrame     ||\n\t                       function (callback) {\n\t                           setTimeout(callback, 16, new Date().getTime());\n\t                           return true;\n\t                       },\n\t    requestID,\n\t    isArray = Array.isArray || function (a) {\n\t        return a instanceof Array ||\n\t            Object.prototype.toString.call(a) == \"[object Array]\";\n\t    },\n\t    idgen = 0,\n\t    idprefix = \"M\" + (+new Date).toString(36),\n\t    ID = function () {\n\t        return idprefix + (idgen++).toString(36);\n\t    },\n\t    diff = function (a, b, A, B) {\n\t        if (isArray(a)) {\n\t            res = [];\n\t            for (var i = 0, ii = a.length; i < ii; i++) {\n\t                res[i] = diff(a[i], b, A[i], B);\n\t            }\n\t            return res;\n\t        }\n\t        var dif = (A - a) / (B - b);\n\t        return function (bb) {\n\t            return a + dif * (bb - b);\n\t        };\n\t    },\n\t    timer = Date.now || function () {\n\t        return +new Date;\n\t    },\n\t    sta = function (val) {\n\t        var a = this;\n\t        if (val == null) {\n\t            return a.s;\n\t        }\n\t        var ds = a.s - val;\n\t        a.b += a.dur * ds;\n\t        a.B += a.dur * ds;\n\t        a.s = val;\n\t    },\n\t    speed = function (val) {\n\t        var a = this;\n\t        if (val == null) {\n\t            return a.spd;\n\t        }\n\t        a.spd = val;\n\t    },\n\t    duration = function (val) {\n\t        var a = this;\n\t        if (val == null) {\n\t            return a.dur;\n\t        }\n\t        a.s = a.s * val / a.dur;\n\t        a.dur = val;\n\t    },\n\t    stopit = function () {\n\t        var a = this;\n\t        delete animations[a.id];\n\t        a.update();\n\t        eve(\"mina.stop.\" + a.id, a);\n\t    },\n\t    pause = function () {\n\t        var a = this;\n\t        if (a.pdif) {\n\t            return;\n\t        }\n\t        delete animations[a.id];\n\t        a.update();\n\t        a.pdif = a.get() - a.b;\n\t    },\n\t    resume = function () {\n\t        var a = this;\n\t        if (!a.pdif) {\n\t            return;\n\t        }\n\t        a.b = a.get() - a.pdif;\n\t        delete a.pdif;\n\t        animations[a.id] = a;\n\t        frame();\n\t    },\n\t    update = function () {\n\t        var a = this,\n\t            res;\n\t        if (isArray(a.start)) {\n\t            res = [];\n\t            for (var j = 0, jj = a.start.length; j < jj; j++) {\n\t                res[j] = +a.start[j] +\n\t                    (a.end[j] - a.start[j]) * a.easing(a.s);\n\t            }\n\t        } else {\n\t            res = +a.start + (a.end - a.start) * a.easing(a.s);\n\t        }\n\t        a.set(res);\n\t    },\n\t    frame = function (timeStamp) {\n\t        // Manual invokation?\n\t        if (!timeStamp) {\n\t            // Frame loop stopped?\n\t            if (!requestID) {\n\t                // Start frame loop...\n\t                requestID = requestAnimFrame(frame);\n\t            }\n\t            return;\n\t        }\n\t        var len = 0;\n\t        for (var i in animations) if (animations.hasOwnProperty(i)) {\n\t            var a = animations[i],\n\t                b = a.get(),\n\t                res;\n\t            len++;\n\t            a.s = (b - a.b) / (a.dur / a.spd);\n\t            if (a.s >= 1) {\n\t                delete animations[i];\n\t                a.s = 1;\n\t                len--;\n\t                (function (a) {\n\t                    setTimeout(function () {\n\t                        eve(\"mina.finish.\" + a.id, a);\n\t                    });\n\t                }(a));\n\t            }\n\t            a.update();\n\t        }\n\t        requestID = len ? requestAnimFrame(frame) : false;\n\t    },\n\t    /*\\\n\t     * mina\n\t     [ method ]\n\t     **\n\t     * Generic animation of numbers\n\t     **\n\t     - a (number) start _slave_ number\n\t     - A (number) end _slave_ number\n\t     - b (number) start _master_ number (start time in general case)\n\t     - B (number) end _master_ number (end time in general case)\n\t     - get (function) getter of _master_ number (see @mina.time)\n\t     - set (function) setter of _slave_ number\n\t     - easing (function) #optional easing function, default is @mina.linear\n\t     = (object) animation descriptor\n\t     o {\n\t     o         id (string) animation id,\n\t     o         start (number) start _slave_ number,\n\t     o         end (number) end _slave_ number,\n\t     o         b (number) start _master_ number,\n\t     o         s (number) animation status (0..1),\n\t     o         dur (number) animation duration,\n\t     o         spd (number) animation speed,\n\t     o         get (function) getter of _master_ number (see @mina.time),\n\t     o         set (function) setter of _slave_ number,\n\t     o         easing (function) easing function, default is @mina.linear,\n\t     o         status (function) status getter/setter,\n\t     o         speed (function) speed getter/setter,\n\t     o         duration (function) duration getter/setter,\n\t     o         stop (function) animation stopper\n\t     o         pause (function) pauses the animation\n\t     o         resume (function) resumes the animation\n\t     o         update (function) calles setter with the right value of the animation\n\t     o }\n\t    \\*/\n\t    mina = function (a, A, b, B, get, set, easing) {\n\t        var anim = {\n\t            id: ID(),\n\t            start: a,\n\t            end: A,\n\t            b: b,\n\t            s: 0,\n\t            dur: B - b,\n\t            spd: 1,\n\t            get: get,\n\t            set: set,\n\t            easing: easing || mina.linear,\n\t            status: sta,\n\t            speed: speed,\n\t            duration: duration,\n\t            stop: stopit,\n\t            pause: pause,\n\t            resume: resume,\n\t            update: update\n\t        };\n\t        animations[anim.id] = anim;\n\t        var len = 0, i;\n\t        for (i in animations) if (animations.hasOwnProperty(i)) {\n\t            len++;\n\t            if (len == 2) {\n\t                break;\n\t            }\n\t        }\n\t        len == 1 && frame();\n\t        return anim;\n\t    };\n\t    /*\\\n\t     * mina.time\n\t     [ method ]\n\t     **\n\t     * Returns the current time. Equivalent to:\n\t     | function () {\n\t     |     return (new Date).getTime();\n\t     | }\n\t    \\*/\n\t    mina.time = timer;\n\t    /*\\\n\t     * mina.getById\n\t     [ method ]\n\t     **\n\t     * Returns an animation by its id\n\t     - id (string) animation's id\n\t     = (object) See @mina\n\t    \\*/\n\t    mina.getById = function (id) {\n\t        return animations[id] || null;\n\t    };\n\t\n\t    /*\\\n\t     * mina.linear\n\t     [ method ]\n\t     **\n\t     * Default linear easing\n\t     - n (number) input 0..1\n\t     = (number) output 0..1\n\t    \\*/\n\t    mina.linear = function (n) {\n\t        return n;\n\t    };\n\t    /*\\\n\t     * mina.easeout\n\t     [ method ]\n\t     **\n\t     * Easeout easing\n\t     - n (number) input 0..1\n\t     = (number) output 0..1\n\t    \\*/\n\t    mina.easeout = function (n) {\n\t        return Math.pow(n, 1.7);\n\t    };\n\t    /*\\\n\t     * mina.easein\n\t     [ method ]\n\t     **\n\t     * Easein easing\n\t     - n (number) input 0..1\n\t     = (number) output 0..1\n\t    \\*/\n\t    mina.easein = function (n) {\n\t        return Math.pow(n, .48);\n\t    };\n\t    /*\\\n\t     * mina.easeinout\n\t     [ method ]\n\t     **\n\t     * Easeinout easing\n\t     - n (number) input 0..1\n\t     = (number) output 0..1\n\t    \\*/\n\t    mina.easeinout = function (n) {\n\t        if (n == 1) {\n\t            return 1;\n\t        }\n\t        if (n == 0) {\n\t            return 0;\n\t        }\n\t        var q = .48 - n / 1.04,\n\t            Q = Math.sqrt(.1734 + q * q),\n\t            x = Q - q,\n\t            X = Math.pow(Math.abs(x), 1 / 3) * (x < 0 ? -1 : 1),\n\t            y = -Q - q,\n\t            Y = Math.pow(Math.abs(y), 1 / 3) * (y < 0 ? -1 : 1),\n\t            t = X + Y + .5;\n\t        return (1 - t) * 3 * t * t + t * t * t;\n\t    };\n\t    /*\\\n\t     * mina.backin\n\t     [ method ]\n\t     **\n\t     * Backin easing\n\t     - n (number) input 0..1\n\t     = (number) output 0..1\n\t    \\*/\n\t    mina.backin = function (n) {\n\t        if (n == 1) {\n\t            return 1;\n\t        }\n\t        var s = 1.70158;\n\t        return n * n * ((s + 1) * n - s);\n\t    };\n\t    /*\\\n\t     * mina.backout\n\t     [ method ]\n\t     **\n\t     * Backout easing\n\t     - n (number) input 0..1\n\t     = (number) output 0..1\n\t    \\*/\n\t    mina.backout = function (n) {\n\t        if (n == 0) {\n\t            return 0;\n\t        }\n\t        n = n - 1;\n\t        var s = 1.70158;\n\t        return n * n * ((s + 1) * n + s) + 1;\n\t    };\n\t    /*\\\n\t     * mina.elastic\n\t     [ method ]\n\t     **\n\t     * Elastic easing\n\t     - n (number) input 0..1\n\t     = (number) output 0..1\n\t    \\*/\n\t    mina.elastic = function (n) {\n\t        if (n == !!n) {\n\t            return n;\n\t        }\n\t        return Math.pow(2, -10 * n) * Math.sin((n - .075) *\n\t            (2 * Math.PI) / .3) + 1;\n\t    };\n\t    /*\\\n\t     * mina.bounce\n\t     [ method ]\n\t     **\n\t     * Bounce easing\n\t     - n (number) input 0..1\n\t     = (number) output 0..1\n\t    \\*/\n\t    mina.bounce = function (n) {\n\t        var s = 7.5625,\n\t            p = 2.75,\n\t            l;\n\t        if (n < 1 / p) {\n\t            l = s * n * n;\n\t        } else {\n\t            if (n < 2 / p) {\n\t                n -= 1.5 / p;\n\t                l = s * n * n + .75;\n\t            } else {\n\t                if (n < 2.5 / p) {\n\t                    n -= 2.25 / p;\n\t                    l = s * n * n + .9375;\n\t                } else {\n\t                    n -= 2.625 / p;\n\t                    l = s * n * n + .984375;\n\t                }\n\t            }\n\t        }\n\t        return l;\n\t    };\n\t    window.mina = mina;\n\t    return mina;\n\t})(typeof eve == \"undefined\" ? function () {} : eve);\n\t\n\t// Copyright (c) 2013 - 2017 Adobe Systems Incorporated. All rights reserved.\n\t//\n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t//\n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t//\n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\t\n\tvar Snap = (function(root) {\n\tSnap.version = \"0.5.1\";\n\t/*\\\n\t * Snap\n\t [ method ]\n\t **\n\t * Creates a drawing surface or wraps existing SVG element.\n\t **\n\t - width (number|string) width of surface\n\t - height (number|string) height of surface\n\t * or\n\t - DOM (SVGElement) element to be wrapped into Snap structure\n\t * or\n\t - array (array) array of elements (will return set of elements)\n\t * or\n\t - query (string) CSS query selector\n\t = (object) @Element\n\t\\*/\n\tfunction Snap(w, h) {\n\t    if (w) {\n\t        if (w.nodeType) {\n\t            return wrap(w);\n\t        }\n\t        if (is(w, \"array\") && Snap.set) {\n\t            return Snap.set.apply(Snap, w);\n\t        }\n\t        if (w instanceof Element) {\n\t            return w;\n\t        }\n\t        if (h == null) {\n\t            try {\n\t                w = glob.doc.querySelector(String(w));\n\t                return wrap(w);\n\t            } catch (e) {\n\t                return null;\n\t            }\n\t        }\n\t    }\n\t    w = w == null ? \"100%\" : w;\n\t    h = h == null ? \"100%\" : h;\n\t    return new Paper(w, h);\n\t}\n\tSnap.toString = function () {\n\t    return \"Snap v\" + this.version;\n\t};\n\tSnap._ = {};\n\tvar glob = {\n\t    win: root.window,\n\t    doc: root.window.document\n\t};\n\tSnap._.glob = glob;\n\tvar has = \"hasOwnProperty\",\n\t    Str = String,\n\t    toFloat = parseFloat,\n\t    toInt = parseInt,\n\t    math = Math,\n\t    mmax = math.max,\n\t    mmin = math.min,\n\t    abs = math.abs,\n\t    pow = math.pow,\n\t    PI = math.PI,\n\t    round = math.round,\n\t    E = \"\",\n\t    S = \" \",\n\t    objectToString = Object.prototype.toString,\n\t    ISURL = /^url\\(['\"]?([^\\)]+?)['\"]?\\)$/i,\n\t    colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i,\n\t    bezierrg = /^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,\n\t    separator = Snap._.separator = /[,\\s]+/,\n\t    whitespace = /[\\s]/g,\n\t    commaSpaces = /[\\s]*,[\\s]*/,\n\t    hsrg = {hs: 1, rg: 1},\n\t    pathCommand = /([a-z])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n\t    tCommand = /([rstm])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n\t    pathValues = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\s]*,?[\\s]*/ig,\n\t    idgen = 0,\n\t    idprefix = \"S\" + (+new Date).toString(36),\n\t    ID = function (el) {\n\t        return (el && el.type ? el.type : E) + idprefix + (idgen++).toString(36);\n\t    },\n\t    xlink = \"http://www.w3.org/1999/xlink\",\n\t    xmlns = \"http://www.w3.org/2000/svg\",\n\t    hub = {},\n\t    /*\\\n\t     * Snap.url\n\t     [ method ]\n\t     **\n\t     * Wraps path into `\"url('<path>')\"`.\n\t     - value (string) path\n\t     = (string) wrapped path\n\t    \\*/\n\t    URL = Snap.url = function (url) {\n\t        return \"url('#\" + url + \"')\";\n\t    };\n\t\n\tfunction $(el, attr) {\n\t    if (attr) {\n\t        if (el == \"#text\") {\n\t            el = glob.doc.createTextNode(attr.text || attr[\"#text\"] || \"\");\n\t        }\n\t        if (el == \"#comment\") {\n\t            el = glob.doc.createComment(attr.text || attr[\"#text\"] || \"\");\n\t        }\n\t        if (typeof el == \"string\") {\n\t            el = $(el);\n\t        }\n\t        if (typeof attr == \"string\") {\n\t            if (el.nodeType == 1) {\n\t                if (attr.substring(0, 6) == \"xlink:\") {\n\t                    return el.getAttributeNS(xlink, attr.substring(6));\n\t                }\n\t                if (attr.substring(0, 4) == \"xml:\") {\n\t                    return el.getAttributeNS(xmlns, attr.substring(4));\n\t                }\n\t                return el.getAttribute(attr);\n\t            } else if (attr == \"text\") {\n\t                return el.nodeValue;\n\t            } else {\n\t                return null;\n\t            }\n\t        }\n\t        if (el.nodeType == 1) {\n\t            for (var key in attr) if (attr[has](key)) {\n\t                var val = Str(attr[key]);\n\t                if (val) {\n\t                    if (key.substring(0, 6) == \"xlink:\") {\n\t                        el.setAttributeNS(xlink, key.substring(6), val);\n\t                    } else if (key.substring(0, 4) == \"xml:\") {\n\t                        el.setAttributeNS(xmlns, key.substring(4), val);\n\t                    } else {\n\t                        el.setAttribute(key, val);\n\t                    }\n\t                } else {\n\t                    el.removeAttribute(key);\n\t                }\n\t            }\n\t        } else if (\"text\" in attr) {\n\t            el.nodeValue = attr.text;\n\t        }\n\t    } else {\n\t        el = glob.doc.createElementNS(xmlns, el);\n\t    }\n\t    return el;\n\t}\n\tSnap._.$ = $;\n\tSnap._.id = ID;\n\tfunction getAttrs(el) {\n\t    var attrs = el.attributes,\n\t        name,\n\t        out = {};\n\t    for (var i = 0; i < attrs.length; i++) {\n\t        if (attrs[i].namespaceURI == xlink) {\n\t            name = \"xlink:\";\n\t        } else {\n\t            name = \"\";\n\t        }\n\t        name += attrs[i].name;\n\t        out[name] = attrs[i].textContent;\n\t    }\n\t    return out;\n\t}\n\tfunction is(o, type) {\n\t    type = Str.prototype.toLowerCase.call(type);\n\t    if (type == \"finite\") {\n\t        return isFinite(o);\n\t    }\n\t    if (type == \"array\" &&\n\t        (o instanceof Array || Array.isArray && Array.isArray(o))) {\n\t        return true;\n\t    }\n\t    return  type == \"null\" && o === null ||\n\t            type == typeof o && o !== null ||\n\t            type == \"object\" && o === Object(o) ||\n\t            objectToString.call(o).slice(8, -1).toLowerCase() == type;\n\t}\n\t/*\\\n\t * Snap.format\n\t [ method ]\n\t **\n\t * Replaces construction of type `{<name>}` to the corresponding argument\n\t **\n\t - token (string) string to format\n\t - json (object) object which properties are used as a replacement\n\t = (string) formatted string\n\t > Usage\n\t | // this draws a rectangular shape equivalent to \"M10,20h40v50h-40z\"\n\t | paper.path(Snap.format(\"M{x},{y}h{dim.width}v{dim.height}h{dim['negative width']}z\", {\n\t |     x: 10,\n\t |     y: 20,\n\t |     dim: {\n\t |         width: 40,\n\t |         height: 50,\n\t |         \"negative width\": -40\n\t |     }\n\t | }));\n\t\\*/\n\tSnap.format = (function () {\n\t    var tokenRegex = /\\{([^\\}]+)\\}/g,\n\t        objNotationRegex = /(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g, // matches .xxxxx or [\"xxxxx\"] to run over object properties\n\t        replacer = function (all, key, obj) {\n\t            var res = obj;\n\t            key.replace(objNotationRegex, function (all, name, quote, quotedName, isFunc) {\n\t                name = name || quotedName;\n\t                if (res) {\n\t                    if (name in res) {\n\t                        res = res[name];\n\t                    }\n\t                    typeof res == \"function\" && isFunc && (res = res());\n\t                }\n\t            });\n\t            res = (res == null || res == obj ? all : res) + \"\";\n\t            return res;\n\t        };\n\t    return function (str, obj) {\n\t        return Str(str).replace(tokenRegex, function (all, key) {\n\t            return replacer(all, key, obj);\n\t        });\n\t    };\n\t})();\n\tfunction clone(obj) {\n\t    if (typeof obj == \"function\" || Object(obj) !== obj) {\n\t        return obj;\n\t    }\n\t    var res = new obj.constructor;\n\t    for (var key in obj) if (obj[has](key)) {\n\t        res[key] = clone(obj[key]);\n\t    }\n\t    return res;\n\t}\n\tSnap._.clone = clone;\n\tfunction repush(array, item) {\n\t    for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\n\t        return array.push(array.splice(i, 1)[0]);\n\t    }\n\t}\n\tfunction cacher(f, scope, postprocessor) {\n\t    function newf() {\n\t        var arg = Array.prototype.slice.call(arguments, 0),\n\t            args = arg.join(\"\\u2400\"),\n\t            cache = newf.cache = newf.cache || {},\n\t            count = newf.count = newf.count || [];\n\t        if (cache[has](args)) {\n\t            repush(count, args);\n\t            return postprocessor ? postprocessor(cache[args]) : cache[args];\n\t        }\n\t        count.length >= 1e3 && delete cache[count.shift()];\n\t        count.push(args);\n\t        cache[args] = f.apply(scope, arg);\n\t        return postprocessor ? postprocessor(cache[args]) : cache[args];\n\t    }\n\t    return newf;\n\t}\n\tSnap._.cacher = cacher;\n\tfunction angle(x1, y1, x2, y2, x3, y3) {\n\t    if (x3 == null) {\n\t        var x = x1 - x2,\n\t            y = y1 - y2;\n\t        if (!x && !y) {\n\t            return 0;\n\t        }\n\t        return (180 + math.atan2(-y, -x) * 180 / PI + 360) % 360;\n\t    } else {\n\t        return angle(x1, y1, x3, y3) - angle(x2, y2, x3, y3);\n\t    }\n\t}\n\tfunction rad(deg) {\n\t    return deg % 360 * PI / 180;\n\t}\n\tfunction deg(rad) {\n\t    return rad * 180 / PI % 360;\n\t}\n\tfunction x_y() {\n\t    return this.x + S + this.y;\n\t}\n\tfunction x_y_w_h() {\n\t    return this.x + S + this.y + S + this.width + \" \\xd7 \" + this.height;\n\t}\n\t\n\t/*\\\n\t * Snap.rad\n\t [ method ]\n\t **\n\t * Transform angle to radians\n\t - deg (number) angle in degrees\n\t = (number) angle in radians\n\t\\*/\n\tSnap.rad = rad;\n\t/*\\\n\t * Snap.deg\n\t [ method ]\n\t **\n\t * Transform angle to degrees\n\t - rad (number) angle in radians\n\t = (number) angle in degrees\n\t\\*/\n\tSnap.deg = deg;\n\t/*\\\n\t * Snap.sin\n\t [ method ]\n\t **\n\t * Equivalent to `Math.sin()` only works with degrees, not radians.\n\t - angle (number) angle in degrees\n\t = (number) sin\n\t\\*/\n\tSnap.sin = function (angle) {\n\t    return math.sin(Snap.rad(angle));\n\t};\n\t/*\\\n\t * Snap.tan\n\t [ method ]\n\t **\n\t * Equivalent to `Math.tan()` only works with degrees, not radians.\n\t - angle (number) angle in degrees\n\t = (number) tan\n\t\\*/\n\tSnap.tan = function (angle) {\n\t    return math.tan(Snap.rad(angle));\n\t};\n\t/*\\\n\t * Snap.cos\n\t [ method ]\n\t **\n\t * Equivalent to `Math.cos()` only works with degrees, not radians.\n\t - angle (number) angle in degrees\n\t = (number) cos\n\t\\*/\n\tSnap.cos = function (angle) {\n\t    return math.cos(Snap.rad(angle));\n\t};\n\t/*\\\n\t * Snap.asin\n\t [ method ]\n\t **\n\t * Equivalent to `Math.asin()` only works with degrees, not radians.\n\t - num (number) value\n\t = (number) asin in degrees\n\t\\*/\n\tSnap.asin = function (num) {\n\t    return Snap.deg(math.asin(num));\n\t};\n\t/*\\\n\t * Snap.acos\n\t [ method ]\n\t **\n\t * Equivalent to `Math.acos()` only works with degrees, not radians.\n\t - num (number) value\n\t = (number) acos in degrees\n\t\\*/\n\tSnap.acos = function (num) {\n\t    return Snap.deg(math.acos(num));\n\t};\n\t/*\\\n\t * Snap.atan\n\t [ method ]\n\t **\n\t * Equivalent to `Math.atan()` only works with degrees, not radians.\n\t - num (number) value\n\t = (number) atan in degrees\n\t\\*/\n\tSnap.atan = function (num) {\n\t    return Snap.deg(math.atan(num));\n\t};\n\t/*\\\n\t * Snap.atan2\n\t [ method ]\n\t **\n\t * Equivalent to `Math.atan2()` only works with degrees, not radians.\n\t - num (number) value\n\t = (number) atan2 in degrees\n\t\\*/\n\tSnap.atan2 = function (num) {\n\t    return Snap.deg(math.atan2(num));\n\t};\n\t/*\\\n\t * Snap.angle\n\t [ method ]\n\t **\n\t * Returns an angle between two or three points\n\t - x1 (number) x coord of first point\n\t - y1 (number) y coord of first point\n\t - x2 (number) x coord of second point\n\t - y2 (number) y coord of second point\n\t - x3 (number) #optional x coord of third point\n\t - y3 (number) #optional y coord of third point\n\t = (number) angle in degrees\n\t\\*/\n\tSnap.angle = angle;\n\t/*\\\n\t * Snap.len\n\t [ method ]\n\t **\n\t * Returns distance between two points\n\t - x1 (number) x coord of first point\n\t - y1 (number) y coord of first point\n\t - x2 (number) x coord of second point\n\t - y2 (number) y coord of second point\n\t = (number) distance\n\t\\*/\n\tSnap.len = function (x1, y1, x2, y2) {\n\t    return Math.sqrt(Snap.len2(x1, y1, x2, y2));\n\t};\n\t/*\\\n\t * Snap.len2\n\t [ method ]\n\t **\n\t * Returns squared distance between two points\n\t - x1 (number) x coord of first point\n\t - y1 (number) y coord of first point\n\t - x2 (number) x coord of second point\n\t - y2 (number) y coord of second point\n\t = (number) distance\n\t\\*/\n\tSnap.len2 = function (x1, y1, x2, y2) {\n\t    return (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n\t};\n\t/*\\\n\t * Snap.closestPoint\n\t [ method ]\n\t **\n\t * Returns closest point to a given one on a given path.\n\t - path (Element) path element\n\t - x (number) x coord of a point\n\t - y (number) y coord of a point\n\t = (object) in format\n\t {\n\t    x (number) x coord of the point on the path\n\t    y (number) y coord of the point on the path\n\t    length (number) length of the path to the point\n\t    distance (number) distance from the given point to the path\n\t }\n\t\\*/\n\t// Copied from http://bl.ocks.org/mbostock/8027637\n\tSnap.closestPoint = function (path, x, y) {\n\t    function distance2(p) {\n\t        var dx = p.x - x,\n\t            dy = p.y - y;\n\t        return dx * dx + dy * dy;\n\t    }\n\t    var pathNode = path.node,\n\t        pathLength = pathNode.getTotalLength(),\n\t        precision = pathLength / pathNode.pathSegList.numberOfItems * .125,\n\t        best,\n\t        bestLength,\n\t        bestDistance = Infinity;\n\t\n\t    // linear scan for coarse approximation\n\t    for (var scan, scanLength = 0, scanDistance; scanLength <= pathLength; scanLength += precision) {\n\t        if ((scanDistance = distance2(scan = pathNode.getPointAtLength(scanLength))) < bestDistance) {\n\t            best = scan;\n\t            bestLength = scanLength;\n\t            bestDistance = scanDistance;\n\t        }\n\t    }\n\t\n\t    // binary search for precise estimate\n\t    precision *= .5;\n\t    while (precision > .5) {\n\t        var before,\n\t            after,\n\t            beforeLength,\n\t            afterLength,\n\t            beforeDistance,\n\t            afterDistance;\n\t        if ((beforeLength = bestLength - precision) >= 0 && (beforeDistance = distance2(before = pathNode.getPointAtLength(beforeLength))) < bestDistance) {\n\t            best = before;\n\t            bestLength = beforeLength;\n\t            bestDistance = beforeDistance;\n\t        } else if ((afterLength = bestLength + precision) <= pathLength && (afterDistance = distance2(after = pathNode.getPointAtLength(afterLength))) < bestDistance) {\n\t            best = after;\n\t            bestLength = afterLength;\n\t            bestDistance = afterDistance;\n\t        } else {\n\t            precision *= .5;\n\t        }\n\t    }\n\t\n\t    best = {\n\t        x: best.x,\n\t        y: best.y,\n\t        length: bestLength,\n\t        distance: Math.sqrt(bestDistance)\n\t    };\n\t    return best;\n\t}\n\t/*\\\n\t * Snap.is\n\t [ method ]\n\t **\n\t * Handy replacement for the `typeof` operator\n\t - o (…) any object or primitive\n\t - type (string) name of the type, e.g., `string`, `function`, `number`, etc.\n\t = (boolean) `true` if given value is of given type\n\t\\*/\n\tSnap.is = is;\n\t/*\\\n\t * Snap.snapTo\n\t [ method ]\n\t **\n\t * Snaps given value to given grid\n\t - values (array|number) given array of values or step of the grid\n\t - value (number) value to adjust\n\t - tolerance (number) #optional maximum distance to the target value that would trigger the snap. Default is `10`.\n\t = (number) adjusted value\n\t\\*/\n\tSnap.snapTo = function (values, value, tolerance) {\n\t    tolerance = is(tolerance, \"finite\") ? tolerance : 10;\n\t    if (is(values, \"array\")) {\n\t        var i = values.length;\n\t        while (i--) if (abs(values[i] - value) <= tolerance) {\n\t            return values[i];\n\t        }\n\t    } else {\n\t        values = +values;\n\t        var rem = value % values;\n\t        if (rem < tolerance) {\n\t            return value - rem;\n\t        }\n\t        if (rem > values - tolerance) {\n\t            return value - rem + values;\n\t        }\n\t    }\n\t    return value;\n\t};\n\t// Colour\n\t/*\\\n\t * Snap.getRGB\n\t [ method ]\n\t **\n\t * Parses color string as RGB object\n\t - color (string) color string in one of the following formats:\n\t # <ul>\n\t #     <li>Color name (<code>red</code>, <code>green</code>, <code>cornflowerblue</code>, etc)</li>\n\t #     <li>#••• — shortened HTML color: (<code>#000</code>, <code>#fc0</code>, etc.)</li>\n\t #     <li>#•••••• — full length HTML color: (<code>#000000</code>, <code>#bd2300</code>)</li>\n\t #     <li>rgb(•••, •••, •••) — red, green and blue channels values: (<code>rgb(200,&nbsp;100,&nbsp;0)</code>)</li>\n\t #     <li>rgba(•••, •••, •••, •••) — also with opacity</li>\n\t #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>)</li>\n\t #     <li>rgba(•••%, •••%, •••%, •••%) — also with opacity</li>\n\t #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>)</li>\n\t #     <li>hsba(•••, •••, •••, •••) — also with opacity</li>\n\t #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\n\t #     <li>hsba(•••%, •••%, •••%, •••%) — also with opacity</li>\n\t #     <li>hsl(•••, •••, •••) — hue, saturation and luminosity values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;0.5)</code>)</li>\n\t #     <li>hsla(•••, •••, •••, •••) — also with opacity</li>\n\t #     <li>hsl(•••%, •••%, •••%) — same as above, but in %</li>\n\t #     <li>hsla(•••%, •••%, •••%, •••%) — also with opacity</li>\n\t # </ul>\n\t * Note that `%` can be used any time: `rgb(20%, 255, 50%)`.\n\t = (object) RGB object in the following format:\n\t o {\n\t o     r (number) red,\n\t o     g (number) green,\n\t o     b (number) blue,\n\t o     hex (string) color in HTML/CSS format: #••••••,\n\t o     error (boolean) true if string can't be parsed\n\t o }\n\t\\*/\n\tSnap.getRGB = cacher(function (colour) {\n\t    if (!colour || !!((colour = Str(colour)).indexOf(\"-\") + 1)) {\n\t        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n\t    }\n\t    if (colour == \"none\") {\n\t        return {r: -1, g: -1, b: -1, hex: \"none\", toString: rgbtoString};\n\t    }\n\t    !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = toHex(colour));\n\t    if (!colour) {\n\t        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n\t    }\n\t    var res,\n\t        red,\n\t        green,\n\t        blue,\n\t        opacity,\n\t        t,\n\t        values,\n\t        rgb = colour.match(colourRegExp);\n\t    if (rgb) {\n\t        if (rgb[2]) {\n\t            blue = toInt(rgb[2].substring(5), 16);\n\t            green = toInt(rgb[2].substring(3, 5), 16);\n\t            red = toInt(rgb[2].substring(1, 3), 16);\n\t        }\n\t        if (rgb[3]) {\n\t            blue = toInt((t = rgb[3].charAt(3)) + t, 16);\n\t            green = toInt((t = rgb[3].charAt(2)) + t, 16);\n\t            red = toInt((t = rgb[3].charAt(1)) + t, 16);\n\t        }\n\t        if (rgb[4]) {\n\t            values = rgb[4].split(commaSpaces);\n\t            red = toFloat(values[0]);\n\t            values[0].slice(-1) == \"%\" && (red *= 2.55);\n\t            green = toFloat(values[1]);\n\t            values[1].slice(-1) == \"%\" && (green *= 2.55);\n\t            blue = toFloat(values[2]);\n\t            values[2].slice(-1) == \"%\" && (blue *= 2.55);\n\t            rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = toFloat(values[3]));\n\t            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n\t        }\n\t        if (rgb[5]) {\n\t            values = rgb[5].split(commaSpaces);\n\t            red = toFloat(values[0]);\n\t            values[0].slice(-1) == \"%\" && (red /= 100);\n\t            green = toFloat(values[1]);\n\t            values[1].slice(-1) == \"%\" && (green /= 100);\n\t            blue = toFloat(values[2]);\n\t            values[2].slice(-1) == \"%\" && (blue /= 100);\n\t            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n\t            rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = toFloat(values[3]));\n\t            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n\t            return Snap.hsb2rgb(red, green, blue, opacity);\n\t        }\n\t        if (rgb[6]) {\n\t            values = rgb[6].split(commaSpaces);\n\t            red = toFloat(values[0]);\n\t            values[0].slice(-1) == \"%\" && (red /= 100);\n\t            green = toFloat(values[1]);\n\t            values[1].slice(-1) == \"%\" && (green /= 100);\n\t            blue = toFloat(values[2]);\n\t            values[2].slice(-1) == \"%\" && (blue /= 100);\n\t            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n\t            rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = toFloat(values[3]));\n\t            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n\t            return Snap.hsl2rgb(red, green, blue, opacity);\n\t        }\n\t        red = mmin(math.round(red), 255);\n\t        green = mmin(math.round(green), 255);\n\t        blue = mmin(math.round(blue), 255);\n\t        opacity = mmin(mmax(opacity, 0), 1);\n\t        rgb = {r: red, g: green, b: blue, toString: rgbtoString};\n\t        rgb.hex = \"#\" + (16777216 | blue | green << 8 | red << 16).toString(16).slice(1);\n\t        rgb.opacity = is(opacity, \"finite\") ? opacity : 1;\n\t        return rgb;\n\t    }\n\t    return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n\t}, Snap);\n\t/*\\\n\t * Snap.hsb\n\t [ method ]\n\t **\n\t * Converts HSB values to a hex representation of the color\n\t - h (number) hue\n\t - s (number) saturation\n\t - b (number) value or brightness\n\t = (string) hex representation of the color\n\t\\*/\n\tSnap.hsb = cacher(function (h, s, b) {\n\t    return Snap.hsb2rgb(h, s, b).hex;\n\t});\n\t/*\\\n\t * Snap.hsl\n\t [ method ]\n\t **\n\t * Converts HSL values to a hex representation of the color\n\t - h (number) hue\n\t - s (number) saturation\n\t - l (number) luminosity\n\t = (string) hex representation of the color\n\t\\*/\n\tSnap.hsl = cacher(function (h, s, l) {\n\t    return Snap.hsl2rgb(h, s, l).hex;\n\t});\n\t/*\\\n\t * Snap.rgb\n\t [ method ]\n\t **\n\t * Converts RGB values to a hex representation of the color\n\t - r (number) red\n\t - g (number) green\n\t - b (number) blue\n\t = (string) hex representation of the color\n\t\\*/\n\tSnap.rgb = cacher(function (r, g, b, o) {\n\t    if (is(o, \"finite\")) {\n\t        var round = math.round;\n\t        return \"rgba(\" + [round(r), round(g), round(b), +o.toFixed(2)] + \")\";\n\t    }\n\t    return \"#\" + (16777216 | b | g << 8 | r << 16).toString(16).slice(1);\n\t});\n\tvar toHex = function (color) {\n\t    var i = glob.doc.getElementsByTagName(\"head\")[0] || glob.doc.getElementsByTagName(\"svg\")[0],\n\t        red = \"rgb(255, 0, 0)\";\n\t    toHex = cacher(function (color) {\n\t        if (color.toLowerCase() == \"red\") {\n\t            return red;\n\t        }\n\t        i.style.color = red;\n\t        i.style.color = color;\n\t        var out = glob.doc.defaultView.getComputedStyle(i, E).getPropertyValue(\"color\");\n\t        return out == red ? null : out;\n\t    });\n\t    return toHex(color);\n\t},\n\thsbtoString = function () {\n\t    return \"hsb(\" + [this.h, this.s, this.b] + \")\";\n\t},\n\thsltoString = function () {\n\t    return \"hsl(\" + [this.h, this.s, this.l] + \")\";\n\t},\n\trgbtoString = function () {\n\t    return this.opacity == 1 || this.opacity == null ?\n\t            this.hex :\n\t            \"rgba(\" + [this.r, this.g, this.b, this.opacity] + \")\";\n\t},\n\tprepareRGB = function (r, g, b) {\n\t    if (g == null && is(r, \"object\") && \"r\" in r && \"g\" in r && \"b\" in r) {\n\t        b = r.b;\n\t        g = r.g;\n\t        r = r.r;\n\t    }\n\t    if (g == null && is(r, string)) {\n\t        var clr = Snap.getRGB(r);\n\t        r = clr.r;\n\t        g = clr.g;\n\t        b = clr.b;\n\t    }\n\t    if (r > 1 || g > 1 || b > 1) {\n\t        r /= 255;\n\t        g /= 255;\n\t        b /= 255;\n\t    }\n\t\n\t    return [r, g, b];\n\t},\n\tpackageRGB = function (r, g, b, o) {\n\t    r = math.round(r * 255);\n\t    g = math.round(g * 255);\n\t    b = math.round(b * 255);\n\t    var rgb = {\n\t        r: r,\n\t        g: g,\n\t        b: b,\n\t        opacity: is(o, \"finite\") ? o : 1,\n\t        hex: Snap.rgb(r, g, b),\n\t        toString: rgbtoString\n\t    };\n\t    is(o, \"finite\") && (rgb.opacity = o);\n\t    return rgb;\n\t};\n\t/*\\\n\t * Snap.color\n\t [ method ]\n\t **\n\t * Parses the color string and returns an object featuring the color's component values\n\t - clr (string) color string in one of the supported formats (see @Snap.getRGB)\n\t = (object) Combined RGB/HSB object in the following format:\n\t o {\n\t o     r (number) red,\n\t o     g (number) green,\n\t o     b (number) blue,\n\t o     hex (string) color in HTML/CSS format: #••••••,\n\t o     error (boolean) `true` if string can't be parsed,\n\t o     h (number) hue,\n\t o     s (number) saturation,\n\t o     v (number) value (brightness),\n\t o     l (number) lightness\n\t o }\n\t\\*/\n\tSnap.color = function (clr) {\n\t    var rgb;\n\t    if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"b\" in clr) {\n\t        rgb = Snap.hsb2rgb(clr);\n\t        clr.r = rgb.r;\n\t        clr.g = rgb.g;\n\t        clr.b = rgb.b;\n\t        clr.opacity = 1;\n\t        clr.hex = rgb.hex;\n\t    } else if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"l\" in clr) {\n\t        rgb = Snap.hsl2rgb(clr);\n\t        clr.r = rgb.r;\n\t        clr.g = rgb.g;\n\t        clr.b = rgb.b;\n\t        clr.opacity = 1;\n\t        clr.hex = rgb.hex;\n\t    } else {\n\t        if (is(clr, \"string\")) {\n\t            clr = Snap.getRGB(clr);\n\t        }\n\t        if (is(clr, \"object\") && \"r\" in clr && \"g\" in clr && \"b\" in clr && !(\"error\" in clr)) {\n\t            rgb = Snap.rgb2hsl(clr);\n\t            clr.h = rgb.h;\n\t            clr.s = rgb.s;\n\t            clr.l = rgb.l;\n\t            rgb = Snap.rgb2hsb(clr);\n\t            clr.v = rgb.b;\n\t        } else {\n\t            clr = {hex: \"none\"};\n\t            clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1;\n\t            clr.error = 1;\n\t        }\n\t    }\n\t    clr.toString = rgbtoString;\n\t    return clr;\n\t};\n\t/*\\\n\t * Snap.hsb2rgb\n\t [ method ]\n\t **\n\t * Converts HSB values to an RGB object\n\t - h (number) hue\n\t - s (number) saturation\n\t - v (number) value or brightness\n\t = (object) RGB object in the following format:\n\t o {\n\t o     r (number) red,\n\t o     g (number) green,\n\t o     b (number) blue,\n\t o     hex (string) color in HTML/CSS format: #••••••\n\t o }\n\t\\*/\n\tSnap.hsb2rgb = function (h, s, v, o) {\n\t    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"b\" in h) {\n\t        v = h.b;\n\t        s = h.s;\n\t        o = h.o;\n\t        h = h.h;\n\t    }\n\t    h *= 360;\n\t    var R, G, B, X, C;\n\t    h = h % 360 / 60;\n\t    C = v * s;\n\t    X = C * (1 - abs(h % 2 - 1));\n\t    R = G = B = v - C;\n\t\n\t    h = ~~h;\n\t    R += [C, X, 0, 0, X, C][h];\n\t    G += [X, C, C, X, 0, 0][h];\n\t    B += [0, 0, X, C, C, X][h];\n\t    return packageRGB(R, G, B, o);\n\t};\n\t/*\\\n\t * Snap.hsl2rgb\n\t [ method ]\n\t **\n\t * Converts HSL values to an RGB object\n\t - h (number) hue\n\t - s (number) saturation\n\t - l (number) luminosity\n\t = (object) RGB object in the following format:\n\t o {\n\t o     r (number) red,\n\t o     g (number) green,\n\t o     b (number) blue,\n\t o     hex (string) color in HTML/CSS format: #••••••\n\t o }\n\t\\*/\n\tSnap.hsl2rgb = function (h, s, l, o) {\n\t    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"l\" in h) {\n\t        l = h.l;\n\t        s = h.s;\n\t        h = h.h;\n\t    }\n\t    if (h > 1 || s > 1 || l > 1) {\n\t        h /= 360;\n\t        s /= 100;\n\t        l /= 100;\n\t    }\n\t    h *= 360;\n\t    var R, G, B, X, C;\n\t    h = h % 360 / 60;\n\t    C = 2 * s * (l < .5 ? l : 1 - l);\n\t    X = C * (1 - abs(h % 2 - 1));\n\t    R = G = B = l - C / 2;\n\t\n\t    h = ~~h;\n\t    R += [C, X, 0, 0, X, C][h];\n\t    G += [X, C, C, X, 0, 0][h];\n\t    B += [0, 0, X, C, C, X][h];\n\t    return packageRGB(R, G, B, o);\n\t};\n\t/*\\\n\t * Snap.rgb2hsb\n\t [ method ]\n\t **\n\t * Converts RGB values to an HSB object\n\t - r (number) red\n\t - g (number) green\n\t - b (number) blue\n\t = (object) HSB object in the following format:\n\t o {\n\t o     h (number) hue,\n\t o     s (number) saturation,\n\t o     b (number) brightness\n\t o }\n\t\\*/\n\tSnap.rgb2hsb = function (r, g, b) {\n\t    b = prepareRGB(r, g, b);\n\t    r = b[0];\n\t    g = b[1];\n\t    b = b[2];\n\t\n\t    var H, S, V, C;\n\t    V = mmax(r, g, b);\n\t    C = V - mmin(r, g, b);\n\t    H = C == 0 ? null :\n\t        V == r ? (g - b) / C :\n\t        V == g ? (b - r) / C + 2 :\n\t                 (r - g) / C + 4;\n\t    H = (H + 360) % 6 * 60 / 360;\n\t    S = C == 0 ? 0 : C / V;\n\t    return {h: H, s: S, b: V, toString: hsbtoString};\n\t};\n\t/*\\\n\t * Snap.rgb2hsl\n\t [ method ]\n\t **\n\t * Converts RGB values to an HSL object\n\t - r (number) red\n\t - g (number) green\n\t - b (number) blue\n\t = (object) HSL object in the following format:\n\t o {\n\t o     h (number) hue,\n\t o     s (number) saturation,\n\t o     l (number) luminosity\n\t o }\n\t\\*/\n\tSnap.rgb2hsl = function (r, g, b) {\n\t    b = prepareRGB(r, g, b);\n\t    r = b[0];\n\t    g = b[1];\n\t    b = b[2];\n\t\n\t    var H, S, L, M, m, C;\n\t    M = mmax(r, g, b);\n\t    m = mmin(r, g, b);\n\t    C = M - m;\n\t    H = C == 0 ? null :\n\t        M == r ? (g - b) / C :\n\t        M == g ? (b - r) / C + 2 :\n\t                 (r - g) / C + 4;\n\t    H = (H + 360) % 6 * 60 / 360;\n\t    L = (M + m) / 2;\n\t    S = C == 0 ? 0 :\n\t         L < .5 ? C / (2 * L) :\n\t                  C / (2 - 2 * L);\n\t    return {h: H, s: S, l: L, toString: hsltoString};\n\t};\n\t\n\t// Transformations\n\t/*\\\n\t * Snap.parsePathString\n\t [ method ]\n\t **\n\t * Utility method\n\t **\n\t * Parses given path string into an array of arrays of path segments\n\t - pathString (string|array) path string or array of segments (in the last case it is returned straight away)\n\t = (array) array of segments\n\t\\*/\n\tSnap.parsePathString = function (pathString) {\n\t    if (!pathString) {\n\t        return null;\n\t    }\n\t    var pth = Snap.path(pathString);\n\t    if (pth.arr) {\n\t        return Snap.path.clone(pth.arr);\n\t    }\n\t\n\t    var paramCounts = {a: 7, c: 6, o: 2, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, u: 3, z: 0},\n\t        data = [];\n\t    if (is(pathString, \"array\") && is(pathString[0], \"array\")) { // rough assumption\n\t        data = Snap.path.clone(pathString);\n\t    }\n\t    if (!data.length) {\n\t        Str(pathString).replace(pathCommand, function (a, b, c) {\n\t            var params = [],\n\t                name = b.toLowerCase();\n\t            c.replace(pathValues, function (a, b) {\n\t                b && params.push(+b);\n\t            });\n\t            if (name == \"m\" && params.length > 2) {\n\t                data.push([b].concat(params.splice(0, 2)));\n\t                name = \"l\";\n\t                b = b == \"m\" ? \"l\" : \"L\";\n\t            }\n\t            if (name == \"o\" && params.length == 1) {\n\t                data.push([b, params[0]]);\n\t            }\n\t            if (name == \"r\") {\n\t                data.push([b].concat(params));\n\t            } else while (params.length >= paramCounts[name]) {\n\t                data.push([b].concat(params.splice(0, paramCounts[name])));\n\t                if (!paramCounts[name]) {\n\t                    break;\n\t                }\n\t            }\n\t        });\n\t    }\n\t    data.toString = Snap.path.toString;\n\t    pth.arr = Snap.path.clone(data);\n\t    return data;\n\t};\n\t/*\\\n\t * Snap.parseTransformString\n\t [ method ]\n\t **\n\t * Utility method\n\t **\n\t * Parses given transform string into an array of transformations\n\t - TString (string|array) transform string or array of transformations (in the last case it is returned straight away)\n\t = (array) array of transformations\n\t\\*/\n\tvar parseTransformString = Snap.parseTransformString = function (TString) {\n\t    if (!TString) {\n\t        return null;\n\t    }\n\t    var paramCounts = {r: 3, s: 4, t: 2, m: 6},\n\t        data = [];\n\t    if (is(TString, \"array\") && is(TString[0], \"array\")) { // rough assumption\n\t        data = Snap.path.clone(TString);\n\t    }\n\t    if (!data.length) {\n\t        Str(TString).replace(tCommand, function (a, b, c) {\n\t            var params = [],\n\t                name = b.toLowerCase();\n\t            c.replace(pathValues, function (a, b) {\n\t                b && params.push(+b);\n\t            });\n\t            data.push([b].concat(params));\n\t        });\n\t    }\n\t    data.toString = Snap.path.toString;\n\t    return data;\n\t};\n\tfunction svgTransform2string(tstr) {\n\t    var res = [];\n\t    tstr = tstr.replace(/(?:^|\\s)(\\w+)\\(([^)]+)\\)/g, function (all, name, params) {\n\t        params = params.split(/\\s*,\\s*|\\s+/);\n\t        if (name == \"rotate\" && params.length == 1) {\n\t            params.push(0, 0);\n\t        }\n\t        if (name == \"scale\") {\n\t            if (params.length > 2) {\n\t                params = params.slice(0, 2);\n\t            } else if (params.length == 2) {\n\t                params.push(0, 0);\n\t            }\n\t            if (params.length == 1) {\n\t                params.push(params[0], 0, 0);\n\t            }\n\t        }\n\t        if (name == \"skewX\") {\n\t            res.push([\"m\", 1, 0, math.tan(rad(params[0])), 1, 0, 0]);\n\t        } else if (name == \"skewY\") {\n\t            res.push([\"m\", 1, math.tan(rad(params[0])), 0, 1, 0, 0]);\n\t        } else {\n\t            res.push([name.charAt(0)].concat(params));\n\t        }\n\t        return all;\n\t    });\n\t    return res;\n\t}\n\tSnap._.svgTransform2string = svgTransform2string;\n\tSnap._.rgTransform = /^[a-z][\\s]*-?\\.?\\d/i;\n\tfunction transform2matrix(tstr, bbox) {\n\t    var tdata = parseTransformString(tstr),\n\t        m = new Snap.Matrix;\n\t    if (tdata) {\n\t        for (var i = 0, ii = tdata.length; i < ii; i++) {\n\t            var t = tdata[i],\n\t                tlen = t.length,\n\t                command = Str(t[0]).toLowerCase(),\n\t                absolute = t[0] != command,\n\t                inver = absolute ? m.invert() : 0,\n\t                x1,\n\t                y1,\n\t                x2,\n\t                y2,\n\t                bb;\n\t            if (command == \"t\" && tlen == 2){\n\t                m.translate(t[1], 0);\n\t            } else if (command == \"t\" && tlen == 3) {\n\t                if (absolute) {\n\t                    x1 = inver.x(0, 0);\n\t                    y1 = inver.y(0, 0);\n\t                    x2 = inver.x(t[1], t[2]);\n\t                    y2 = inver.y(t[1], t[2]);\n\t                    m.translate(x2 - x1, y2 - y1);\n\t                } else {\n\t                    m.translate(t[1], t[2]);\n\t                }\n\t            } else if (command == \"r\") {\n\t                if (tlen == 2) {\n\t                    bb = bb || bbox;\n\t                    m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n\t                } else if (tlen == 4) {\n\t                    if (absolute) {\n\t                        x2 = inver.x(t[2], t[3]);\n\t                        y2 = inver.y(t[2], t[3]);\n\t                        m.rotate(t[1], x2, y2);\n\t                    } else {\n\t                        m.rotate(t[1], t[2], t[3]);\n\t                    }\n\t                }\n\t            } else if (command == \"s\") {\n\t                if (tlen == 2 || tlen == 3) {\n\t                    bb = bb || bbox;\n\t                    m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n\t                } else if (tlen == 4) {\n\t                    if (absolute) {\n\t                        x2 = inver.x(t[2], t[3]);\n\t                        y2 = inver.y(t[2], t[3]);\n\t                        m.scale(t[1], t[1], x2, y2);\n\t                    } else {\n\t                        m.scale(t[1], t[1], t[2], t[3]);\n\t                    }\n\t                } else if (tlen == 5) {\n\t                    if (absolute) {\n\t                        x2 = inver.x(t[3], t[4]);\n\t                        y2 = inver.y(t[3], t[4]);\n\t                        m.scale(t[1], t[2], x2, y2);\n\t                    } else {\n\t                        m.scale(t[1], t[2], t[3], t[4]);\n\t                    }\n\t                }\n\t            } else if (command == \"m\" && tlen == 7) {\n\t                m.add(t[1], t[2], t[3], t[4], t[5], t[6]);\n\t            }\n\t        }\n\t    }\n\t    return m;\n\t}\n\tSnap._.transform2matrix = transform2matrix;\n\tSnap._unit2px = unit2px;\n\tvar contains = glob.doc.contains || glob.doc.compareDocumentPosition ?\n\t    function (a, b) {\n\t        var adown = a.nodeType == 9 ? a.documentElement : a,\n\t            bup = b && b.parentNode;\n\t            return a == bup || !!(bup && bup.nodeType == 1 && (\n\t                adown.contains ?\n\t                    adown.contains(bup) :\n\t                    a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16\n\t            ));\n\t    } :\n\t    function (a, b) {\n\t        if (b) {\n\t            while (b) {\n\t                b = b.parentNode;\n\t                if (b == a) {\n\t                    return true;\n\t                }\n\t            }\n\t        }\n\t        return false;\n\t    };\n\tfunction getSomeDefs(el) {\n\t    var p = el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) ||\n\t            el.node.parentNode && wrap(el.node.parentNode) ||\n\t            Snap.select(\"svg\") ||\n\t            Snap(0, 0),\n\t        pdefs = p.select(\"defs\"),\n\t        defs  = pdefs == null ? false : pdefs.node;\n\t    if (!defs) {\n\t        defs = make(\"defs\", p.node).node;\n\t    }\n\t    return defs;\n\t}\n\tfunction getSomeSVG(el) {\n\t    return el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) || Snap.select(\"svg\");\n\t}\n\tSnap._.getSomeDefs = getSomeDefs;\n\tSnap._.getSomeSVG = getSomeSVG;\n\tfunction unit2px(el, name, value) {\n\t    var svg = getSomeSVG(el).node,\n\t        out = {},\n\t        mgr = svg.querySelector(\".svg---mgr\");\n\t    if (!mgr) {\n\t        mgr = $(\"rect\");\n\t        $(mgr, {x: -9e9, y: -9e9, width: 10, height: 10, \"class\": \"svg---mgr\", fill: \"none\"});\n\t        svg.appendChild(mgr);\n\t    }\n\t    function getW(val) {\n\t        if (val == null) {\n\t            return E;\n\t        }\n\t        if (val == +val) {\n\t            return val;\n\t        }\n\t        $(mgr, {width: val});\n\t        try {\n\t            return mgr.getBBox().width;\n\t        } catch (e) {\n\t            return 0;\n\t        }\n\t    }\n\t    function getH(val) {\n\t        if (val == null) {\n\t            return E;\n\t        }\n\t        if (val == +val) {\n\t            return val;\n\t        }\n\t        $(mgr, {height: val});\n\t        try {\n\t            return mgr.getBBox().height;\n\t        } catch (e) {\n\t            return 0;\n\t        }\n\t    }\n\t    function set(nam, f) {\n\t        if (name == null) {\n\t            out[nam] = f(el.attr(nam) || 0);\n\t        } else if (nam == name) {\n\t            out = f(value == null ? el.attr(nam) || 0 : value);\n\t        }\n\t    }\n\t    switch (el.type) {\n\t        case \"rect\":\n\t            set(\"rx\", getW);\n\t            set(\"ry\", getH);\n\t        case \"image\":\n\t            set(\"width\", getW);\n\t            set(\"height\", getH);\n\t        case \"text\":\n\t            set(\"x\", getW);\n\t            set(\"y\", getH);\n\t        break;\n\t        case \"circle\":\n\t            set(\"cx\", getW);\n\t            set(\"cy\", getH);\n\t            set(\"r\", getW);\n\t        break;\n\t        case \"ellipse\":\n\t            set(\"cx\", getW);\n\t            set(\"cy\", getH);\n\t            set(\"rx\", getW);\n\t            set(\"ry\", getH);\n\t        break;\n\t        case \"line\":\n\t            set(\"x1\", getW);\n\t            set(\"x2\", getW);\n\t            set(\"y1\", getH);\n\t            set(\"y2\", getH);\n\t        break;\n\t        case \"marker\":\n\t            set(\"refX\", getW);\n\t            set(\"markerWidth\", getW);\n\t            set(\"refY\", getH);\n\t            set(\"markerHeight\", getH);\n\t        break;\n\t        case \"radialGradient\":\n\t            set(\"fx\", getW);\n\t            set(\"fy\", getH);\n\t        break;\n\t        case \"tspan\":\n\t            set(\"dx\", getW);\n\t            set(\"dy\", getH);\n\t        break;\n\t        default:\n\t            set(name, getW);\n\t    }\n\t    svg.removeChild(mgr);\n\t    return out;\n\t}\n\t/*\\\n\t * Snap.select\n\t [ method ]\n\t **\n\t * Wraps a DOM element specified by CSS selector as @Element\n\t - query (string) CSS selector of the element\n\t = (Element) the current element\n\t\\*/\n\tSnap.select = function (query) {\n\t    query = Str(query).replace(/([^\\\\]):/g, \"$1\\\\:\");\n\t    return wrap(glob.doc.querySelector(query));\n\t};\n\t/*\\\n\t * Snap.selectAll\n\t [ method ]\n\t **\n\t * Wraps DOM elements specified by CSS selector as set or array of @Element\n\t - query (string) CSS selector of the element\n\t = (Element) the current element\n\t\\*/\n\tSnap.selectAll = function (query) {\n\t    var nodelist = glob.doc.querySelectorAll(query),\n\t        set = (Snap.set || Array)();\n\t    for (var i = 0; i < nodelist.length; i++) {\n\t        set.push(wrap(nodelist[i]));\n\t    }\n\t    return set;\n\t};\n\t\n\tfunction add2group(list) {\n\t    if (!is(list, \"array\")) {\n\t        list = Array.prototype.slice.call(arguments, 0);\n\t    }\n\t    var i = 0,\n\t        j = 0,\n\t        node = this.node;\n\t    while (this[i]) delete this[i++];\n\t    for (i = 0; i < list.length; i++) {\n\t        if (list[i].type == \"set\") {\n\t            list[i].forEach(function (el) {\n\t                node.appendChild(el.node);\n\t            });\n\t        } else {\n\t            node.appendChild(list[i].node);\n\t        }\n\t    }\n\t    var children = node.childNodes;\n\t    for (i = 0; i < children.length; i++) {\n\t        this[j++] = wrap(children[i]);\n\t    }\n\t    return this;\n\t}\n\t// Hub garbage collector every 10s\n\tsetInterval(function () {\n\t    for (var key in hub) if (hub[has](key)) {\n\t        var el = hub[key],\n\t            node = el.node;\n\t        if (el.type != \"svg\" && !node.ownerSVGElement || el.type == \"svg\" && (!node.parentNode || \"ownerSVGElement\" in node.parentNode && !node.ownerSVGElement)) {\n\t            delete hub[key];\n\t        }\n\t    }\n\t}, 1e4);\n\tfunction Element(el) {\n\t    if (el.snap in hub) {\n\t        return hub[el.snap];\n\t    }\n\t    var svg;\n\t    try {\n\t        svg = el.ownerSVGElement;\n\t    } catch(e) {}\n\t    /*\\\n\t     * Element.node\n\t     [ property (object) ]\n\t     **\n\t     * Gives you a reference to the DOM object, so you can assign event handlers or just mess around.\n\t     > Usage\n\t     | // draw a circle at coordinate 10,10 with radius of 10\n\t     | var c = paper.circle(10, 10, 10);\n\t     | c.node.onclick = function () {\n\t     |     c.attr(\"fill\", \"red\");\n\t     | };\n\t    \\*/\n\t    this.node = el;\n\t    if (svg) {\n\t        this.paper = new Paper(svg);\n\t    }\n\t    /*\\\n\t     * Element.type\n\t     [ property (string) ]\n\t     **\n\t     * SVG tag name of the given element.\n\t    \\*/\n\t    this.type = el.tagName || el.nodeName;\n\t    var id = this.id = ID(this);\n\t    this.anims = {};\n\t    this._ = {\n\t        transform: []\n\t    };\n\t    el.snap = id;\n\t    hub[id] = this;\n\t    if (this.type == \"g\") {\n\t        this.add = add2group;\n\t    }\n\t    if (this.type in {g: 1, mask: 1, pattern: 1, symbol: 1}) {\n\t        for (var method in Paper.prototype) if (Paper.prototype[has](method)) {\n\t            this[method] = Paper.prototype[method];\n\t        }\n\t    }\n\t}\n\t   /*\\\n\t     * Element.attr\n\t     [ method ]\n\t     **\n\t     * Gets or sets given attributes of the element.\n\t     **\n\t     - params (object) contains key-value pairs of attributes you want to set\n\t     * or\n\t     - param (string) name of the attribute\n\t     = (Element) the current element\n\t     * or\n\t     = (string) value of attribute\n\t     > Usage\n\t     | el.attr({\n\t     |     fill: \"#fc0\",\n\t     |     stroke: \"#000\",\n\t     |     strokeWidth: 2, // CamelCase...\n\t     |     \"fill-opacity\": 0.5, // or dash-separated names\n\t     |     width: \"*=2\" // prefixed values\n\t     | });\n\t     | console.log(el.attr(\"fill\")); // #fc0\n\t     * Prefixed values in format `\"+=10\"` supported. All four operations\n\t     * (`+`, `-`, `*` and `/`) could be used. Optionally you can use units for `+`\n\t     * and `-`: `\"+=2em\"`.\n\t    \\*/\n\t    Element.prototype.attr = function (params, value) {\n\t        var el = this,\n\t            node = el.node;\n\t        if (!params) {\n\t            if (node.nodeType != 1) {\n\t                return {\n\t                    text: node.nodeValue\n\t                };\n\t            }\n\t            var attr = node.attributes,\n\t                out = {};\n\t            for (var i = 0, ii = attr.length; i < ii; i++) {\n\t                out[attr[i].nodeName] = attr[i].nodeValue;\n\t            }\n\t            return out;\n\t        }\n\t        if (is(params, \"string\")) {\n\t            if (arguments.length > 1) {\n\t                var json = {};\n\t                json[params] = value;\n\t                params = json;\n\t            } else {\n\t                return eve(\"snap.util.getattr.\" + params, el).firstDefined();\n\t            }\n\t        }\n\t        for (var att in params) {\n\t            if (params[has](att)) {\n\t                eve(\"snap.util.attr.\" + att, el, params[att]);\n\t            }\n\t        }\n\t        return el;\n\t    };\n\t/*\\\n\t * Snap.parse\n\t [ method ]\n\t **\n\t * Parses SVG fragment and converts it into a @Fragment\n\t **\n\t - svg (string) SVG string\n\t = (Fragment) the @Fragment\n\t\\*/\n\tSnap.parse = function (svg) {\n\t    var f = glob.doc.createDocumentFragment(),\n\t        full = true,\n\t        div = glob.doc.createElement(\"div\");\n\t    svg = Str(svg);\n\t    if (!svg.match(/^\\s*<\\s*svg(?:\\s|>)/)) {\n\t        svg = \"<svg>\" + svg + \"</svg>\";\n\t        full = false;\n\t    }\n\t    div.innerHTML = svg;\n\t    svg = div.getElementsByTagName(\"svg\")[0];\n\t    if (svg) {\n\t        if (full) {\n\t            f = svg;\n\t        } else {\n\t            while (svg.firstChild) {\n\t                f.appendChild(svg.firstChild);\n\t            }\n\t        }\n\t    }\n\t    return new Fragment(f);\n\t};\n\tfunction Fragment(frag) {\n\t    this.node = frag;\n\t}\n\t/*\\\n\t * Snap.fragment\n\t [ method ]\n\t **\n\t * Creates a DOM fragment from a given list of elements or strings\n\t **\n\t - varargs (…) SVG string\n\t = (Fragment) the @Fragment\n\t\\*/\n\tSnap.fragment = function () {\n\t    var args = Array.prototype.slice.call(arguments, 0),\n\t        f = glob.doc.createDocumentFragment();\n\t    for (var i = 0, ii = args.length; i < ii; i++) {\n\t        var item = args[i];\n\t        if (item.node && item.node.nodeType) {\n\t            f.appendChild(item.node);\n\t        }\n\t        if (item.nodeType) {\n\t            f.appendChild(item);\n\t        }\n\t        if (typeof item == \"string\") {\n\t            f.appendChild(Snap.parse(item).node);\n\t        }\n\t    }\n\t    return new Fragment(f);\n\t};\n\t\n\tfunction make(name, parent) {\n\t    var res = $(name);\n\t    parent.appendChild(res);\n\t    var el = wrap(res);\n\t    return el;\n\t}\n\tfunction Paper(w, h) {\n\t    var res,\n\t        desc,\n\t        defs,\n\t        proto = Paper.prototype;\n\t    if (w && w.tagName && w.tagName.toLowerCase() == \"svg\") {\n\t        if (w.snap in hub) {\n\t            return hub[w.snap];\n\t        }\n\t        var doc = w.ownerDocument;\n\t        res = new Element(w);\n\t        desc = w.getElementsByTagName(\"desc\")[0];\n\t        defs = w.getElementsByTagName(\"defs\")[0];\n\t        if (!desc) {\n\t            desc = $(\"desc\");\n\t            desc.appendChild(doc.createTextNode(\"Created with Snap\"));\n\t            res.node.appendChild(desc);\n\t        }\n\t        if (!defs) {\n\t            defs = $(\"defs\");\n\t            res.node.appendChild(defs);\n\t        }\n\t        res.defs = defs;\n\t        for (var key in proto) if (proto[has](key)) {\n\t            res[key] = proto[key];\n\t        }\n\t        res.paper = res.root = res;\n\t    } else {\n\t        res = make(\"svg\", glob.doc.body);\n\t        $(res.node, {\n\t            height: h,\n\t            version: 1.1,\n\t            width: w,\n\t            xmlns: xmlns\n\t        });\n\t    }\n\t    return res;\n\t}\n\tfunction wrap(dom) {\n\t    if (!dom) {\n\t        return dom;\n\t    }\n\t    if (dom instanceof Element || dom instanceof Fragment) {\n\t        return dom;\n\t    }\n\t    if (dom.tagName && dom.tagName.toLowerCase() == \"svg\") {\n\t        return new Paper(dom);\n\t    }\n\t    if (dom.tagName && dom.tagName.toLowerCase() == \"object\" && dom.type == \"image/svg+xml\") {\n\t        return new Paper(dom.contentDocument.getElementsByTagName(\"svg\")[0]);\n\t    }\n\t    return new Element(dom);\n\t}\n\t\n\tSnap._.make = make;\n\tSnap._.wrap = wrap;\n\t/*\\\n\t * Paper.el\n\t [ method ]\n\t **\n\t * Creates an element on paper with a given name and no attributes\n\t **\n\t - name (string) tag name\n\t - attr (object) attributes\n\t = (Element) the current element\n\t > Usage\n\t | var c = paper.circle(10, 10, 10); // is the same as...\n\t | var c = paper.el(\"circle\").attr({\n\t |     cx: 10,\n\t |     cy: 10,\n\t |     r: 10\n\t | });\n\t | // and the same as\n\t | var c = paper.el(\"circle\", {\n\t |     cx: 10,\n\t |     cy: 10,\n\t |     r: 10\n\t | });\n\t\\*/\n\tPaper.prototype.el = function (name, attr) {\n\t    var el = make(name, this.node);\n\t    attr && el.attr(attr);\n\t    return el;\n\t};\n\t/*\\\n\t * Element.children\n\t [ method ]\n\t **\n\t * Returns array of all the children of the element.\n\t = (array) array of Elements\n\t\\*/\n\tElement.prototype.children = function () {\n\t    var out = [],\n\t        ch = this.node.childNodes;\n\t    for (var i = 0, ii = ch.length; i < ii; i++) {\n\t        out[i] = Snap(ch[i]);\n\t    }\n\t    return out;\n\t};\n\tfunction jsonFiller(root, o) {\n\t    for (var i = 0, ii = root.length; i < ii; i++) {\n\t        var item = {\n\t                type: root[i].type,\n\t                attr: root[i].attr()\n\t            },\n\t            children = root[i].children();\n\t        o.push(item);\n\t        if (children.length) {\n\t            jsonFiller(children, item.childNodes = []);\n\t        }\n\t    }\n\t}\n\t/*\\\n\t * Element.toJSON\n\t [ method ]\n\t **\n\t * Returns object representation of the given element and all its children.\n\t = (object) in format\n\t o {\n\t o     type (string) this.type,\n\t o     attr (object) attributes map,\n\t o     childNodes (array) optional array of children in the same format\n\t o }\n\t\\*/\n\tElement.prototype.toJSON = function () {\n\t    var out = [];\n\t    jsonFiller([this], out);\n\t    return out[0];\n\t};\n\t// default\n\teve.on(\"snap.util.getattr\", function () {\n\t    var att = eve.nt();\n\t    att = att.substring(att.lastIndexOf(\".\") + 1);\n\t    var css = att.replace(/[A-Z]/g, function (letter) {\n\t        return \"-\" + letter.toLowerCase();\n\t    });\n\t    if (cssAttr[has](css)) {\n\t        return this.node.ownerDocument.defaultView.getComputedStyle(this.node, null).getPropertyValue(css);\n\t    } else {\n\t        return $(this.node, att);\n\t    }\n\t});\n\tvar cssAttr = {\n\t    \"alignment-baseline\": 0,\n\t    \"baseline-shift\": 0,\n\t    \"clip\": 0,\n\t    \"clip-path\": 0,\n\t    \"clip-rule\": 0,\n\t    \"color\": 0,\n\t    \"color-interpolation\": 0,\n\t    \"color-interpolation-filters\": 0,\n\t    \"color-profile\": 0,\n\t    \"color-rendering\": 0,\n\t    \"cursor\": 0,\n\t    \"direction\": 0,\n\t    \"display\": 0,\n\t    \"dominant-baseline\": 0,\n\t    \"enable-background\": 0,\n\t    \"fill\": 0,\n\t    \"fill-opacity\": 0,\n\t    \"fill-rule\": 0,\n\t    \"filter\": 0,\n\t    \"flood-color\": 0,\n\t    \"flood-opacity\": 0,\n\t    \"font\": 0,\n\t    \"font-family\": 0,\n\t    \"font-size\": 0,\n\t    \"font-size-adjust\": 0,\n\t    \"font-stretch\": 0,\n\t    \"font-style\": 0,\n\t    \"font-variant\": 0,\n\t    \"font-weight\": 0,\n\t    \"glyph-orientation-horizontal\": 0,\n\t    \"glyph-orientation-vertical\": 0,\n\t    \"image-rendering\": 0,\n\t    \"kerning\": 0,\n\t    \"letter-spacing\": 0,\n\t    \"lighting-color\": 0,\n\t    \"marker\": 0,\n\t    \"marker-end\": 0,\n\t    \"marker-mid\": 0,\n\t    \"marker-start\": 0,\n\t    \"mask\": 0,\n\t    \"opacity\": 0,\n\t    \"overflow\": 0,\n\t    \"pointer-events\": 0,\n\t    \"shape-rendering\": 0,\n\t    \"stop-color\": 0,\n\t    \"stop-opacity\": 0,\n\t    \"stroke\": 0,\n\t    \"stroke-dasharray\": 0,\n\t    \"stroke-dashoffset\": 0,\n\t    \"stroke-linecap\": 0,\n\t    \"stroke-linejoin\": 0,\n\t    \"stroke-miterlimit\": 0,\n\t    \"stroke-opacity\": 0,\n\t    \"stroke-width\": 0,\n\t    \"text-anchor\": 0,\n\t    \"text-decoration\": 0,\n\t    \"text-rendering\": 0,\n\t    \"unicode-bidi\": 0,\n\t    \"visibility\": 0,\n\t    \"word-spacing\": 0,\n\t    \"writing-mode\": 0\n\t};\n\t\n\teve.on(\"snap.util.attr\", function (value) {\n\t    var att = eve.nt(),\n\t        attr = {};\n\t    att = att.substring(att.lastIndexOf(\".\") + 1);\n\t    attr[att] = value;\n\t    var style = att.replace(/-(\\w)/gi, function (all, letter) {\n\t            return letter.toUpperCase();\n\t        }),\n\t        css = att.replace(/[A-Z]/g, function (letter) {\n\t            return \"-\" + letter.toLowerCase();\n\t        });\n\t    if (cssAttr[has](css)) {\n\t        this.node.style[style] = value == null ? E : value;\n\t    } else {\n\t        $(this.node, attr);\n\t    }\n\t});\n\t(function (proto) {}(Paper.prototype));\n\t\n\t// simple ajax\n\t/*\\\n\t * Snap.ajax\n\t [ method ]\n\t **\n\t * Simple implementation of Ajax\n\t **\n\t - url (string) URL\n\t - postData (object|string) data for post request\n\t - callback (function) callback\n\t - scope (object) #optional scope of callback\n\t * or\n\t - url (string) URL\n\t - callback (function) callback\n\t - scope (object) #optional scope of callback\n\t = (XMLHttpRequest) the XMLHttpRequest object, just in case\n\t\\*/\n\tSnap.ajax = function (url, postData, callback, scope){\n\t    var req = new XMLHttpRequest,\n\t        id = ID();\n\t    if (req) {\n\t        if (is(postData, \"function\")) {\n\t            scope = callback;\n\t            callback = postData;\n\t            postData = null;\n\t        } else if (is(postData, \"object\")) {\n\t            var pd = [];\n\t            for (var key in postData) if (postData.hasOwnProperty(key)) {\n\t                pd.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(postData[key]));\n\t            }\n\t            postData = pd.join(\"&\");\n\t        }\n\t        req.open(postData ? \"POST\" : \"GET\", url, true);\n\t        if (postData) {\n\t            req.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n\t            req.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n\t        }\n\t        if (callback) {\n\t            eve.once(\"snap.ajax.\" + id + \".0\", callback);\n\t            eve.once(\"snap.ajax.\" + id + \".200\", callback);\n\t            eve.once(\"snap.ajax.\" + id + \".304\", callback);\n\t        }\n\t        req.onreadystatechange = function() {\n\t            if (req.readyState != 4) return;\n\t            eve(\"snap.ajax.\" + id + \".\" + req.status, scope, req);\n\t        };\n\t        if (req.readyState == 4) {\n\t            return req;\n\t        }\n\t        req.send(postData);\n\t        return req;\n\t    }\n\t};\n\t/*\\\n\t * Snap.load\n\t [ method ]\n\t **\n\t * Loads external SVG file as a @Fragment (see @Snap.ajax for more advanced AJAX)\n\t **\n\t - url (string) URL\n\t - callback (function) callback\n\t - scope (object) #optional scope of callback\n\t\\*/\n\tSnap.load = function (url, callback, scope) {\n\t    Snap.ajax(url, function (req) {\n\t        var f = Snap.parse(req.responseText);\n\t        scope ? callback.call(scope, f) : callback(f);\n\t    });\n\t};\n\tvar getOffset = function (elem) {\n\t    var box = elem.getBoundingClientRect(),\n\t        doc = elem.ownerDocument,\n\t        body = doc.body,\n\t        docElem = doc.documentElement,\n\t        clientTop = docElem.clientTop || body.clientTop || 0, clientLeft = docElem.clientLeft || body.clientLeft || 0,\n\t        top  = box.top  + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop ) - clientTop,\n\t        left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;\n\t    return {\n\t        y: top,\n\t        x: left\n\t    };\n\t};\n\t/*\\\n\t * Snap.getElementByPoint\n\t [ method ]\n\t **\n\t * Returns you topmost element under given point.\n\t **\n\t = (object) Snap element object\n\t - x (number) x coordinate from the top left corner of the window\n\t - y (number) y coordinate from the top left corner of the window\n\t > Usage\n\t | Snap.getElementByPoint(mouseX, mouseY).attr({stroke: \"#f00\"});\n\t\\*/\n\tSnap.getElementByPoint = function (x, y) {\n\t    var paper = this,\n\t        svg = paper.canvas,\n\t        target = glob.doc.elementFromPoint(x, y);\n\t    if (glob.win.opera && target.tagName == \"svg\") {\n\t        var so = getOffset(target),\n\t            sr = target.createSVGRect();\n\t        sr.x = x - so.x;\n\t        sr.y = y - so.y;\n\t        sr.width = sr.height = 1;\n\t        var hits = target.getIntersectionList(sr, null);\n\t        if (hits.length) {\n\t            target = hits[hits.length - 1];\n\t        }\n\t    }\n\t    if (!target) {\n\t        return null;\n\t    }\n\t    return wrap(target);\n\t};\n\t/*\\\n\t * Snap.plugin\n\t [ method ]\n\t **\n\t * Let you write plugins. You pass in a function with five arguments, like this:\n\t | Snap.plugin(function (Snap, Element, Paper, global, Fragment) {\n\t |     Snap.newmethod = function () {};\n\t |     Element.prototype.newmethod = function () {};\n\t |     Paper.prototype.newmethod = function () {};\n\t | });\n\t * Inside the function you have access to all main objects (and their\n\t * prototypes). This allow you to extend anything you want.\n\t **\n\t - f (function) your plugin body\n\t\\*/\n\tSnap.plugin = function (f) {\n\t    f(Snap, Element, Paper, glob, Fragment);\n\t};\n\tglob.win.Snap = Snap;\n\treturn Snap;\n\t}(window || this));\n\t\n\t// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n\t//\n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t//\n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t//\n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\tSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n\t    var elproto = Element.prototype,\n\t        is = Snap.is,\n\t        Str = String,\n\t        unit2px = Snap._unit2px,\n\t        $ = Snap._.$,\n\t        make = Snap._.make,\n\t        getSomeDefs = Snap._.getSomeDefs,\n\t        has = \"hasOwnProperty\",\n\t        wrap = Snap._.wrap;\n\t    /*\\\n\t     * Element.getBBox\n\t     [ method ]\n\t     **\n\t     * Returns the bounding box descriptor for the given element\n\t     **\n\t     = (object) bounding box descriptor:\n\t     o {\n\t     o     cx: (number) x of the center,\n\t     o     cy: (number) x of the center,\n\t     o     h: (number) height,\n\t     o     height: (number) height,\n\t     o     path: (string) path command for the box,\n\t     o     r0: (number) radius of a circle that fully encloses the box,\n\t     o     r1: (number) radius of the smallest circle that can be enclosed,\n\t     o     r2: (number) radius of the largest circle that can be enclosed,\n\t     o     vb: (string) box as a viewbox command,\n\t     o     w: (number) width,\n\t     o     width: (number) width,\n\t     o     x2: (number) x of the right side,\n\t     o     x: (number) x of the left side,\n\t     o     y2: (number) y of the bottom edge,\n\t     o     y: (number) y of the top edge\n\t     o }\n\t    \\*/\n\t    elproto.getBBox = function (isWithoutTransform) {\n\t        if (this.type == \"tspan\") {\n\t            return Snap._.box(this.node.getClientRects().item(0));\n\t        }\n\t        if (!Snap.Matrix || !Snap.path) {\n\t            return this.node.getBBox();\n\t        }\n\t        var el = this,\n\t            m = new Snap.Matrix;\n\t        if (el.removed) {\n\t            return Snap._.box();\n\t        }\n\t        while (el.type == \"use\") {\n\t            if (!isWithoutTransform) {\n\t                m = m.add(el.transform().localMatrix.translate(el.attr(\"x\") || 0, el.attr(\"y\") || 0));\n\t            }\n\t            if (el.original) {\n\t                el = el.original;\n\t            } else {\n\t                var href = el.attr(\"xlink:href\");\n\t                el = el.original = el.node.ownerDocument.getElementById(href.substring(href.indexOf(\"#\") + 1));\n\t            }\n\t        }\n\t        var _ = el._,\n\t            pathfinder = Snap.path.get[el.type] || Snap.path.get.deflt;\n\t        try {\n\t            if (isWithoutTransform) {\n\t                _.bboxwt = pathfinder ? Snap.path.getBBox(el.realPath = pathfinder(el)) : Snap._.box(el.node.getBBox());\n\t                return Snap._.box(_.bboxwt);\n\t            } else {\n\t                el.realPath = pathfinder(el);\n\t                el.matrix = el.transform().localMatrix;\n\t                _.bbox = Snap.path.getBBox(Snap.path.map(el.realPath, m.add(el.matrix)));\n\t                return Snap._.box(_.bbox);\n\t            }\n\t        } catch (e) {\n\t            // Firefox doesn’t give you bbox of hidden element\n\t            return Snap._.box();\n\t        }\n\t    };\n\t    var propString = function () {\n\t        return this.string;\n\t    };\n\t    function extractTransform(el, tstr) {\n\t        if (tstr == null) {\n\t            var doReturn = true;\n\t            if (el.type == \"linearGradient\" || el.type == \"radialGradient\") {\n\t                tstr = el.node.getAttribute(\"gradientTransform\");\n\t            } else if (el.type == \"pattern\") {\n\t                tstr = el.node.getAttribute(\"patternTransform\");\n\t            } else {\n\t                tstr = el.node.getAttribute(\"transform\");\n\t            }\n\t            if (!tstr) {\n\t                return new Snap.Matrix;\n\t            }\n\t            tstr = Snap._.svgTransform2string(tstr);\n\t        } else {\n\t            if (!Snap._.rgTransform.test(tstr)) {\n\t                tstr = Snap._.svgTransform2string(tstr);\n\t            } else {\n\t                tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, el._.transform || \"\");\n\t            }\n\t            if (is(tstr, \"array\")) {\n\t                tstr = Snap.path ? Snap.path.toString.call(tstr) : Str(tstr);\n\t            }\n\t            el._.transform = tstr;\n\t        }\n\t        var m = Snap._.transform2matrix(tstr, el.getBBox(1));\n\t        if (doReturn) {\n\t            return m;\n\t        } else {\n\t            el.matrix = m;\n\t        }\n\t    }\n\t    /*\\\n\t     * Element.transform\n\t     [ method ]\n\t     **\n\t     * Gets or sets transformation of the element\n\t     **\n\t     - tstr (string) transform string in Snap or SVG format\n\t     = (Element) the current element\n\t     * or\n\t     = (object) transformation descriptor:\n\t     o {\n\t     o     string (string) transform string,\n\t     o     globalMatrix (Matrix) matrix of all transformations applied to element or its parents,\n\t     o     localMatrix (Matrix) matrix of transformations applied only to the element,\n\t     o     diffMatrix (Matrix) matrix of difference between global and local transformations,\n\t     o     global (string) global transformation as string,\n\t     o     local (string) local transformation as string,\n\t     o     toString (function) returns `string` property\n\t     o }\n\t    \\*/\n\t    elproto.transform = function (tstr) {\n\t        var _ = this._;\n\t        if (tstr == null) {\n\t            var papa = this,\n\t                global = new Snap.Matrix(this.node.getCTM()),\n\t                local = extractTransform(this),\n\t                ms = [local],\n\t                m = new Snap.Matrix,\n\t                i,\n\t                localString = local.toTransformString(),\n\t                string = Str(local) == Str(this.matrix) ?\n\t                            Str(_.transform) : localString;\n\t            while (papa.type != \"svg\" && (papa = papa.parent())) {\n\t                ms.push(extractTransform(papa));\n\t            }\n\t            i = ms.length;\n\t            while (i--) {\n\t                m.add(ms[i]);\n\t            }\n\t            return {\n\t                string: string,\n\t                globalMatrix: global,\n\t                totalMatrix: m,\n\t                localMatrix: local,\n\t                diffMatrix: global.clone().add(local.invert()),\n\t                global: global.toTransformString(),\n\t                total: m.toTransformString(),\n\t                local: localString,\n\t                toString: propString\n\t            };\n\t        }\n\t        if (tstr instanceof Snap.Matrix) {\n\t            this.matrix = tstr;\n\t            this._.transform = tstr.toTransformString();\n\t        } else {\n\t            extractTransform(this, tstr);\n\t        }\n\t\n\t        if (this.node) {\n\t            if (this.type == \"linearGradient\" || this.type == \"radialGradient\") {\n\t                $(this.node, {gradientTransform: this.matrix});\n\t            } else if (this.type == \"pattern\") {\n\t                $(this.node, {patternTransform: this.matrix});\n\t            } else {\n\t                $(this.node, {transform: this.matrix});\n\t            }\n\t        }\n\t\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.parent\n\t     [ method ]\n\t     **\n\t     * Returns the element's parent\n\t     **\n\t     = (Element) the parent element\n\t    \\*/\n\t    elproto.parent = function () {\n\t        return wrap(this.node.parentNode);\n\t    };\n\t    /*\\\n\t     * Element.append\n\t     [ method ]\n\t     **\n\t     * Appends the given element to current one\n\t     **\n\t     - el (Element|Set) element to append\n\t     = (Element) the parent element\n\t    \\*/\n\t    /*\\\n\t     * Element.add\n\t     [ method ]\n\t     **\n\t     * See @Element.append\n\t    \\*/\n\t    elproto.append = elproto.add = function (el) {\n\t        if (el) {\n\t            if (el.type == \"set\") {\n\t                var it = this;\n\t                el.forEach(function (el) {\n\t                    it.add(el);\n\t                });\n\t                return this;\n\t            }\n\t            el = wrap(el);\n\t            this.node.appendChild(el.node);\n\t            el.paper = this.paper;\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.appendTo\n\t     [ method ]\n\t     **\n\t     * Appends the current element to the given one\n\t     **\n\t     - el (Element) parent element to append to\n\t     = (Element) the child element\n\t    \\*/\n\t    elproto.appendTo = function (el) {\n\t        if (el) {\n\t            el = wrap(el);\n\t            el.append(this);\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.prepend\n\t     [ method ]\n\t     **\n\t     * Prepends the given element to the current one\n\t     **\n\t     - el (Element) element to prepend\n\t     = (Element) the parent element\n\t    \\*/\n\t    elproto.prepend = function (el) {\n\t        if (el) {\n\t            if (el.type == \"set\") {\n\t                var it = this,\n\t                    first;\n\t                el.forEach(function (el) {\n\t                    if (first) {\n\t                        first.after(el);\n\t                    } else {\n\t                        it.prepend(el);\n\t                    }\n\t                    first = el;\n\t                });\n\t                return this;\n\t            }\n\t            el = wrap(el);\n\t            var parent = el.parent();\n\t            this.node.insertBefore(el.node, this.node.firstChild);\n\t            this.add && this.add();\n\t            el.paper = this.paper;\n\t            this.parent() && this.parent().add();\n\t            parent && parent.add();\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.prependTo\n\t     [ method ]\n\t     **\n\t     * Prepends the current element to the given one\n\t     **\n\t     - el (Element) parent element to prepend to\n\t     = (Element) the child element\n\t    \\*/\n\t    elproto.prependTo = function (el) {\n\t        el = wrap(el);\n\t        el.prepend(this);\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.before\n\t     [ method ]\n\t     **\n\t     * Inserts given element before the current one\n\t     **\n\t     - el (Element) element to insert\n\t     = (Element) the parent element\n\t    \\*/\n\t    elproto.before = function (el) {\n\t        if (el.type == \"set\") {\n\t            var it = this;\n\t            el.forEach(function (el) {\n\t                var parent = el.parent();\n\t                it.node.parentNode.insertBefore(el.node, it.node);\n\t                parent && parent.add();\n\t            });\n\t            this.parent().add();\n\t            return this;\n\t        }\n\t        el = wrap(el);\n\t        var parent = el.parent();\n\t        this.node.parentNode.insertBefore(el.node, this.node);\n\t        this.parent() && this.parent().add();\n\t        parent && parent.add();\n\t        el.paper = this.paper;\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.after\n\t     [ method ]\n\t     **\n\t     * Inserts given element after the current one\n\t     **\n\t     - el (Element) element to insert\n\t     = (Element) the parent element\n\t    \\*/\n\t    elproto.after = function (el) {\n\t        el = wrap(el);\n\t        var parent = el.parent();\n\t        if (this.node.nextSibling) {\n\t            this.node.parentNode.insertBefore(el.node, this.node.nextSibling);\n\t        } else {\n\t            this.node.parentNode.appendChild(el.node);\n\t        }\n\t        this.parent() && this.parent().add();\n\t        parent && parent.add();\n\t        el.paper = this.paper;\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.insertBefore\n\t     [ method ]\n\t     **\n\t     * Inserts the element after the given one\n\t     **\n\t     - el (Element) element next to whom insert to\n\t     = (Element) the parent element\n\t    \\*/\n\t    elproto.insertBefore = function (el) {\n\t        el = wrap(el);\n\t        var parent = this.parent();\n\t        el.node.parentNode.insertBefore(this.node, el.node);\n\t        this.paper = el.paper;\n\t        parent && parent.add();\n\t        el.parent() && el.parent().add();\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.insertAfter\n\t     [ method ]\n\t     **\n\t     * Inserts the element after the given one\n\t     **\n\t     - el (Element) element next to whom insert to\n\t     = (Element) the parent element\n\t    \\*/\n\t    elproto.insertAfter = function (el) {\n\t        el = wrap(el);\n\t        var parent = this.parent();\n\t        el.node.parentNode.insertBefore(this.node, el.node.nextSibling);\n\t        this.paper = el.paper;\n\t        parent && parent.add();\n\t        el.parent() && el.parent().add();\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.remove\n\t     [ method ]\n\t     **\n\t     * Removes element from the DOM\n\t     = (Element) the detached element\n\t    \\*/\n\t    elproto.remove = function () {\n\t        var parent = this.parent();\n\t        this.node.parentNode && this.node.parentNode.removeChild(this.node);\n\t        delete this.paper;\n\t        this.removed = true;\n\t        parent && parent.add();\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.select\n\t     [ method ]\n\t     **\n\t     * Gathers the nested @Element matching the given set of CSS selectors\n\t     **\n\t     - query (string) CSS selector\n\t     = (Element) result of query selection\n\t    \\*/\n\t    elproto.select = function (query) {\n\t        return wrap(this.node.querySelector(query));\n\t    };\n\t    /*\\\n\t     * Element.selectAll\n\t     [ method ]\n\t     **\n\t     * Gathers nested @Element objects matching the given set of CSS selectors\n\t     **\n\t     - query (string) CSS selector\n\t     = (Set|array) result of query selection\n\t    \\*/\n\t    elproto.selectAll = function (query) {\n\t        var nodelist = this.node.querySelectorAll(query),\n\t            set = (Snap.set || Array)();\n\t        for (var i = 0; i < nodelist.length; i++) {\n\t            set.push(wrap(nodelist[i]));\n\t        }\n\t        return set;\n\t    };\n\t    /*\\\n\t     * Element.asPX\n\t     [ method ]\n\t     **\n\t     * Returns given attribute of the element as a `px` value (not %, em, etc.)\n\t     **\n\t     - attr (string) attribute name\n\t     - value (string) #optional attribute value\n\t     = (Element) result of query selection\n\t    \\*/\n\t    elproto.asPX = function (attr, value) {\n\t        if (value == null) {\n\t            value = this.attr(attr);\n\t        }\n\t        return +unit2px(this, attr, value);\n\t    };\n\t    // SIERRA Element.use(): I suggest adding a note about how to access the original element the returned <use> instantiates. It's a part of SVG with which ordinary web developers may be least familiar.\n\t    /*\\\n\t     * Element.use\n\t     [ method ]\n\t     **\n\t     * Creates a `<use>` element linked to the current element\n\t     **\n\t     = (Element) the `<use>` element\n\t    \\*/\n\t    elproto.use = function () {\n\t        var use,\n\t            id = this.node.id;\n\t        if (!id) {\n\t            id = this.id;\n\t            $(this.node, {\n\t                id: id\n\t            });\n\t        }\n\t        if (this.type == \"linearGradient\" || this.type == \"radialGradient\" ||\n\t            this.type == \"pattern\") {\n\t            use = make(this.type, this.node.parentNode);\n\t        } else {\n\t            use = make(\"use\", this.node.parentNode);\n\t        }\n\t        $(use.node, {\n\t            \"xlink:href\": \"#\" + id\n\t        });\n\t        use.original = this;\n\t        return use;\n\t    };\n\t    function fixids(el) {\n\t        var els = el.selectAll(\"*\"),\n\t            it,\n\t            url = /^\\s*url\\((\"|'|)(.*)\\1\\)\\s*$/,\n\t            ids = [],\n\t            uses = {};\n\t        function urltest(it, name) {\n\t            var val = $(it.node, name);\n\t            val = val && val.match(url);\n\t            val = val && val[2];\n\t            if (val && val.charAt() == \"#\") {\n\t                val = val.substring(1);\n\t            } else {\n\t                return;\n\t            }\n\t            if (val) {\n\t                uses[val] = (uses[val] || []).concat(function (id) {\n\t                    var attr = {};\n\t                    attr[name] = Snap.url(id);\n\t                    $(it.node, attr);\n\t                });\n\t            }\n\t        }\n\t        function linktest(it) {\n\t            var val = $(it.node, \"xlink:href\");\n\t            if (val && val.charAt() == \"#\") {\n\t                val = val.substring(1);\n\t            } else {\n\t                return;\n\t            }\n\t            if (val) {\n\t                uses[val] = (uses[val] || []).concat(function (id) {\n\t                    it.attr(\"xlink:href\", \"#\" + id);\n\t                });\n\t            }\n\t        }\n\t        for (var i = 0, ii = els.length; i < ii; i++) {\n\t            it = els[i];\n\t            urltest(it, \"fill\");\n\t            urltest(it, \"stroke\");\n\t            urltest(it, \"filter\");\n\t            urltest(it, \"mask\");\n\t            urltest(it, \"clip-path\");\n\t            linktest(it);\n\t            var oldid = $(it.node, \"id\");\n\t            if (oldid) {\n\t                $(it.node, {id: it.id});\n\t                ids.push({\n\t                    old: oldid,\n\t                    id: it.id\n\t                });\n\t            }\n\t        }\n\t        for (i = 0, ii = ids.length; i < ii; i++) {\n\t            var fs = uses[ids[i].old];\n\t            if (fs) {\n\t                for (var j = 0, jj = fs.length; j < jj; j++) {\n\t                    fs[j](ids[i].id);\n\t                }\n\t            }\n\t        }\n\t    }\n\t    /*\\\n\t     * Element.clone\n\t     [ method ]\n\t     **\n\t     * Creates a clone of the element and inserts it after the element\n\t     **\n\t     = (Element) the clone\n\t    \\*/\n\t    elproto.clone = function () {\n\t        var clone = wrap(this.node.cloneNode(true));\n\t        if ($(clone.node, \"id\")) {\n\t            $(clone.node, {id: clone.id});\n\t        }\n\t        fixids(clone);\n\t        clone.insertAfter(this);\n\t        return clone;\n\t    };\n\t    /*\\\n\t     * Element.toDefs\n\t     [ method ]\n\t     **\n\t     * Moves element to the shared `<defs>` area\n\t     **\n\t     = (Element) the element\n\t    \\*/\n\t    elproto.toDefs = function () {\n\t        var defs = getSomeDefs(this);\n\t        defs.appendChild(this.node);\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.toPattern\n\t     [ method ]\n\t     **\n\t     * Creates a `<pattern>` element from the current element\n\t     **\n\t     * To create a pattern you have to specify the pattern rect:\n\t     - x (string|number)\n\t     - y (string|number)\n\t     - width (string|number)\n\t     - height (string|number)\n\t     = (Element) the `<pattern>` element\n\t     * You can use pattern later on as an argument for `fill` attribute:\n\t     | var p = paper.path(\"M10-5-10,15M15,0,0,15M0-5-20,15\").attr({\n\t     |         fill: \"none\",\n\t     |         stroke: \"#bada55\",\n\t     |         strokeWidth: 5\n\t     |     }).pattern(0, 0, 10, 10),\n\t     |     c = paper.circle(200, 200, 100);\n\t     | c.attr({\n\t     |     fill: p\n\t     | });\n\t    \\*/\n\t    elproto.pattern = elproto.toPattern = function (x, y, width, height) {\n\t        var p = make(\"pattern\", getSomeDefs(this));\n\t        if (x == null) {\n\t            x = this.getBBox();\n\t        }\n\t        if (is(x, \"object\") && \"x\" in x) {\n\t            y = x.y;\n\t            width = x.width;\n\t            height = x.height;\n\t            x = x.x;\n\t        }\n\t        $(p.node, {\n\t            x: x,\n\t            y: y,\n\t            width: width,\n\t            height: height,\n\t            patternUnits: \"userSpaceOnUse\",\n\t            id: p.id,\n\t            viewBox: [x, y, width, height].join(\" \")\n\t        });\n\t        p.node.appendChild(this.node);\n\t        return p;\n\t    };\n\t// SIERRA Element.marker(): clarify what a reference point is. E.g., helps you offset the object from its edge such as when centering it over a path.\n\t// SIERRA Element.marker(): I suggest the method should accept default reference point values.  Perhaps centered with (refX = width/2) and (refY = height/2)? Also, couldn't it assume the element's current _width_ and _height_? And please specify what _x_ and _y_ mean: offsets? If so, from where?  Couldn't they also be assigned default values?\n\t    /*\\\n\t     * Element.marker\n\t     [ method ]\n\t     **\n\t     * Creates a `<marker>` element from the current element\n\t     **\n\t     * To create a marker you have to specify the bounding rect and reference point:\n\t     - x (number)\n\t     - y (number)\n\t     - width (number)\n\t     - height (number)\n\t     - refX (number)\n\t     - refY (number)\n\t     = (Element) the `<marker>` element\n\t     * You can specify the marker later as an argument for `marker-start`, `marker-end`, `marker-mid`, and `marker` attributes. The `marker` attribute places the marker at every point along the path, and `marker-mid` places them at every point except the start and end.\n\t    \\*/\n\t    // TODO add usage for markers\n\t    elproto.marker = function (x, y, width, height, refX, refY) {\n\t        var p = make(\"marker\", getSomeDefs(this));\n\t        if (x == null) {\n\t            x = this.getBBox();\n\t        }\n\t        if (is(x, \"object\") && \"x\" in x) {\n\t            y = x.y;\n\t            width = x.width;\n\t            height = x.height;\n\t            refX = x.refX || x.cx;\n\t            refY = x.refY || x.cy;\n\t            x = x.x;\n\t        }\n\t        $(p.node, {\n\t            viewBox: [x, y, width, height].join(\" \"),\n\t            markerWidth: width,\n\t            markerHeight: height,\n\t            orient: \"auto\",\n\t            refX: refX || 0,\n\t            refY: refY || 0,\n\t            id: p.id\n\t        });\n\t        p.node.appendChild(this.node);\n\t        return p;\n\t    };\n\t    var eldata = {};\n\t    /*\\\n\t     * Element.data\n\t     [ method ]\n\t     **\n\t     * Adds or retrieves given value associated with given key. (Don’t confuse\n\t     * with `data-` attributes)\n\t     *\n\t     * See also @Element.removeData\n\t     - key (string) key to store data\n\t     - value (any) #optional value to store\n\t     = (object) @Element\n\t     * or, if value is not specified:\n\t     = (any) value\n\t     > Usage\n\t     | for (var i = 0, i < 5, i++) {\n\t     |     paper.circle(10 + 15 * i, 10, 10)\n\t     |          .attr({fill: \"#000\"})\n\t     |          .data(\"i\", i)\n\t     |          .click(function () {\n\t     |             alert(this.data(\"i\"));\n\t     |          });\n\t     | }\n\t    \\*/\n\t    elproto.data = function (key, value) {\n\t        var data = eldata[this.id] = eldata[this.id] || {};\n\t        if (arguments.length == 0){\n\t            eve(\"snap.data.get.\" + this.id, this, data, null);\n\t            return data;\n\t        }\n\t        if (arguments.length == 1) {\n\t            if (Snap.is(key, \"object\")) {\n\t                for (var i in key) if (key[has](i)) {\n\t                    this.data(i, key[i]);\n\t                }\n\t                return this;\n\t            }\n\t            eve(\"snap.data.get.\" + this.id, this, data[key], key);\n\t            return data[key];\n\t        }\n\t        data[key] = value;\n\t        eve(\"snap.data.set.\" + this.id, this, value, key);\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.removeData\n\t     [ method ]\n\t     **\n\t     * Removes value associated with an element by given key.\n\t     * If key is not provided, removes all the data of the element.\n\t     - key (string) #optional key\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.removeData = function (key) {\n\t        if (key == null) {\n\t            eldata[this.id] = {};\n\t        } else {\n\t            eldata[this.id] && delete eldata[this.id][key];\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.outerSVG\n\t     [ method ]\n\t     **\n\t     * Returns SVG code for the element, equivalent to HTML's `outerHTML`.\n\t     *\n\t     * See also @Element.innerSVG\n\t     = (string) SVG code for the element\n\t    \\*/\n\t    /*\\\n\t     * Element.toString\n\t     [ method ]\n\t     **\n\t     * See @Element.outerSVG\n\t    \\*/\n\t    elproto.outerSVG = elproto.toString = toString(1);\n\t    /*\\\n\t     * Element.innerSVG\n\t     [ method ]\n\t     **\n\t     * Returns SVG code for the element's contents, equivalent to HTML's `innerHTML`\n\t     = (string) SVG code for the element\n\t    \\*/\n\t    elproto.innerSVG = toString();\n\t    function toString(type) {\n\t        return function () {\n\t            var res = type ? \"<\" + this.type : \"\",\n\t                attr = this.node.attributes,\n\t                chld = this.node.childNodes;\n\t            if (type) {\n\t                for (var i = 0, ii = attr.length; i < ii; i++) {\n\t                    res += \" \" + attr[i].name + '=\"' +\n\t                            attr[i].value.replace(/\"/g, '\\\\\"') + '\"';\n\t                }\n\t            }\n\t            if (chld.length) {\n\t                type && (res += \">\");\n\t                for (i = 0, ii = chld.length; i < ii; i++) {\n\t                    if (chld[i].nodeType == 3) {\n\t                        res += chld[i].nodeValue;\n\t                    } else if (chld[i].nodeType == 1) {\n\t                        res += wrap(chld[i]).toString();\n\t                    }\n\t                }\n\t                type && (res += \"</\" + this.type + \">\");\n\t            } else {\n\t                type && (res += \"/>\");\n\t            }\n\t            return res;\n\t        };\n\t    }\n\t    elproto.toDataURL = function () {\n\t        if (window && window.btoa) {\n\t            var bb = this.getBBox(),\n\t                svg = Snap.format('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"{width}\" height=\"{height}\" viewBox=\"{x} {y} {width} {height}\">{contents}</svg>', {\n\t                x: +bb.x.toFixed(3),\n\t                y: +bb.y.toFixed(3),\n\t                width: +bb.width.toFixed(3),\n\t                height: +bb.height.toFixed(3),\n\t                contents: this.outerSVG()\n\t            });\n\t            return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(svg)));\n\t        }\n\t    };\n\t    /*\\\n\t     * Fragment.select\n\t     [ method ]\n\t     **\n\t     * See @Element.select\n\t    \\*/\n\t    Fragment.prototype.select = elproto.select;\n\t    /*\\\n\t     * Fragment.selectAll\n\t     [ method ]\n\t     **\n\t     * See @Element.selectAll\n\t    \\*/\n\t    Fragment.prototype.selectAll = elproto.selectAll;\n\t});\n\t\n\t// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n\t//\n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t//\n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t//\n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\tSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n\t    var objectToString = Object.prototype.toString,\n\t        Str = String,\n\t        math = Math,\n\t        E = \"\";\n\t    function Matrix(a, b, c, d, e, f) {\n\t        if (b == null && objectToString.call(a) == \"[object SVGMatrix]\") {\n\t            this.a = a.a;\n\t            this.b = a.b;\n\t            this.c = a.c;\n\t            this.d = a.d;\n\t            this.e = a.e;\n\t            this.f = a.f;\n\t            return;\n\t        }\n\t        if (a != null) {\n\t            this.a = +a;\n\t            this.b = +b;\n\t            this.c = +c;\n\t            this.d = +d;\n\t            this.e = +e;\n\t            this.f = +f;\n\t        } else {\n\t            this.a = 1;\n\t            this.b = 0;\n\t            this.c = 0;\n\t            this.d = 1;\n\t            this.e = 0;\n\t            this.f = 0;\n\t        }\n\t    }\n\t    (function (matrixproto) {\n\t        /*\\\n\t         * Matrix.add\n\t         [ method ]\n\t         **\n\t         * Adds the given matrix to existing one\n\t         - a (number)\n\t         - b (number)\n\t         - c (number)\n\t         - d (number)\n\t         - e (number)\n\t         - f (number)\n\t         * or\n\t         - matrix (object) @Matrix\n\t        \\*/\n\t        matrixproto.add = function (a, b, c, d, e, f) {\n\t            if (a && a instanceof Matrix) {\n\t                return this.add(a.a, a.b, a.c, a.d, a.e, a.f);\n\t            }\n\t            var aNew = a * this.a + b * this.c,\n\t                bNew = a * this.b + b * this.d;\n\t            this.e += e * this.a + f * this.c;\n\t            this.f += e * this.b + f * this.d;\n\t            this.c = c * this.a + d * this.c;\n\t            this.d = c * this.b + d * this.d;\n\t\n\t            this.a = aNew;\n\t            this.b = bNew;\n\t            return this;\n\t        };\n\t        /*\\\n\t         * Matrix.multLeft\n\t         [ method ]\n\t         **\n\t         * Multiplies a passed affine transform to the left: M * this.\n\t         - a (number)\n\t         - b (number)\n\t         - c (number)\n\t         - d (number)\n\t         - e (number)\n\t         - f (number)\n\t         * or\n\t         - matrix (object) @Matrix\n\t        \\*/\n\t        Matrix.prototype.multLeft = function (a, b, c, d, e, f) {\n\t            if (a && a instanceof Matrix) {\n\t                return this.multLeft(a.a, a.b, a.c, a.d, a.e, a.f);\n\t            }\n\t            var aNew = a * this.a + c * this.b,\n\t                cNew = a * this.c + c * this.d,\n\t                eNew = a * this.e + c * this.f + e;\n\t            this.b = b * this.a + d * this.b;\n\t            this.d = b * this.c + d * this.d;\n\t            this.f = b * this.e + d * this.f + f;\n\t\n\t            this.a = aNew;\n\t            this.c = cNew;\n\t            this.e = eNew;\n\t            return this;\n\t        };\n\t        /*\\\n\t         * Matrix.invert\n\t         [ method ]\n\t         **\n\t         * Returns an inverted version of the matrix\n\t         = (object) @Matrix\n\t        \\*/\n\t        matrixproto.invert = function () {\n\t            var me = this,\n\t                x = me.a * me.d - me.b * me.c;\n\t            return new Matrix(me.d / x, -me.b / x, -me.c / x, me.a / x, (me.c * me.f - me.d * me.e) / x, (me.b * me.e - me.a * me.f) / x);\n\t        };\n\t        /*\\\n\t         * Matrix.clone\n\t         [ method ]\n\t         **\n\t         * Returns a copy of the matrix\n\t         = (object) @Matrix\n\t        \\*/\n\t        matrixproto.clone = function () {\n\t            return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\n\t        };\n\t        /*\\\n\t         * Matrix.translate\n\t         [ method ]\n\t         **\n\t         * Translate the matrix\n\t         - x (number) horizontal offset distance\n\t         - y (number) vertical offset distance\n\t        \\*/\n\t        matrixproto.translate = function (x, y) {\n\t            this.e += x * this.a + y * this.c;\n\t            this.f += x * this.b + y * this.d;\n\t            return this;\n\t        };\n\t        /*\\\n\t         * Matrix.scale\n\t         [ method ]\n\t         **\n\t         * Scales the matrix\n\t         - x (number) amount to be scaled, with `1` resulting in no change\n\t         - y (number) #optional amount to scale along the vertical axis. (Otherwise `x` applies to both axes.)\n\t         - cx (number) #optional horizontal origin point from which to scale\n\t         - cy (number) #optional vertical origin point from which to scale\n\t         * Default cx, cy is the middle point of the element.\n\t        \\*/\n\t        matrixproto.scale = function (x, y, cx, cy) {\n\t            y == null && (y = x);\n\t            (cx || cy) && this.translate(cx, cy);\n\t            this.a *= x;\n\t            this.b *= x;\n\t            this.c *= y;\n\t            this.d *= y;\n\t            (cx || cy) && this.translate(-cx, -cy);\n\t            return this;\n\t        };\n\t        /*\\\n\t         * Matrix.rotate\n\t         [ method ]\n\t         **\n\t         * Rotates the matrix\n\t         - a (number) angle of rotation, in degrees\n\t         - x (number) horizontal origin point from which to rotate\n\t         - y (number) vertical origin point from which to rotate\n\t        \\*/\n\t        matrixproto.rotate = function (a, x, y) {\n\t            a = Snap.rad(a);\n\t            x = x || 0;\n\t            y = y || 0;\n\t            var cos = +math.cos(a).toFixed(9),\n\t                sin = +math.sin(a).toFixed(9);\n\t            this.add(cos, sin, -sin, cos, x, y);\n\t            return this.add(1, 0, 0, 1, -x, -y);\n\t        };\n\t        /*\\\n\t         * Matrix.skewX\n\t         [ method ]\n\t         **\n\t         * Skews the matrix along the x-axis\n\t         - x (number) Angle to skew along the x-axis (in degrees).\n\t        \\*/\n\t        matrixproto.skewX = function (x) {\n\t            return this.skew(x, 0);\n\t        };\n\t        /*\\\n\t         * Matrix.skewY\n\t         [ method ]\n\t         **\n\t         * Skews the matrix along the y-axis\n\t         - y (number) Angle to skew along the y-axis (in degrees).\n\t        \\*/\n\t        matrixproto.skewY = function (y) {\n\t            return this.skew(0, y);\n\t        };\n\t        /*\\\n\t         * Matrix.skew\n\t         [ method ]\n\t         **\n\t         * Skews the matrix\n\t         - y (number) Angle to skew along the y-axis (in degrees).\n\t         - x (number) Angle to skew along the x-axis (in degrees).\n\t        \\*/\n\t        matrixproto.skew = function (x, y) {\n\t            x = x || 0;\n\t            y = y || 0;\n\t            x = Snap.rad(x);\n\t            y = Snap.rad(y);\n\t            var c = math.tan(x).toFixed(9);\n\t            var b = math.tan(y).toFixed(9);\n\t            return this.add(1, b, c, 1, 0, 0);\n\t        };\n\t        /*\\\n\t         * Matrix.x\n\t         [ method ]\n\t         **\n\t         * Returns x coordinate for given point after transformation described by the matrix. See also @Matrix.y\n\t         - x (number)\n\t         - y (number)\n\t         = (number) x\n\t        \\*/\n\t        matrixproto.x = function (x, y) {\n\t            return x * this.a + y * this.c + this.e;\n\t        };\n\t        /*\\\n\t         * Matrix.y\n\t         [ method ]\n\t         **\n\t         * Returns y coordinate for given point after transformation described by the matrix. See also @Matrix.x\n\t         - x (number)\n\t         - y (number)\n\t         = (number) y\n\t        \\*/\n\t        matrixproto.y = function (x, y) {\n\t            return x * this.b + y * this.d + this.f;\n\t        };\n\t        matrixproto.get = function (i) {\n\t            return +this[Str.fromCharCode(97 + i)].toFixed(4);\n\t        };\n\t        matrixproto.toString = function () {\n\t            return \"matrix(\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + \")\";\n\t        };\n\t        matrixproto.offset = function () {\n\t            return [this.e.toFixed(4), this.f.toFixed(4)];\n\t        };\n\t        function norm(a) {\n\t            return a[0] * a[0] + a[1] * a[1];\n\t        }\n\t        function normalize(a) {\n\t            var mag = math.sqrt(norm(a));\n\t            a[0] && (a[0] /= mag);\n\t            a[1] && (a[1] /= mag);\n\t        }\n\t        /*\\\n\t         * Matrix.determinant\n\t         [ method ]\n\t         **\n\t         * Finds determinant of the given matrix.\n\t         = (number) determinant\n\t        \\*/\n\t        matrixproto.determinant = function () {\n\t            return this.a * this.d - this.b * this.c;\n\t        };\n\t        /*\\\n\t         * Matrix.split\n\t         [ method ]\n\t         **\n\t         * Splits matrix into primitive transformations\n\t         = (object) in format:\n\t         o dx (number) translation by x\n\t         o dy (number) translation by y\n\t         o scalex (number) scale by x\n\t         o scaley (number) scale by y\n\t         o shear (number) shear\n\t         o rotate (number) rotation in deg\n\t         o isSimple (boolean) could it be represented via simple transformations\n\t        \\*/\n\t        matrixproto.split = function () {\n\t            var out = {};\n\t            // translation\n\t            out.dx = this.e;\n\t            out.dy = this.f;\n\t\n\t            // scale and shear\n\t            var row = [[this.a, this.b], [this.c, this.d]];\n\t            out.scalex = math.sqrt(norm(row[0]));\n\t            normalize(row[0]);\n\t\n\t            out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1];\n\t            row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear];\n\t\n\t            out.scaley = math.sqrt(norm(row[1]));\n\t            normalize(row[1]);\n\t            out.shear /= out.scaley;\n\t\n\t            if (this.determinant() < 0) {\n\t                out.scalex = -out.scalex;\n\t            }\n\t\n\t            // rotation\n\t            var sin = row[0][1],\n\t                cos = row[1][1];\n\t            if (cos < 0) {\n\t                out.rotate = Snap.deg(math.acos(cos));\n\t                if (sin < 0) {\n\t                    out.rotate = 360 - out.rotate;\n\t                }\n\t            } else {\n\t                out.rotate = Snap.deg(math.asin(sin));\n\t            }\n\t\n\t            out.isSimple = !+out.shear.toFixed(9) && (out.scalex.toFixed(9) == out.scaley.toFixed(9) || !out.rotate);\n\t            out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate;\n\t            out.noRotation = !+out.shear.toFixed(9) && !out.rotate;\n\t            return out;\n\t        };\n\t        /*\\\n\t         * Matrix.toTransformString\n\t         [ method ]\n\t         **\n\t         * Returns transform string that represents given matrix\n\t         = (string) transform string\n\t        \\*/\n\t        matrixproto.toTransformString = function (shorter) {\n\t            var s = shorter || this.split();\n\t            if (!+s.shear.toFixed(9)) {\n\t                s.scalex = +s.scalex.toFixed(4);\n\t                s.scaley = +s.scaley.toFixed(4);\n\t                s.rotate = +s.rotate.toFixed(4);\n\t                return  (s.dx || s.dy ? \"t\" + [+s.dx.toFixed(4), +s.dy.toFixed(4)] : E) +\n\t                        (s.rotate ? \"r\" + [+s.rotate.toFixed(4), 0, 0] : E) +\n\t                        (s.scalex != 1 || s.scaley != 1 ? \"s\" + [s.scalex, s.scaley, 0, 0] : E);\n\t            } else {\n\t                return \"m\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];\n\t            }\n\t        };\n\t    })(Matrix.prototype);\n\t    /*\\\n\t     * Snap.Matrix\n\t     [ method ]\n\t     **\n\t     * Matrix constructor, extend on your own risk.\n\t     * To create matrices use @Snap.matrix.\n\t    \\*/\n\t    Snap.Matrix = Matrix;\n\t    /*\\\n\t     * Snap.matrix\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Returns a matrix based on the given parameters\n\t     - a (number)\n\t     - b (number)\n\t     - c (number)\n\t     - d (number)\n\t     - e (number)\n\t     - f (number)\n\t     * or\n\t     - svgMatrix (SVGMatrix)\n\t     = (object) @Matrix\n\t    \\*/\n\t    Snap.matrix = function (a, b, c, d, e, f) {\n\t        return new Matrix(a, b, c, d, e, f);\n\t    };\n\t});\n\t\n\t// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n\t//\n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t//\n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t//\n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\tSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n\t    var has = \"hasOwnProperty\",\n\t        make = Snap._.make,\n\t        wrap = Snap._.wrap,\n\t        is = Snap.is,\n\t        getSomeDefs = Snap._.getSomeDefs,\n\t        reURLValue = /^url\\((['\"]?)([^)]+)\\1\\)$/,\n\t        $ = Snap._.$,\n\t        URL = Snap.url,\n\t        Str = String,\n\t        separator = Snap._.separator,\n\t        E = \"\";\n\t    /*\\\n\t     * Snap.deurl\n\t     [ method ]\n\t     **\n\t     * Unwraps path from `\"url(<path>)\"`.\n\t     - value (string) url path\n\t     = (string) unwrapped path\n\t    \\*/\n\t    Snap.deurl = function (value) {\n\t        var res = String(value).match(reURLValue);\n\t        return res ? res[2] : value;\n\t    }\n\t    // Attributes event handlers\n\t    eve.on(\"snap.util.attr.mask\", function (value) {\n\t        if (value instanceof Element || value instanceof Fragment) {\n\t            eve.stop();\n\t            if (value instanceof Fragment && value.node.childNodes.length == 1) {\n\t                value = value.node.firstChild;\n\t                getSomeDefs(this).appendChild(value);\n\t                value = wrap(value);\n\t            }\n\t            if (value.type == \"mask\") {\n\t                var mask = value;\n\t            } else {\n\t                mask = make(\"mask\", getSomeDefs(this));\n\t                mask.node.appendChild(value.node);\n\t            }\n\t            !mask.node.id && $(mask.node, {\n\t                id: mask.id\n\t            });\n\t            $(this.node, {\n\t                mask: URL(mask.id)\n\t            });\n\t        }\n\t    });\n\t    (function (clipIt) {\n\t        eve.on(\"snap.util.attr.clip\", clipIt);\n\t        eve.on(\"snap.util.attr.clip-path\", clipIt);\n\t        eve.on(\"snap.util.attr.clipPath\", clipIt);\n\t    }(function (value) {\n\t        if (value instanceof Element || value instanceof Fragment) {\n\t            eve.stop();\n\t            var clip,\n\t                node = value.node;\n\t            while (node) {\n\t                if (node.nodeName === \"clipPath\") {\n\t                    clip = new Element(node);\n\t                    break;\n\t                }\n\t                if (node.nodeName === \"svg\") {\n\t                    clip = undefined;\n\t                    break;\n\t                }\n\t                node = node.parentNode;\n\t            }\n\t            if (!clip) {\n\t                clip = make(\"clipPath\", getSomeDefs(this));\n\t                clip.node.appendChild(value.node);\n\t                !clip.node.id && $(clip.node, {\n\t                    id: clip.id\n\t                });\n\t            }\n\t            $(this.node, {\n\t                \"clip-path\": URL(clip.node.id || clip.id)\n\t            });\n\t        }\n\t    }));\n\t    function fillStroke(name) {\n\t        return function (value) {\n\t            eve.stop();\n\t            if (value instanceof Fragment && value.node.childNodes.length == 1 &&\n\t                (value.node.firstChild.tagName == \"radialGradient\" ||\n\t                value.node.firstChild.tagName == \"linearGradient\" ||\n\t                value.node.firstChild.tagName == \"pattern\")) {\n\t                value = value.node.firstChild;\n\t                getSomeDefs(this).appendChild(value);\n\t                value = wrap(value);\n\t            }\n\t            if (value instanceof Element) {\n\t                if (value.type == \"radialGradient\" || value.type == \"linearGradient\"\n\t                   || value.type == \"pattern\") {\n\t                    if (!value.node.id) {\n\t                        $(value.node, {\n\t                            id: value.id\n\t                        });\n\t                    }\n\t                    var fill = URL(value.node.id);\n\t                } else {\n\t                    fill = value.attr(name);\n\t                }\n\t            } else {\n\t                fill = Snap.color(value);\n\t                if (fill.error) {\n\t                    var grad = Snap(getSomeDefs(this).ownerSVGElement).gradient(value);\n\t                    if (grad) {\n\t                        if (!grad.node.id) {\n\t                            $(grad.node, {\n\t                                id: grad.id\n\t                            });\n\t                        }\n\t                        fill = URL(grad.node.id);\n\t                    } else {\n\t                        fill = value;\n\t                    }\n\t                } else {\n\t                    fill = Str(fill);\n\t                }\n\t            }\n\t            var attrs = {};\n\t            attrs[name] = fill;\n\t            $(this.node, attrs);\n\t            this.node.style[name] = E;\n\t        };\n\t    }\n\t    eve.on(\"snap.util.attr.fill\", fillStroke(\"fill\"));\n\t    eve.on(\"snap.util.attr.stroke\", fillStroke(\"stroke\"));\n\t    var gradrg = /^([lr])(?:\\(([^)]*)\\))?(.*)$/i;\n\t    eve.on(\"snap.util.grad.parse\", function parseGrad(string) {\n\t        string = Str(string);\n\t        var tokens = string.match(gradrg);\n\t        if (!tokens) {\n\t            return null;\n\t        }\n\t        var type = tokens[1],\n\t            params = tokens[2],\n\t            stops = tokens[3];\n\t        params = params.split(/\\s*,\\s*/).map(function (el) {\n\t            return +el == el ? +el : el;\n\t        });\n\t        if (params.length == 1 && params[0] == 0) {\n\t            params = [];\n\t        }\n\t        stops = stops.split(\"-\");\n\t        stops = stops.map(function (el) {\n\t            el = el.split(\":\");\n\t            var out = {\n\t                color: el[0]\n\t            };\n\t            if (el[1]) {\n\t                out.offset = parseFloat(el[1]);\n\t            }\n\t            return out;\n\t        });\n\t        var len = stops.length,\n\t            start = 0,\n\t            j = 0;\n\t        function seed(i, end) {\n\t            var step = (end - start) / (i - j);\n\t            for (var k = j; k < i; k++) {\n\t                stops[k].offset = +(+start + step * (k - j)).toFixed(2);\n\t            }\n\t            j = i;\n\t            start = end;\n\t        }\n\t        len--;\n\t        for (var i = 0; i < len; i++) if (\"offset\" in stops[i]) {\n\t            seed(i, stops[i].offset);\n\t        }\n\t        stops[len].offset = stops[len].offset || 100;\n\t        seed(len, stops[len].offset);\n\t        return {\n\t            type: type,\n\t            params: params,\n\t            stops: stops\n\t        };\n\t    });\n\t\n\t    eve.on(\"snap.util.attr.d\", function (value) {\n\t        eve.stop();\n\t        if (is(value, \"array\") && is(value[0], \"array\")) {\n\t            value = Snap.path.toString.call(value);\n\t        }\n\t        value = Str(value);\n\t        if (value.match(/[ruo]/i)) {\n\t            value = Snap.path.toAbsolute(value);\n\t        }\n\t        $(this.node, {d: value});\n\t    })(-1);\n\t    eve.on(\"snap.util.attr.#text\", function (value) {\n\t        eve.stop();\n\t        value = Str(value);\n\t        var txt = glob.doc.createTextNode(value);\n\t        while (this.node.firstChild) {\n\t            this.node.removeChild(this.node.firstChild);\n\t        }\n\t        this.node.appendChild(txt);\n\t    })(-1);\n\t    eve.on(\"snap.util.attr.path\", function (value) {\n\t        eve.stop();\n\t        this.attr({d: value});\n\t    })(-1);\n\t    eve.on(\"snap.util.attr.class\", function (value) {\n\t        eve.stop();\n\t        this.node.className.baseVal = value;\n\t    })(-1);\n\t    eve.on(\"snap.util.attr.viewBox\", function (value) {\n\t        var vb;\n\t        if (is(value, \"object\") && \"x\" in value) {\n\t            vb = [value.x, value.y, value.width, value.height].join(\" \");\n\t        } else if (is(value, \"array\")) {\n\t            vb = value.join(\" \");\n\t        } else {\n\t            vb = value;\n\t        }\n\t        $(this.node, {\n\t            viewBox: vb\n\t        });\n\t        eve.stop();\n\t    })(-1);\n\t    eve.on(\"snap.util.attr.transform\", function (value) {\n\t        this.transform(value);\n\t        eve.stop();\n\t    })(-1);\n\t    eve.on(\"snap.util.attr.r\", function (value) {\n\t        if (this.type == \"rect\") {\n\t            eve.stop();\n\t            $(this.node, {\n\t                rx: value,\n\t                ry: value\n\t            });\n\t        }\n\t    })(-1);\n\t    eve.on(\"snap.util.attr.textpath\", function (value) {\n\t        eve.stop();\n\t        if (this.type == \"text\") {\n\t            var id, tp, node;\n\t            if (!value && this.textPath) {\n\t                tp = this.textPath;\n\t                while (tp.node.firstChild) {\n\t                    this.node.appendChild(tp.node.firstChild);\n\t                }\n\t                tp.remove();\n\t                delete this.textPath;\n\t                return;\n\t            }\n\t            if (is(value, \"string\")) {\n\t                var defs = getSomeDefs(this),\n\t                    path = wrap(defs.parentNode).path(value);\n\t                defs.appendChild(path.node);\n\t                id = path.id;\n\t                path.attr({id: id});\n\t            } else {\n\t                value = wrap(value);\n\t                if (value instanceof Element) {\n\t                    id = value.attr(\"id\");\n\t                    if (!id) {\n\t                        id = value.id;\n\t                        value.attr({id: id});\n\t                    }\n\t                }\n\t            }\n\t            if (id) {\n\t                tp = this.textPath;\n\t                node = this.node;\n\t                if (tp) {\n\t                    tp.attr({\"xlink:href\": \"#\" + id});\n\t                } else {\n\t                    tp = $(\"textPath\", {\n\t                        \"xlink:href\": \"#\" + id\n\t                    });\n\t                    while (node.firstChild) {\n\t                        tp.appendChild(node.firstChild);\n\t                    }\n\t                    node.appendChild(tp);\n\t                    this.textPath = wrap(tp);\n\t                }\n\t            }\n\t        }\n\t    })(-1);\n\t    eve.on(\"snap.util.attr.text\", function (value) {\n\t        if (this.type == \"text\") {\n\t            var i = 0,\n\t                node = this.node,\n\t                tuner = function (chunk) {\n\t                    var out = $(\"tspan\");\n\t                    if (is(chunk, \"array\")) {\n\t                        for (var i = 0; i < chunk.length; i++) {\n\t                            out.appendChild(tuner(chunk[i]));\n\t                        }\n\t                    } else {\n\t                        out.appendChild(glob.doc.createTextNode(chunk));\n\t                    }\n\t                    out.normalize && out.normalize();\n\t                    return out;\n\t                };\n\t            while (node.firstChild) {\n\t                node.removeChild(node.firstChild);\n\t            }\n\t            var tuned = tuner(value);\n\t            while (tuned.firstChild) {\n\t                node.appendChild(tuned.firstChild);\n\t            }\n\t        }\n\t        eve.stop();\n\t    })(-1);\n\t    function setFontSize(value) {\n\t        eve.stop();\n\t        if (value == +value) {\n\t            value += \"px\";\n\t        }\n\t        this.node.style.fontSize = value;\n\t    }\n\t    eve.on(\"snap.util.attr.fontSize\", setFontSize)(-1);\n\t    eve.on(\"snap.util.attr.font-size\", setFontSize)(-1);\n\t\n\t\n\t    eve.on(\"snap.util.getattr.transform\", function () {\n\t        eve.stop();\n\t        return this.transform();\n\t    })(-1);\n\t    eve.on(\"snap.util.getattr.textpath\", function () {\n\t        eve.stop();\n\t        return this.textPath;\n\t    })(-1);\n\t    // Markers\n\t    (function () {\n\t        function getter(end) {\n\t            return function () {\n\t                eve.stop();\n\t                var style = glob.doc.defaultView.getComputedStyle(this.node, null).getPropertyValue(\"marker-\" + end);\n\t                if (style == \"none\") {\n\t                    return style;\n\t                } else {\n\t                    return Snap(glob.doc.getElementById(style.match(reURLValue)[1]));\n\t                }\n\t            };\n\t        }\n\t        function setter(end) {\n\t            return function (value) {\n\t                eve.stop();\n\t                var name = \"marker\" + end.charAt(0).toUpperCase() + end.substring(1);\n\t                if (value == \"\" || !value) {\n\t                    this.node.style[name] = \"none\";\n\t                    return;\n\t                }\n\t                if (value.type == \"marker\") {\n\t                    var id = value.node.id;\n\t                    if (!id) {\n\t                        $(value.node, {id: value.id});\n\t                    }\n\t                    this.node.style[name] = URL(id);\n\t                    return;\n\t                }\n\t            };\n\t        }\n\t        eve.on(\"snap.util.getattr.marker-end\", getter(\"end\"))(-1);\n\t        eve.on(\"snap.util.getattr.markerEnd\", getter(\"end\"))(-1);\n\t        eve.on(\"snap.util.getattr.marker-start\", getter(\"start\"))(-1);\n\t        eve.on(\"snap.util.getattr.markerStart\", getter(\"start\"))(-1);\n\t        eve.on(\"snap.util.getattr.marker-mid\", getter(\"mid\"))(-1);\n\t        eve.on(\"snap.util.getattr.markerMid\", getter(\"mid\"))(-1);\n\t        eve.on(\"snap.util.attr.marker-end\", setter(\"end\"))(-1);\n\t        eve.on(\"snap.util.attr.markerEnd\", setter(\"end\"))(-1);\n\t        eve.on(\"snap.util.attr.marker-start\", setter(\"start\"))(-1);\n\t        eve.on(\"snap.util.attr.markerStart\", setter(\"start\"))(-1);\n\t        eve.on(\"snap.util.attr.marker-mid\", setter(\"mid\"))(-1);\n\t        eve.on(\"snap.util.attr.markerMid\", setter(\"mid\"))(-1);\n\t    }());\n\t    eve.on(\"snap.util.getattr.r\", function () {\n\t        if (this.type == \"rect\" && $(this.node, \"rx\") == $(this.node, \"ry\")) {\n\t            eve.stop();\n\t            return $(this.node, \"rx\");\n\t        }\n\t    })(-1);\n\t    function textExtract(node) {\n\t        var out = [];\n\t        var children = node.childNodes;\n\t        for (var i = 0, ii = children.length; i < ii; i++) {\n\t            var chi = children[i];\n\t            if (chi.nodeType == 3) {\n\t                out.push(chi.nodeValue);\n\t            }\n\t            if (chi.tagName == \"tspan\") {\n\t                if (chi.childNodes.length == 1 && chi.firstChild.nodeType == 3) {\n\t                    out.push(chi.firstChild.nodeValue);\n\t                } else {\n\t                    out.push(textExtract(chi));\n\t                }\n\t            }\n\t        }\n\t        return out;\n\t    }\n\t    eve.on(\"snap.util.getattr.text\", function () {\n\t        if (this.type == \"text\" || this.type == \"tspan\") {\n\t            eve.stop();\n\t            var out = textExtract(this.node);\n\t            return out.length == 1 ? out[0] : out;\n\t        }\n\t    })(-1);\n\t    eve.on(\"snap.util.getattr.#text\", function () {\n\t        return this.node.textContent;\n\t    })(-1);\n\t    eve.on(\"snap.util.getattr.fill\", function (internal) {\n\t        if (internal) {\n\t            return;\n\t        }\n\t        eve.stop();\n\t        var value = eve(\"snap.util.getattr.fill\", this, true).firstDefined();\n\t        return Snap(Snap.deurl(value)) || value;\n\t    })(-1);\n\t    eve.on(\"snap.util.getattr.stroke\", function (internal) {\n\t        if (internal) {\n\t            return;\n\t        }\n\t        eve.stop();\n\t        var value = eve(\"snap.util.getattr.stroke\", this, true).firstDefined();\n\t        return Snap(Snap.deurl(value)) || value;\n\t    })(-1);\n\t    eve.on(\"snap.util.getattr.viewBox\", function () {\n\t        eve.stop();\n\t        var vb = $(this.node, \"viewBox\");\n\t        if (vb) {\n\t            vb = vb.split(separator);\n\t            return Snap._.box(+vb[0], +vb[1], +vb[2], +vb[3]);\n\t        } else {\n\t            return;\n\t        }\n\t    })(-1);\n\t    eve.on(\"snap.util.getattr.points\", function () {\n\t        var p = $(this.node, \"points\");\n\t        eve.stop();\n\t        if (p) {\n\t            return p.split(separator);\n\t        } else {\n\t            return;\n\t        }\n\t    })(-1);\n\t    eve.on(\"snap.util.getattr.path\", function () {\n\t        var p = $(this.node, \"d\");\n\t        eve.stop();\n\t        return p;\n\t    })(-1);\n\t    eve.on(\"snap.util.getattr.class\", function () {\n\t        return this.node.className.baseVal;\n\t    })(-1);\n\t    function getFontSize() {\n\t        eve.stop();\n\t        return this.node.style.fontSize;\n\t    }\n\t    eve.on(\"snap.util.getattr.fontSize\", getFontSize)(-1);\n\t    eve.on(\"snap.util.getattr.font-size\", getFontSize)(-1);\n\t});\n\t\n\t// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n\t//\n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t//\n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t//\n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\tSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n\t    var rgNotSpace = /\\S+/g,\n\t        rgBadSpace = /[\\t\\r\\n\\f]/g,\n\t        rgTrim = /(^\\s+|\\s+$)/g,\n\t        Str = String,\n\t        elproto = Element.prototype;\n\t    /*\\\n\t     * Element.addClass\n\t     [ method ]\n\t     **\n\t     * Adds given class name or list of class names to the element.\n\t     - value (string) class name or space separated list of class names\n\t     **\n\t     = (Element) original element.\n\t    \\*/\n\t    elproto.addClass = function (value) {\n\t        var classes = Str(value || \"\").match(rgNotSpace) || [],\n\t            elem = this.node,\n\t            className = elem.className.baseVal,\n\t            curClasses = className.match(rgNotSpace) || [],\n\t            j,\n\t            pos,\n\t            clazz,\n\t            finalValue;\n\t\n\t        if (classes.length) {\n\t            j = 0;\n\t            while (clazz = classes[j++]) {\n\t                pos = curClasses.indexOf(clazz);\n\t                if (!~pos) {\n\t                    curClasses.push(clazz);\n\t                }\n\t            }\n\t\n\t            finalValue = curClasses.join(\" \");\n\t            if (className != finalValue) {\n\t                elem.className.baseVal = finalValue;\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.removeClass\n\t     [ method ]\n\t     **\n\t     * Removes given class name or list of class names from the element.\n\t     - value (string) class name or space separated list of class names\n\t     **\n\t     = (Element) original element.\n\t    \\*/\n\t    elproto.removeClass = function (value) {\n\t        var classes = Str(value || \"\").match(rgNotSpace) || [],\n\t            elem = this.node,\n\t            className = elem.className.baseVal,\n\t            curClasses = className.match(rgNotSpace) || [],\n\t            j,\n\t            pos,\n\t            clazz,\n\t            finalValue;\n\t        if (curClasses.length) {\n\t            j = 0;\n\t            while (clazz = classes[j++]) {\n\t                pos = curClasses.indexOf(clazz);\n\t                if (~pos) {\n\t                    curClasses.splice(pos, 1);\n\t                }\n\t            }\n\t\n\t            finalValue = curClasses.join(\" \");\n\t            if (className != finalValue) {\n\t                elem.className.baseVal = finalValue;\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.hasClass\n\t     [ method ]\n\t     **\n\t     * Checks if the element has a given class name in the list of class names applied to it.\n\t     - value (string) class name\n\t     **\n\t     = (boolean) `true` if the element has given class\n\t    \\*/\n\t    elproto.hasClass = function (value) {\n\t        var elem = this.node,\n\t            className = elem.className.baseVal,\n\t            curClasses = className.match(rgNotSpace) || [];\n\t        return !!~curClasses.indexOf(value);\n\t    };\n\t    /*\\\n\t     * Element.toggleClass\n\t     [ method ]\n\t     **\n\t     * Add or remove one or more classes from the element, depending on either\n\t     * the class’s presence or the value of the `flag` argument.\n\t     - value (string) class name or space separated list of class names\n\t     - flag (boolean) value to determine whether the class should be added or removed\n\t     **\n\t     = (Element) original element.\n\t    \\*/\n\t    elproto.toggleClass = function (value, flag) {\n\t        if (flag != null) {\n\t            if (flag) {\n\t                return this.addClass(value);\n\t            } else {\n\t                return this.removeClass(value);\n\t            }\n\t        }\n\t        var classes = (value || \"\").match(rgNotSpace) || [],\n\t            elem = this.node,\n\t            className = elem.className.baseVal,\n\t            curClasses = className.match(rgNotSpace) || [],\n\t            j,\n\t            pos,\n\t            clazz,\n\t            finalValue;\n\t        j = 0;\n\t        while (clazz = classes[j++]) {\n\t            pos = curClasses.indexOf(clazz);\n\t            if (~pos) {\n\t                curClasses.splice(pos, 1);\n\t            } else {\n\t                curClasses.push(clazz);\n\t            }\n\t        }\n\t\n\t        finalValue = curClasses.join(\" \");\n\t        if (className != finalValue) {\n\t            elem.className.baseVal = finalValue;\n\t        }\n\t        return this;\n\t    };\n\t});\n\t\n\t// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n\t//\n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t//\n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t//\n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\tSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n\t    var operators = {\n\t            \"+\": function (x, y) {\n\t                    return x + y;\n\t                },\n\t            \"-\": function (x, y) {\n\t                    return x - y;\n\t                },\n\t            \"/\": function (x, y) {\n\t                    return x / y;\n\t                },\n\t            \"*\": function (x, y) {\n\t                    return x * y;\n\t                }\n\t        },\n\t        Str = String,\n\t        reUnit = /[a-z]+$/i,\n\t        reAddon = /^\\s*([+\\-\\/*])\\s*=\\s*([\\d.eE+\\-]+)\\s*([^\\d\\s]+)?\\s*$/;\n\t    function getNumber(val) {\n\t        return val;\n\t    }\n\t    function getUnit(unit) {\n\t        return function (val) {\n\t            return +val.toFixed(3) + unit;\n\t        };\n\t    }\n\t    eve.on(\"snap.util.attr\", function (val) {\n\t        var plus = Str(val).match(reAddon);\n\t        if (plus) {\n\t            var evnt = eve.nt(),\n\t                name = evnt.substring(evnt.lastIndexOf(\".\") + 1),\n\t                a = this.attr(name),\n\t                atr = {};\n\t            eve.stop();\n\t            var unit = plus[3] || \"\",\n\t                aUnit = a.match(reUnit),\n\t                op = operators[plus[1]];\n\t            if (aUnit && aUnit == unit) {\n\t                val = op(parseFloat(a), +plus[2]);\n\t            } else {\n\t                a = this.asPX(name);\n\t                val = op(this.asPX(name), this.asPX(name, plus[2] + unit));\n\t            }\n\t            if (isNaN(a) || isNaN(val)) {\n\t                return;\n\t            }\n\t            atr[name] = val;\n\t            this.attr(atr);\n\t        }\n\t    })(-10);\n\t    eve.on(\"snap.util.equal\", function (name, b) {\n\t        var A, B, a = Str(this.attr(name) || \"\"),\n\t            el = this,\n\t            bplus = Str(b).match(reAddon);\n\t        if (bplus) {\n\t            eve.stop();\n\t            var unit = bplus[3] || \"\",\n\t                aUnit = a.match(reUnit),\n\t                op = operators[bplus[1]];\n\t            if (aUnit && aUnit == unit) {\n\t                return {\n\t                    from: parseFloat(a),\n\t                    to: op(parseFloat(a), +bplus[2]),\n\t                    f: getUnit(aUnit)\n\t                };\n\t            } else {\n\t                a = this.asPX(name);\n\t                return {\n\t                    from: a,\n\t                    to: op(a, this.asPX(name, bplus[2] + unit)),\n\t                    f: getNumber\n\t                };\n\t            }\n\t        }\n\t    })(-10);\n\t});\n\t\n\t// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n\t//\n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t//\n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t//\n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\tSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n\t    var proto = Paper.prototype,\n\t        is = Snap.is;\n\t    /*\\\n\t     * Paper.rect\n\t     [ method ]\n\t     *\n\t     * Draws a rectangle\n\t     **\n\t     - x (number) x coordinate of the top left corner\n\t     - y (number) y coordinate of the top left corner\n\t     - width (number) width\n\t     - height (number) height\n\t     - rx (number) #optional horizontal radius for rounded corners, default is 0\n\t     - ry (number) #optional vertical radius for rounded corners, default is rx or 0\n\t     = (object) the `rect` element\n\t     **\n\t     > Usage\n\t     | // regular rectangle\n\t     | var c = paper.rect(10, 10, 50, 50);\n\t     | // rectangle with rounded corners\n\t     | var c = paper.rect(40, 40, 50, 50, 10);\n\t    \\*/\n\t    proto.rect = function (x, y, w, h, rx, ry) {\n\t        var attr;\n\t        if (ry == null) {\n\t            ry = rx;\n\t        }\n\t        if (is(x, \"object\") && x == \"[object Object]\") {\n\t            attr = x;\n\t        } else if (x != null) {\n\t            attr = {\n\t                x: x,\n\t                y: y,\n\t                width: w,\n\t                height: h\n\t            };\n\t            if (rx != null) {\n\t                attr.rx = rx;\n\t                attr.ry = ry;\n\t            }\n\t        }\n\t        return this.el(\"rect\", attr);\n\t    };\n\t    /*\\\n\t     * Paper.circle\n\t     [ method ]\n\t     **\n\t     * Draws a circle\n\t     **\n\t     - x (number) x coordinate of the centre\n\t     - y (number) y coordinate of the centre\n\t     - r (number) radius\n\t     = (object) the `circle` element\n\t     **\n\t     > Usage\n\t     | var c = paper.circle(50, 50, 40);\n\t    \\*/\n\t    proto.circle = function (cx, cy, r) {\n\t        var attr;\n\t        if (is(cx, \"object\") && cx == \"[object Object]\") {\n\t            attr = cx;\n\t        } else if (cx != null) {\n\t            attr = {\n\t                cx: cx,\n\t                cy: cy,\n\t                r: r\n\t            };\n\t        }\n\t        return this.el(\"circle\", attr);\n\t    };\n\t\n\t    var preload = (function () {\n\t        function onerror() {\n\t            this.parentNode.removeChild(this);\n\t        }\n\t        return function (src, f) {\n\t            var img = glob.doc.createElement(\"img\"),\n\t                body = glob.doc.body;\n\t            img.style.cssText = \"position:absolute;left:-9999em;top:-9999em\";\n\t            img.onload = function () {\n\t                f.call(img);\n\t                img.onload = img.onerror = null;\n\t                body.removeChild(img);\n\t            };\n\t            img.onerror = onerror;\n\t            body.appendChild(img);\n\t            img.src = src;\n\t        };\n\t    }());\n\t\n\t    /*\\\n\t     * Paper.image\n\t     [ method ]\n\t     **\n\t     * Places an image on the surface\n\t     **\n\t     - src (string) URI of the source image\n\t     - x (number) x offset position\n\t     - y (number) y offset position\n\t     - width (number) width of the image\n\t     - height (number) height of the image\n\t     = (object) the `image` element\n\t     * or\n\t     = (object) Snap element object with type `image`\n\t     **\n\t     > Usage\n\t     | var c = paper.image(\"apple.png\", 10, 10, 80, 80);\n\t    \\*/\n\t    proto.image = function (src, x, y, width, height) {\n\t        var el = this.el(\"image\");\n\t        if (is(src, \"object\") && \"src\" in src) {\n\t            el.attr(src);\n\t        } else if (src != null) {\n\t            var set = {\n\t                \"xlink:href\": src,\n\t                preserveAspectRatio: \"none\"\n\t            };\n\t            if (x != null && y != null) {\n\t                set.x = x;\n\t                set.y = y;\n\t            }\n\t            if (width != null && height != null) {\n\t                set.width = width;\n\t                set.height = height;\n\t            } else {\n\t                preload(src, function () {\n\t                    Snap._.$(el.node, {\n\t                        width: this.offsetWidth,\n\t                        height: this.offsetHeight\n\t                    });\n\t                });\n\t            }\n\t            Snap._.$(el.node, set);\n\t        }\n\t        return el;\n\t    };\n\t    /*\\\n\t     * Paper.ellipse\n\t     [ method ]\n\t     **\n\t     * Draws an ellipse\n\t     **\n\t     - x (number) x coordinate of the centre\n\t     - y (number) y coordinate of the centre\n\t     - rx (number) horizontal radius\n\t     - ry (number) vertical radius\n\t     = (object) the `ellipse` element\n\t     **\n\t     > Usage\n\t     | var c = paper.ellipse(50, 50, 40, 20);\n\t    \\*/\n\t    proto.ellipse = function (cx, cy, rx, ry) {\n\t        var attr;\n\t        if (is(cx, \"object\") && cx == \"[object Object]\") {\n\t            attr = cx;\n\t        } else if (cx != null) {\n\t            attr ={\n\t                cx: cx,\n\t                cy: cy,\n\t                rx: rx,\n\t                ry: ry\n\t            };\n\t        }\n\t        return this.el(\"ellipse\", attr);\n\t    };\n\t    // SIERRA Paper.path(): Unclear from the link what a Catmull-Rom curveto is, and why it would make life any easier.\n\t    /*\\\n\t     * Paper.path\n\t     [ method ]\n\t     **\n\t     * Creates a `<path>` element using the given string as the path's definition\n\t     - pathString (string) #optional path string in SVG format\n\t     * Path string consists of one-letter commands, followed by comma seprarated arguments in numerical form. Example:\n\t     | \"M10,20L30,40\"\n\t     * This example features two commands: `M`, with arguments `(10, 20)` and `L` with arguments `(30, 40)`. Uppercase letter commands express coordinates in absolute terms, while lowercase commands express them in relative terms from the most recently declared coordinates.\n\t     *\n\t     # <p>Here is short list of commands available, for more details see <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path's data attribute's format are described in the SVG specification.\">SVG path string format</a> or <a href=\"https://developer.mozilla.org/en/SVG/Tutorial/Paths\">article about path strings at MDN</a>.</p>\n\t     # <table><thead><tr><th>Command</th><th>Name</th><th>Parameters</th></tr></thead><tbody>\n\t     # <tr><td>M</td><td>moveto</td><td>(x y)+</td></tr>\n\t     # <tr><td>Z</td><td>closepath</td><td>(none)</td></tr>\n\t     # <tr><td>L</td><td>lineto</td><td>(x y)+</td></tr>\n\t     # <tr><td>H</td><td>horizontal lineto</td><td>x+</td></tr>\n\t     # <tr><td>V</td><td>vertical lineto</td><td>y+</td></tr>\n\t     # <tr><td>C</td><td>curveto</td><td>(x1 y1 x2 y2 x y)+</td></tr>\n\t     # <tr><td>S</td><td>smooth curveto</td><td>(x2 y2 x y)+</td></tr>\n\t     # <tr><td>Q</td><td>quadratic Bézier curveto</td><td>(x1 y1 x y)+</td></tr>\n\t     # <tr><td>T</td><td>smooth quadratic Bézier curveto</td><td>(x y)+</td></tr>\n\t     # <tr><td>A</td><td>elliptical arc</td><td>(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</td></tr>\n\t     # <tr><td>R</td><td><a href=\"http://en.wikipedia.org/wiki/Catmull–Rom_spline#Catmull.E2.80.93Rom_spline\">Catmull-Rom curveto</a>*</td><td>x1 y1 (x y)+</td></tr></tbody></table>\n\t     * * _Catmull-Rom curveto_ is a not standard SVG command and added to make life easier.\n\t     * Note: there is a special case when a path consists of only three commands: `M10,10R…z`. In this case the path connects back to its starting point.\n\t     > Usage\n\t     | var c = paper.path(\"M10 10L90 90\");\n\t     | // draw a diagonal line:\n\t     | // move to 10,10, line to 90,90\n\t    \\*/\n\t    proto.path = function (d) {\n\t        var attr;\n\t        if (is(d, \"object\") && !is(d, \"array\")) {\n\t            attr = d;\n\t        } else if (d) {\n\t            attr = {d: d};\n\t        }\n\t        return this.el(\"path\", attr);\n\t    };\n\t    /*\\\n\t     * Paper.g\n\t     [ method ]\n\t     **\n\t     * Creates a group element\n\t     **\n\t     - varargs (…) #optional elements to nest within the group\n\t     = (object) the `g` element\n\t     **\n\t     > Usage\n\t     | var c1 = paper.circle(),\n\t     |     c2 = paper.rect(),\n\t     |     g = paper.g(c2, c1); // note that the order of elements is different\n\t     * or\n\t     | var c1 = paper.circle(),\n\t     |     c2 = paper.rect(),\n\t     |     g = paper.g();\n\t     | g.add(c2, c1);\n\t    \\*/\n\t    /*\\\n\t     * Paper.group\n\t     [ method ]\n\t     **\n\t     * See @Paper.g\n\t    \\*/\n\t    proto.group = proto.g = function (first) {\n\t        var attr,\n\t            el = this.el(\"g\");\n\t        if (arguments.length == 1 && first && !first.type) {\n\t            el.attr(first);\n\t        } else if (arguments.length) {\n\t            el.add(Array.prototype.slice.call(arguments, 0));\n\t        }\n\t        return el;\n\t    };\n\t    /*\\\n\t     * Paper.svg\n\t     [ method ]\n\t     **\n\t     * Creates a nested SVG element.\n\t     - x (number) @optional X of the element\n\t     - y (number) @optional Y of the element\n\t     - width (number) @optional width of the element\n\t     - height (number) @optional height of the element\n\t     - vbx (number) @optional viewbox X\n\t     - vby (number) @optional viewbox Y\n\t     - vbw (number) @optional viewbox width\n\t     - vbh (number) @optional viewbox height\n\t     **\n\t     = (object) the `svg` element\n\t     **\n\t    \\*/\n\t    proto.svg = function (x, y, width, height, vbx, vby, vbw, vbh) {\n\t        var attrs = {};\n\t        if (is(x, \"object\") && y == null) {\n\t            attrs = x;\n\t        } else {\n\t            if (x != null) {\n\t                attrs.x = x;\n\t            }\n\t            if (y != null) {\n\t                attrs.y = y;\n\t            }\n\t            if (width != null) {\n\t                attrs.width = width;\n\t            }\n\t            if (height != null) {\n\t                attrs.height = height;\n\t            }\n\t            if (vbx != null && vby != null && vbw != null && vbh != null) {\n\t                attrs.viewBox = [vbx, vby, vbw, vbh];\n\t            }\n\t        }\n\t        return this.el(\"svg\", attrs);\n\t    };\n\t    /*\\\n\t     * Paper.mask\n\t     [ method ]\n\t     **\n\t     * Equivalent in behaviour to @Paper.g, except it’s a mask.\n\t     **\n\t     = (object) the `mask` element\n\t     **\n\t    \\*/\n\t    proto.mask = function (first) {\n\t        var attr,\n\t            el = this.el(\"mask\");\n\t        if (arguments.length == 1 && first && !first.type) {\n\t            el.attr(first);\n\t        } else if (arguments.length) {\n\t            el.add(Array.prototype.slice.call(arguments, 0));\n\t        }\n\t        return el;\n\t    };\n\t    /*\\\n\t     * Paper.ptrn\n\t     [ method ]\n\t     **\n\t     * Equivalent in behaviour to @Paper.g, except it’s a pattern.\n\t     - x (number) @optional X of the element\n\t     - y (number) @optional Y of the element\n\t     - width (number) @optional width of the element\n\t     - height (number) @optional height of the element\n\t     - vbx (number) @optional viewbox X\n\t     - vby (number) @optional viewbox Y\n\t     - vbw (number) @optional viewbox width\n\t     - vbh (number) @optional viewbox height\n\t     **\n\t     = (object) the `pattern` element\n\t     **\n\t    \\*/\n\t    proto.ptrn = function (x, y, width, height, vx, vy, vw, vh) {\n\t        if (is(x, \"object\")) {\n\t            var attr = x;\n\t        } else {\n\t            attr = {patternUnits: \"userSpaceOnUse\"};\n\t            if (x) {\n\t                attr.x = x;\n\t            }\n\t            if (y) {\n\t                attr.y = y;\n\t            }\n\t            if (width != null) {\n\t                attr.width = width;\n\t            }\n\t            if (height != null) {\n\t                attr.height = height;\n\t            }\n\t            if (vx != null && vy != null && vw != null && vh != null) {\n\t                attr.viewBox = [vx, vy, vw, vh];\n\t            } else {\n\t                attr.viewBox = [x || 0, y || 0, width || 0, height || 0];\n\t            }\n\t        }\n\t        return this.el(\"pattern\", attr);\n\t    };\n\t    /*\\\n\t     * Paper.use\n\t     [ method ]\n\t     **\n\t     * Creates a <use> element.\n\t     - id (string) @optional id of element to link\n\t     * or\n\t     - id (Element) @optional element to link\n\t     **\n\t     = (object) the `use` element\n\t     **\n\t    \\*/\n\t    proto.use = function (id) {\n\t        if (id != null) {\n\t            if (id instanceof Element) {\n\t                if (!id.attr(\"id\")) {\n\t                    id.attr({id: Snap._.id(id)});\n\t                }\n\t                id = id.attr(\"id\");\n\t            }\n\t            if (String(id).charAt() == \"#\") {\n\t                id = id.substring(1);\n\t            }\n\t            return this.el(\"use\", {\"xlink:href\": \"#\" + id});\n\t        } else {\n\t            return Element.prototype.use.call(this);\n\t        }\n\t    };\n\t    /*\\\n\t     * Paper.symbol\n\t     [ method ]\n\t     **\n\t     * Creates a <symbol> element.\n\t     - vbx (number) @optional viewbox X\n\t     - vby (number) @optional viewbox Y\n\t     - vbw (number) @optional viewbox width\n\t     - vbh (number) @optional viewbox height\n\t     = (object) the `symbol` element\n\t     **\n\t    \\*/\n\t    proto.symbol = function (vx, vy, vw, vh) {\n\t        var attr = {};\n\t        if (vx != null && vy != null && vw != null && vh != null) {\n\t            attr.viewBox = [vx, vy, vw, vh];\n\t        }\n\t\n\t        return this.el(\"symbol\", attr);\n\t    };\n\t    /*\\\n\t     * Paper.text\n\t     [ method ]\n\t     **\n\t     * Draws a text string\n\t     **\n\t     - x (number) x coordinate position\n\t     - y (number) y coordinate position\n\t     - text (string|array) The text string to draw or array of strings to nest within separate `<tspan>` elements\n\t     = (object) the `text` element\n\t     **\n\t     > Usage\n\t     | var t1 = paper.text(50, 50, \"Snap\");\n\t     | var t2 = paper.text(50, 50, [\"S\",\"n\",\"a\",\"p\"]);\n\t     | // Text path usage\n\t     | t1.attr({textpath: \"M10,10L100,100\"});\n\t     | // or\n\t     | var pth = paper.path(\"M10,10L100,100\");\n\t     | t1.attr({textpath: pth});\n\t    \\*/\n\t    proto.text = function (x, y, text) {\n\t        var attr = {};\n\t        if (is(x, \"object\")) {\n\t            attr = x;\n\t        } else if (x != null) {\n\t            attr = {\n\t                x: x,\n\t                y: y,\n\t                text: text || \"\"\n\t            };\n\t        }\n\t        return this.el(\"text\", attr);\n\t    };\n\t    /*\\\n\t     * Paper.line\n\t     [ method ]\n\t     **\n\t     * Draws a line\n\t     **\n\t     - x1 (number) x coordinate position of the start\n\t     - y1 (number) y coordinate position of the start\n\t     - x2 (number) x coordinate position of the end\n\t     - y2 (number) y coordinate position of the end\n\t     = (object) the `line` element\n\t     **\n\t     > Usage\n\t     | var t1 = paper.line(50, 50, 100, 100);\n\t    \\*/\n\t    proto.line = function (x1, y1, x2, y2) {\n\t        var attr = {};\n\t        if (is(x1, \"object\")) {\n\t            attr = x1;\n\t        } else if (x1 != null) {\n\t            attr = {\n\t                x1: x1,\n\t                x2: x2,\n\t                y1: y1,\n\t                y2: y2\n\t            };\n\t        }\n\t        return this.el(\"line\", attr);\n\t    };\n\t    /*\\\n\t     * Paper.polyline\n\t     [ method ]\n\t     **\n\t     * Draws a polyline\n\t     **\n\t     - points (array) array of points\n\t     * or\n\t     - varargs (…) points\n\t     = (object) the `polyline` element\n\t     **\n\t     > Usage\n\t     | var p1 = paper.polyline([10, 10, 100, 100]);\n\t     | var p2 = paper.polyline(10, 10, 100, 100);\n\t    \\*/\n\t    proto.polyline = function (points) {\n\t        if (arguments.length > 1) {\n\t            points = Array.prototype.slice.call(arguments, 0);\n\t        }\n\t        var attr = {};\n\t        if (is(points, \"object\") && !is(points, \"array\")) {\n\t            attr = points;\n\t        } else if (points != null) {\n\t            attr = {points: points};\n\t        }\n\t        return this.el(\"polyline\", attr);\n\t    };\n\t    /*\\\n\t     * Paper.polygon\n\t     [ method ]\n\t     **\n\t     * Draws a polygon. See @Paper.polyline\n\t    \\*/\n\t    proto.polygon = function (points) {\n\t        if (arguments.length > 1) {\n\t            points = Array.prototype.slice.call(arguments, 0);\n\t        }\n\t        var attr = {};\n\t        if (is(points, \"object\") && !is(points, \"array\")) {\n\t            attr = points;\n\t        } else if (points != null) {\n\t            attr = {points: points};\n\t        }\n\t        return this.el(\"polygon\", attr);\n\t    };\n\t    // gradients\n\t    (function () {\n\t        var $ = Snap._.$;\n\t        // gradients' helpers\n\t        /*\\\n\t         * Element.stops\n\t         [ method ]\n\t         **\n\t         * Only for gradients!\n\t         * Returns array of gradient stops elements.\n\t         = (array) the stops array.\n\t        \\*/\n\t        function Gstops() {\n\t            return this.selectAll(\"stop\");\n\t        }\n\t        /*\\\n\t         * Element.addStop\n\t         [ method ]\n\t         **\n\t         * Only for gradients!\n\t         * Adds another stop to the gradient.\n\t         - color (string) stops color\n\t         - offset (number) stops offset 0..100\n\t         = (object) gradient element\n\t        \\*/\n\t        function GaddStop(color, offset) {\n\t            var stop = $(\"stop\"),\n\t                attr = {\n\t                    offset: +offset + \"%\"\n\t                };\n\t            color = Snap.color(color);\n\t            attr[\"stop-color\"] = color.hex;\n\t            if (color.opacity < 1) {\n\t                attr[\"stop-opacity\"] = color.opacity;\n\t            }\n\t            $(stop, attr);\n\t            var stops = this.stops(),\n\t                inserted;\n\t            for (var i = 0; i < stops.length; i++) {\n\t                var stopOffset = parseFloat(stops[i].attr(\"offset\"));\n\t                if (stopOffset > offset) {\n\t                    this.node.insertBefore(stop, stops[i].node);\n\t                    inserted = true;\n\t                    break;\n\t                }\n\t            }\n\t            if (!inserted) {\n\t                this.node.appendChild(stop);\n\t            }\n\t            return this;\n\t        }\n\t        function GgetBBox() {\n\t            if (this.type == \"linearGradient\") {\n\t                var x1 = $(this.node, \"x1\") || 0,\n\t                    x2 = $(this.node, \"x2\") || 1,\n\t                    y1 = $(this.node, \"y1\") || 0,\n\t                    y2 = $(this.node, \"y2\") || 0;\n\t                return Snap._.box(x1, y1, math.abs(x2 - x1), math.abs(y2 - y1));\n\t            } else {\n\t                var cx = this.node.cx || .5,\n\t                    cy = this.node.cy || .5,\n\t                    r = this.node.r || 0;\n\t                return Snap._.box(cx - r, cy - r, r * 2, r * 2);\n\t            }\n\t        }\n\t        /*\\\n\t         * Element.setStops\n\t         [ method ]\n\t         **\n\t         * Only for gradients!\n\t         * Updates stops of the gradient based on passed gradient descriptor. See @Ppaer.gradient\n\t         - str (string) gradient descriptor part after `()`.\n\t         = (object) gradient element\n\t         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n\t         | g.setStops(\"#fff-#000-#f00-#fc0\");\n\t        \\*/\n\t        function GsetStops(str) {\n\t            var grad = str,\n\t                stops = this.stops();\n\t            if (typeof str == \"string\") {\n\t                grad = eve(\"snap.util.grad.parse\", null, \"l(0,0,0,1)\" + str).firstDefined().stops;\n\t            }\n\t            if (!Snap.is(grad, \"array\")) {\n\t                return;\n\t            }\n\t            for (var i = 0; i < stops.length; i++) {\n\t                if (grad[i]) {\n\t                    var color = Snap.color(grad[i].color),\n\t                        attr = {\"offset\": grad[i].offset + \"%\"};\n\t                    attr[\"stop-color\"] = color.hex;\n\t                    if (color.opacity < 1) {\n\t                        attr[\"stop-opacity\"] = color.opacity;\n\t                    }\n\t                    stops[i].attr(attr);\n\t                } else {\n\t                    stops[i].remove();\n\t                }\n\t            }\n\t            for (i = stops.length; i < grad.length; i++) {\n\t                this.addStop(grad[i].color, grad[i].offset);\n\t            }\n\t            return this;\n\t        }\n\t        function gradient(defs, str) {\n\t            var grad = eve(\"snap.util.grad.parse\", null, str).firstDefined(),\n\t                el;\n\t            if (!grad) {\n\t                return null;\n\t            }\n\t            grad.params.unshift(defs);\n\t            if (grad.type.toLowerCase() == \"l\") {\n\t                el = gradientLinear.apply(0, grad.params);\n\t            } else {\n\t                el = gradientRadial.apply(0, grad.params);\n\t            }\n\t            if (grad.type != grad.type.toLowerCase()) {\n\t                $(el.node, {\n\t                    gradientUnits: \"userSpaceOnUse\"\n\t                });\n\t            }\n\t            var stops = grad.stops,\n\t                len = stops.length;\n\t            for (var i = 0; i < len; i++) {\n\t                var stop = stops[i];\n\t                el.addStop(stop.color, stop.offset);\n\t            }\n\t            return el;\n\t        }\n\t        function gradientLinear(defs, x1, y1, x2, y2) {\n\t            var el = Snap._.make(\"linearGradient\", defs);\n\t            el.stops = Gstops;\n\t            el.addStop = GaddStop;\n\t            el.getBBox = GgetBBox;\n\t            el.setStops = GsetStops;\n\t            if (x1 != null) {\n\t                $(el.node, {\n\t                    x1: x1,\n\t                    y1: y1,\n\t                    x2: x2,\n\t                    y2: y2\n\t                });\n\t            }\n\t            return el;\n\t        }\n\t        function gradientRadial(defs, cx, cy, r, fx, fy) {\n\t            var el = Snap._.make(\"radialGradient\", defs);\n\t            el.stops = Gstops;\n\t            el.addStop = GaddStop;\n\t            el.getBBox = GgetBBox;\n\t            if (cx != null) {\n\t                $(el.node, {\n\t                    cx: cx,\n\t                    cy: cy,\n\t                    r: r\n\t                });\n\t            }\n\t            if (fx != null && fy != null) {\n\t                $(el.node, {\n\t                    fx: fx,\n\t                    fy: fy\n\t                });\n\t            }\n\t            return el;\n\t        }\n\t        /*\\\n\t         * Paper.gradient\n\t         [ method ]\n\t         **\n\t         * Creates a gradient element\n\t         **\n\t         - gradient (string) gradient descriptor\n\t         > Gradient Descriptor\n\t         * The gradient descriptor is an expression formatted as\n\t         * follows: `<type>(<coords>)<colors>`.  The `<type>` can be\n\t         * either linear or radial.  The uppercase `L` or `R` letters\n\t         * indicate absolute coordinates offset from the SVG surface.\n\t         * Lowercase `l` or `r` letters indicate coordinates\n\t         * calculated relative to the element to which the gradient is\n\t         * applied.  Coordinates specify a linear gradient vector as\n\t         * `x1`, `y1`, `x2`, `y2`, or a radial gradient as `cx`, `cy`,\n\t         * `r` and optional `fx`, `fy` specifying a focal point away\n\t         * from the center of the circle. Specify `<colors>` as a list\n\t         * of dash-separated CSS color values.  Each color may be\n\t         * followed by a custom offset value, separated with a colon\n\t         * character.\n\t         > Examples\n\t         * Linear gradient, relative from top-left corner to bottom-right\n\t         * corner, from black through red to white:\n\t         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n\t         * Linear gradient, absolute from (0, 0) to (100, 100), from black\n\t         * through red at 25% to white:\n\t         | var g = paper.gradient(\"L(0, 0, 100, 100)#000-#f00:25-#fff\");\n\t         * Radial gradient, relative from the center of the element with radius\n\t         * half the width, from black to white:\n\t         | var g = paper.gradient(\"r(0.5, 0.5, 0.5)#000-#fff\");\n\t         * To apply the gradient:\n\t         | paper.circle(50, 50, 40).attr({\n\t         |     fill: g\n\t         | });\n\t         = (object) the `gradient` element\n\t        \\*/\n\t        proto.gradient = function (str) {\n\t            return gradient(this.defs, str);\n\t        };\n\t        proto.gradientLinear = function (x1, y1, x2, y2) {\n\t            return gradientLinear(this.defs, x1, y1, x2, y2);\n\t        };\n\t        proto.gradientRadial = function (cx, cy, r, fx, fy) {\n\t            return gradientRadial(this.defs, cx, cy, r, fx, fy);\n\t        };\n\t        /*\\\n\t         * Paper.toString\n\t         [ method ]\n\t         **\n\t         * Returns SVG code for the @Paper\n\t         = (string) SVG code for the @Paper\n\t        \\*/\n\t        proto.toString = function () {\n\t            var doc = this.node.ownerDocument,\n\t                f = doc.createDocumentFragment(),\n\t                d = doc.createElement(\"div\"),\n\t                svg = this.node.cloneNode(true),\n\t                res;\n\t            f.appendChild(d);\n\t            d.appendChild(svg);\n\t            Snap._.$(svg, {xmlns: \"http://www.w3.org/2000/svg\"});\n\t            res = d.innerHTML;\n\t            f.removeChild(f.firstChild);\n\t            return res;\n\t        };\n\t        /*\\\n\t         * Paper.toDataURL\n\t         [ method ]\n\t         **\n\t         * Returns SVG code for the @Paper as Data URI string.\n\t         = (string) Data URI string\n\t        \\*/\n\t        proto.toDataURL = function () {\n\t            if (window && window.btoa) {\n\t                return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(this)));\n\t            }\n\t        };\n\t        /*\\\n\t         * Paper.clear\n\t         [ method ]\n\t         **\n\t         * Removes all child nodes of the paper, except <defs>.\n\t        \\*/\n\t        proto.clear = function () {\n\t            var node = this.node.firstChild,\n\t                next;\n\t            while (node) {\n\t                next = node.nextSibling;\n\t                if (node.tagName != \"defs\") {\n\t                    node.parentNode.removeChild(node);\n\t                } else {\n\t                    proto.clear.call({node: node});\n\t                }\n\t                node = next;\n\t            }\n\t        };\n\t    }());\n\t});\n\t\n\t// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n\t//\n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t//\n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t//\n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\tSnap.plugin(function (Snap, Element, Paper, glob) {\n\t    var elproto = Element.prototype,\n\t        is = Snap.is,\n\t        clone = Snap._.clone,\n\t        has = \"hasOwnProperty\",\n\t        p2s = /,?([a-z]),?/gi,\n\t        toFloat = parseFloat,\n\t        math = Math,\n\t        PI = math.PI,\n\t        mmin = math.min,\n\t        mmax = math.max,\n\t        pow = math.pow,\n\t        abs = math.abs;\n\t    function paths(ps) {\n\t        var p = paths.ps = paths.ps || {};\n\t        if (p[ps]) {\n\t            p[ps].sleep = 100;\n\t        } else {\n\t            p[ps] = {\n\t                sleep: 100\n\t            };\n\t        }\n\t        setTimeout(function () {\n\t            for (var key in p) if (p[has](key) && key != ps) {\n\t                p[key].sleep--;\n\t                !p[key].sleep && delete p[key];\n\t            }\n\t        });\n\t        return p[ps];\n\t    }\n\t    function box(x, y, width, height) {\n\t        if (x == null) {\n\t            x = y = width = height = 0;\n\t        }\n\t        if (y == null) {\n\t            y = x.y;\n\t            width = x.width;\n\t            height = x.height;\n\t            x = x.x;\n\t        }\n\t        return {\n\t            x: x,\n\t            y: y,\n\t            width: width,\n\t            w: width,\n\t            height: height,\n\t            h: height,\n\t            x2: x + width,\n\t            y2: y + height,\n\t            cx: x + width / 2,\n\t            cy: y + height / 2,\n\t            r1: math.min(width, height) / 2,\n\t            r2: math.max(width, height) / 2,\n\t            r0: math.sqrt(width * width + height * height) / 2,\n\t            path: rectPath(x, y, width, height),\n\t            vb: [x, y, width, height].join(\" \")\n\t        };\n\t    }\n\t    function toString() {\n\t        return this.join(\",\").replace(p2s, \"$1\");\n\t    }\n\t    function pathClone(pathArray) {\n\t        var res = clone(pathArray);\n\t        res.toString = toString;\n\t        return res;\n\t    }\n\t    function getPointAtSegmentLength(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {\n\t        if (length == null) {\n\t            return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);\n\t        } else {\n\t            return findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y,\n\t                getTotLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));\n\t        }\n\t    }\n\t    function getLengthFactory(istotal, subpath) {\n\t        function O(val) {\n\t            return +(+val).toFixed(3);\n\t        }\n\t        return Snap._.cacher(function (path, length, onlystart) {\n\t            if (path instanceof Element) {\n\t                path = path.attr(\"d\");\n\t            }\n\t            path = path2curve(path);\n\t            var x, y, p, l, sp = \"\", subpaths = {}, point,\n\t                len = 0;\n\t            for (var i = 0, ii = path.length; i < ii; i++) {\n\t                p = path[i];\n\t                if (p[0] == \"M\") {\n\t                    x = +p[1];\n\t                    y = +p[2];\n\t                } else {\n\t                    l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n\t                    if (len + l > length) {\n\t                        if (subpath && !subpaths.start) {\n\t                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n\t                            sp += [\n\t                                \"C\" + O(point.start.x),\n\t                                O(point.start.y),\n\t                                O(point.m.x),\n\t                                O(point.m.y),\n\t                                O(point.x),\n\t                                O(point.y)\n\t                            ];\n\t                            if (onlystart) {return sp;}\n\t                            subpaths.start = sp;\n\t                            sp = [\n\t                                \"M\" + O(point.x),\n\t                                O(point.y) + \"C\" + O(point.n.x),\n\t                                O(point.n.y),\n\t                                O(point.end.x),\n\t                                O(point.end.y),\n\t                                O(p[5]),\n\t                                O(p[6])\n\t                            ].join();\n\t                            len += l;\n\t                            x = +p[5];\n\t                            y = +p[6];\n\t                            continue;\n\t                        }\n\t                        if (!istotal && !subpath) {\n\t                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n\t                            return point;\n\t                        }\n\t                    }\n\t                    len += l;\n\t                    x = +p[5];\n\t                    y = +p[6];\n\t                }\n\t                sp += p.shift() + p;\n\t            }\n\t            subpaths.end = sp;\n\t            point = istotal ? len : subpath ? subpaths : findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\n\t            return point;\n\t        }, null, Snap._.clone);\n\t    }\n\t    var getTotalLength = getLengthFactory(1),\n\t        getPointAtLength = getLengthFactory(),\n\t        getSubpathsAtLength = getLengthFactory(0, 1);\n\t    function findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n\t        var t1 = 1 - t,\n\t            t13 = pow(t1, 3),\n\t            t12 = pow(t1, 2),\n\t            t2 = t * t,\n\t            t3 = t2 * t,\n\t            x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\n\t            y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\n\t            mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\n\t            my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\n\t            nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\n\t            ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\n\t            ax = t1 * p1x + t * c1x,\n\t            ay = t1 * p1y + t * c1y,\n\t            cx = t1 * c2x + t * p2x,\n\t            cy = t1 * c2y + t * p2y,\n\t            alpha = 90 - math.atan2(mx - nx, my - ny) * 180 / PI;\n\t        // (mx > nx || my < ny) && (alpha += 180);\n\t        return {\n\t            x: x,\n\t            y: y,\n\t            m: {x: mx, y: my},\n\t            n: {x: nx, y: ny},\n\t            start: {x: ax, y: ay},\n\t            end: {x: cx, y: cy},\n\t            alpha: alpha\n\t        };\n\t    }\n\t    function bezierBBox(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n\t        if (!Snap.is(p1x, \"array\")) {\n\t            p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n\t        }\n\t        var bbox = curveDim.apply(null, p1x);\n\t        return box(\n\t            bbox.min.x,\n\t            bbox.min.y,\n\t            bbox.max.x - bbox.min.x,\n\t            bbox.max.y - bbox.min.y\n\t        );\n\t    }\n\t    function isPointInsideBBox(bbox, x, y) {\n\t        return  x >= bbox.x &&\n\t                x <= bbox.x + bbox.width &&\n\t                y >= bbox.y &&\n\t                y <= bbox.y + bbox.height;\n\t    }\n\t    function isBBoxIntersect(bbox1, bbox2) {\n\t        bbox1 = box(bbox1);\n\t        bbox2 = box(bbox2);\n\t        return isPointInsideBBox(bbox2, bbox1.x, bbox1.y)\n\t            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y)\n\t            || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2)\n\t            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2)\n\t            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y)\n\t            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y)\n\t            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2)\n\t            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2)\n\t            || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x\n\t                || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)\n\t            && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y\n\t                || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n\t    }\n\t    function base3(t, p1, p2, p3, p4) {\n\t        var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n\t            t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n\t        return t * t2 - 3 * p1 + 3 * p2;\n\t    }\n\t    function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n\t        if (z == null) {\n\t            z = 1;\n\t        }\n\t        z = z > 1 ? 1 : z < 0 ? 0 : z;\n\t        var z2 = z / 2,\n\t            n = 12,\n\t            Tvalues = [-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],\n\t            Cvalues = [0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],\n\t            sum = 0;\n\t        for (var i = 0; i < n; i++) {\n\t            var ct = z2 * Tvalues[i] + z2,\n\t                xbase = base3(ct, x1, x2, x3, x4),\n\t                ybase = base3(ct, y1, y2, y3, y4),\n\t                comb = xbase * xbase + ybase * ybase;\n\t            sum += Cvalues[i] * math.sqrt(comb);\n\t        }\n\t        return z2 * sum;\n\t    }\n\t    function getTotLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\n\t        if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\n\t            return;\n\t        }\n\t        var t = 1,\n\t            step = t / 2,\n\t            t2 = t - step,\n\t            l,\n\t            e = .01;\n\t        l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n\t        while (abs(l - ll) > e) {\n\t            step /= 2;\n\t            t2 += (l < ll ? 1 : -1) * step;\n\t            l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n\t        }\n\t        return t2;\n\t    }\n\t    function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n\t        if (\n\t            mmax(x1, x2) < mmin(x3, x4) ||\n\t            mmin(x1, x2) > mmax(x3, x4) ||\n\t            mmax(y1, y2) < mmin(y3, y4) ||\n\t            mmin(y1, y2) > mmax(y3, y4)\n\t        ) {\n\t            return;\n\t        }\n\t        var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n\t            ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n\t            denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\t\n\t        if (!denominator) {\n\t            return;\n\t        }\n\t        var px = nx / denominator,\n\t            py = ny / denominator,\n\t            px2 = +px.toFixed(2),\n\t            py2 = +py.toFixed(2);\n\t        if (\n\t            px2 < +mmin(x1, x2).toFixed(2) ||\n\t            px2 > +mmax(x1, x2).toFixed(2) ||\n\t            px2 < +mmin(x3, x4).toFixed(2) ||\n\t            px2 > +mmax(x3, x4).toFixed(2) ||\n\t            py2 < +mmin(y1, y2).toFixed(2) ||\n\t            py2 > +mmax(y1, y2).toFixed(2) ||\n\t            py2 < +mmin(y3, y4).toFixed(2) ||\n\t            py2 > +mmax(y3, y4).toFixed(2)\n\t        ) {\n\t            return;\n\t        }\n\t        return {x: px, y: py};\n\t    }\n\t    function inter(bez1, bez2) {\n\t        return interHelper(bez1, bez2);\n\t    }\n\t    function interCount(bez1, bez2) {\n\t        return interHelper(bez1, bez2, 1);\n\t    }\n\t    function interHelper(bez1, bez2, justCount) {\n\t        var bbox1 = bezierBBox(bez1),\n\t            bbox2 = bezierBBox(bez2);\n\t        if (!isBBoxIntersect(bbox1, bbox2)) {\n\t            return justCount ? 0 : [];\n\t        }\n\t        var l1 = bezlen.apply(0, bez1),\n\t            l2 = bezlen.apply(0, bez2),\n\t            n1 = ~~(l1 / 8),\n\t            n2 = ~~(l2 / 8),\n\t            dots1 = [],\n\t            dots2 = [],\n\t            xy = {},\n\t            res = justCount ? 0 : [];\n\t        for (var i = 0; i < n1 + 1; i++) {\n\t            var p = findDotsAtSegment.apply(0, bez1.concat(i / n1));\n\t            dots1.push({x: p.x, y: p.y, t: i / n1});\n\t        }\n\t        for (i = 0; i < n2 + 1; i++) {\n\t            p = findDotsAtSegment.apply(0, bez2.concat(i / n2));\n\t            dots2.push({x: p.x, y: p.y, t: i / n2});\n\t        }\n\t        for (i = 0; i < n1; i++) {\n\t            for (var j = 0; j < n2; j++) {\n\t                var di = dots1[i],\n\t                    di1 = dots1[i + 1],\n\t                    dj = dots2[j],\n\t                    dj1 = dots2[j + 1],\n\t                    ci = abs(di1.x - di.x) < .001 ? \"y\" : \"x\",\n\t                    cj = abs(dj1.x - dj.x) < .001 ? \"y\" : \"x\",\n\t                    is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n\t                if (is) {\n\t                    if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\n\t                        continue;\n\t                    }\n\t                    xy[is.x.toFixed(4)] = is.y.toFixed(4);\n\t                    var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\n\t                        t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n\t                    if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n\t                        if (justCount) {\n\t                            res++;\n\t                        } else {\n\t                            res.push({\n\t                                x: is.x,\n\t                                y: is.y,\n\t                                t1: t1,\n\t                                t2: t2\n\t                            });\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return res;\n\t    }\n\t    function pathIntersection(path1, path2) {\n\t        return interPathHelper(path1, path2);\n\t    }\n\t    function pathIntersectionNumber(path1, path2) {\n\t        return interPathHelper(path1, path2, 1);\n\t    }\n\t    function interPathHelper(path1, path2, justCount) {\n\t        path1 = path2curve(path1);\n\t        path2 = path2curve(path2);\n\t        var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2,\n\t            res = justCount ? 0 : [];\n\t        for (var i = 0, ii = path1.length; i < ii; i++) {\n\t            var pi = path1[i];\n\t            if (pi[0] == \"M\") {\n\t                x1 = x1m = pi[1];\n\t                y1 = y1m = pi[2];\n\t            } else {\n\t                if (pi[0] == \"C\") {\n\t                    bez1 = [x1, y1].concat(pi.slice(1));\n\t                    x1 = bez1[6];\n\t                    y1 = bez1[7];\n\t                } else {\n\t                    bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n\t                    x1 = x1m;\n\t                    y1 = y1m;\n\t                }\n\t                for (var j = 0, jj = path2.length; j < jj; j++) {\n\t                    var pj = path2[j];\n\t                    if (pj[0] == \"M\") {\n\t                        x2 = x2m = pj[1];\n\t                        y2 = y2m = pj[2];\n\t                    } else {\n\t                        if (pj[0] == \"C\") {\n\t                            bez2 = [x2, y2].concat(pj.slice(1));\n\t                            x2 = bez2[6];\n\t                            y2 = bez2[7];\n\t                        } else {\n\t                            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n\t                            x2 = x2m;\n\t                            y2 = y2m;\n\t                        }\n\t                        var intr = interHelper(bez1, bez2, justCount);\n\t                        if (justCount) {\n\t                            res += intr;\n\t                        } else {\n\t                            for (var k = 0, kk = intr.length; k < kk; k++) {\n\t                                intr[k].segment1 = i;\n\t                                intr[k].segment2 = j;\n\t                                intr[k].bez1 = bez1;\n\t                                intr[k].bez2 = bez2;\n\t                            }\n\t                            res = res.concat(intr);\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return res;\n\t    }\n\t    function isPointInsidePath(path, x, y) {\n\t        var bbox = pathBBox(path);\n\t        return isPointInsideBBox(bbox, x, y) &&\n\t               interPathHelper(path, [[\"M\", x, y], [\"H\", bbox.x2 + 10]], 1) % 2 == 1;\n\t    }\n\t    function pathBBox(path) {\n\t        var pth = paths(path);\n\t        if (pth.bbox) {\n\t            return clone(pth.bbox);\n\t        }\n\t        if (!path) {\n\t            return box();\n\t        }\n\t        path = path2curve(path);\n\t        var x = 0,\n\t            y = 0,\n\t            X = [],\n\t            Y = [],\n\t            p;\n\t        for (var i = 0, ii = path.length; i < ii; i++) {\n\t            p = path[i];\n\t            if (p[0] == \"M\") {\n\t                x = p[1];\n\t                y = p[2];\n\t                X.push(x);\n\t                Y.push(y);\n\t            } else {\n\t                var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n\t                X = X.concat(dim.min.x, dim.max.x);\n\t                Y = Y.concat(dim.min.y, dim.max.y);\n\t                x = p[5];\n\t                y = p[6];\n\t            }\n\t        }\n\t        var xmin = mmin.apply(0, X),\n\t            ymin = mmin.apply(0, Y),\n\t            xmax = mmax.apply(0, X),\n\t            ymax = mmax.apply(0, Y),\n\t            bb = box(xmin, ymin, xmax - xmin, ymax - ymin);\n\t        pth.bbox = clone(bb);\n\t        return bb;\n\t    }\n\t    function rectPath(x, y, w, h, r) {\n\t        if (r) {\n\t            return [\n\t                [\"M\", +x + +r, y],\n\t                [\"l\", w - r * 2, 0],\n\t                [\"a\", r, r, 0, 0, 1, r, r],\n\t                [\"l\", 0, h - r * 2],\n\t                [\"a\", r, r, 0, 0, 1, -r, r],\n\t                [\"l\", r * 2 - w, 0],\n\t                [\"a\", r, r, 0, 0, 1, -r, -r],\n\t                [\"l\", 0, r * 2 - h],\n\t                [\"a\", r, r, 0, 0, 1, r, -r],\n\t                [\"z\"]\n\t            ];\n\t        }\n\t        var res = [[\"M\", x, y], [\"l\", w, 0], [\"l\", 0, h], [\"l\", -w, 0], [\"z\"]];\n\t        res.toString = toString;\n\t        return res;\n\t    }\n\t    function ellipsePath(x, y, rx, ry, a) {\n\t        if (a == null && ry == null) {\n\t            ry = rx;\n\t        }\n\t        x = +x;\n\t        y = +y;\n\t        rx = +rx;\n\t        ry = +ry;\n\t        if (a != null) {\n\t            var rad = Math.PI / 180,\n\t                x1 = x + rx * Math.cos(-ry * rad),\n\t                x2 = x + rx * Math.cos(-a * rad),\n\t                y1 = y + rx * Math.sin(-ry * rad),\n\t                y2 = y + rx * Math.sin(-a * rad),\n\t                res = [[\"M\", x1, y1], [\"A\", rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\n\t        } else {\n\t            res = [\n\t                [\"M\", x, y],\n\t                [\"m\", 0, -ry],\n\t                [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry],\n\t                [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry],\n\t                [\"z\"]\n\t            ];\n\t        }\n\t        res.toString = toString;\n\t        return res;\n\t    }\n\t    var unit2px = Snap._unit2px,\n\t        getPath = {\n\t        path: function (el) {\n\t            return el.attr(\"path\");\n\t        },\n\t        circle: function (el) {\n\t            var attr = unit2px(el);\n\t            return ellipsePath(attr.cx, attr.cy, attr.r);\n\t        },\n\t        ellipse: function (el) {\n\t            var attr = unit2px(el);\n\t            return ellipsePath(attr.cx || 0, attr.cy || 0, attr.rx, attr.ry);\n\t        },\n\t        rect: function (el) {\n\t            var attr = unit2px(el);\n\t            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height, attr.rx, attr.ry);\n\t        },\n\t        image: function (el) {\n\t            var attr = unit2px(el);\n\t            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height);\n\t        },\n\t        line: function (el) {\n\t            return \"M\" + [el.attr(\"x1\") || 0, el.attr(\"y1\") || 0, el.attr(\"x2\"), el.attr(\"y2\")];\n\t        },\n\t        polyline: function (el) {\n\t            return \"M\" + el.attr(\"points\");\n\t        },\n\t        polygon: function (el) {\n\t            return \"M\" + el.attr(\"points\") + \"z\";\n\t        },\n\t        deflt: function (el) {\n\t            var bbox = el.node.getBBox();\n\t            return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\n\t        }\n\t    };\n\t    function pathToRelative(pathArray) {\n\t        var pth = paths(pathArray),\n\t            lowerCase = String.prototype.toLowerCase;\n\t        if (pth.rel) {\n\t            return pathClone(pth.rel);\n\t        }\n\t        if (!Snap.is(pathArray, \"array\") || !Snap.is(pathArray && pathArray[0], \"array\")) {\n\t            pathArray = Snap.parsePathString(pathArray);\n\t        }\n\t        var res = [],\n\t            x = 0,\n\t            y = 0,\n\t            mx = 0,\n\t            my = 0,\n\t            start = 0;\n\t        if (pathArray[0][0] == \"M\") {\n\t            x = pathArray[0][1];\n\t            y = pathArray[0][2];\n\t            mx = x;\n\t            my = y;\n\t            start++;\n\t            res.push([\"M\", x, y]);\n\t        }\n\t        for (var i = start, ii = pathArray.length; i < ii; i++) {\n\t            var r = res[i] = [],\n\t                pa = pathArray[i];\n\t            if (pa[0] != lowerCase.call(pa[0])) {\n\t                r[0] = lowerCase.call(pa[0]);\n\t                switch (r[0]) {\n\t                    case \"a\":\n\t                        r[1] = pa[1];\n\t                        r[2] = pa[2];\n\t                        r[3] = pa[3];\n\t                        r[4] = pa[4];\n\t                        r[5] = pa[5];\n\t                        r[6] = +(pa[6] - x).toFixed(3);\n\t                        r[7] = +(pa[7] - y).toFixed(3);\n\t                        break;\n\t                    case \"v\":\n\t                        r[1] = +(pa[1] - y).toFixed(3);\n\t                        break;\n\t                    case \"m\":\n\t                        mx = pa[1];\n\t                        my = pa[2];\n\t                    default:\n\t                        for (var j = 1, jj = pa.length; j < jj; j++) {\n\t                            r[j] = +(pa[j] - (j % 2 ? x : y)).toFixed(3);\n\t                        }\n\t                }\n\t            } else {\n\t                r = res[i] = [];\n\t                if (pa[0] == \"m\") {\n\t                    mx = pa[1] + x;\n\t                    my = pa[2] + y;\n\t                }\n\t                for (var k = 0, kk = pa.length; k < kk; k++) {\n\t                    res[i][k] = pa[k];\n\t                }\n\t            }\n\t            var len = res[i].length;\n\t            switch (res[i][0]) {\n\t                case \"z\":\n\t                    x = mx;\n\t                    y = my;\n\t                    break;\n\t                case \"h\":\n\t                    x += +res[i][len - 1];\n\t                    break;\n\t                case \"v\":\n\t                    y += +res[i][len - 1];\n\t                    break;\n\t                default:\n\t                    x += +res[i][len - 2];\n\t                    y += +res[i][len - 1];\n\t            }\n\t        }\n\t        res.toString = toString;\n\t        pth.rel = pathClone(res);\n\t        return res;\n\t    }\n\t    function pathToAbsolute(pathArray) {\n\t        var pth = paths(pathArray);\n\t        if (pth.abs) {\n\t            return pathClone(pth.abs);\n\t        }\n\t        if (!is(pathArray, \"array\") || !is(pathArray && pathArray[0], \"array\")) { // rough assumption\n\t            pathArray = Snap.parsePathString(pathArray);\n\t        }\n\t        if (!pathArray || !pathArray.length) {\n\t            return [[\"M\", 0, 0]];\n\t        }\n\t        var res = [],\n\t            x = 0,\n\t            y = 0,\n\t            mx = 0,\n\t            my = 0,\n\t            start = 0,\n\t            pa0;\n\t        if (pathArray[0][0] == \"M\") {\n\t            x = +pathArray[0][1];\n\t            y = +pathArray[0][2];\n\t            mx = x;\n\t            my = y;\n\t            start++;\n\t            res[0] = [\"M\", x, y];\n\t        }\n\t        var crz = pathArray.length == 3 &&\n\t            pathArray[0][0] == \"M\" &&\n\t            pathArray[1][0].toUpperCase() == \"R\" &&\n\t            pathArray[2][0].toUpperCase() == \"Z\";\n\t        for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n\t            res.push(r = []);\n\t            pa = pathArray[i];\n\t            pa0 = pa[0];\n\t            if (pa0 != pa0.toUpperCase()) {\n\t                r[0] = pa0.toUpperCase();\n\t                switch (r[0]) {\n\t                    case \"A\":\n\t                        r[1] = pa[1];\n\t                        r[2] = pa[2];\n\t                        r[3] = pa[3];\n\t                        r[4] = pa[4];\n\t                        r[5] = pa[5];\n\t                        r[6] = +pa[6] + x;\n\t                        r[7] = +pa[7] + y;\n\t                        break;\n\t                    case \"V\":\n\t                        r[1] = +pa[1] + y;\n\t                        break;\n\t                    case \"H\":\n\t                        r[1] = +pa[1] + x;\n\t                        break;\n\t                    case \"R\":\n\t                        var dots = [x, y].concat(pa.slice(1));\n\t                        for (var j = 2, jj = dots.length; j < jj; j++) {\n\t                            dots[j] = +dots[j] + x;\n\t                            dots[++j] = +dots[j] + y;\n\t                        }\n\t                        res.pop();\n\t                        res = res.concat(catmullRom2bezier(dots, crz));\n\t                        break;\n\t                    case \"O\":\n\t                        res.pop();\n\t                        dots = ellipsePath(x, y, pa[1], pa[2]);\n\t                        dots.push(dots[0]);\n\t                        res = res.concat(dots);\n\t                        break;\n\t                    case \"U\":\n\t                        res.pop();\n\t                        res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n\t                        r = [\"U\"].concat(res[res.length - 1].slice(-2));\n\t                        break;\n\t                    case \"M\":\n\t                        mx = +pa[1] + x;\n\t                        my = +pa[2] + y;\n\t                    default:\n\t                        for (j = 1, jj = pa.length; j < jj; j++) {\n\t                            r[j] = +pa[j] + (j % 2 ? x : y);\n\t                        }\n\t                }\n\t            } else if (pa0 == \"R\") {\n\t                dots = [x, y].concat(pa.slice(1));\n\t                res.pop();\n\t                res = res.concat(catmullRom2bezier(dots, crz));\n\t                r = [\"R\"].concat(pa.slice(-2));\n\t            } else if (pa0 == \"O\") {\n\t                res.pop();\n\t                dots = ellipsePath(x, y, pa[1], pa[2]);\n\t                dots.push(dots[0]);\n\t                res = res.concat(dots);\n\t            } else if (pa0 == \"U\") {\n\t                res.pop();\n\t                res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n\t                r = [\"U\"].concat(res[res.length - 1].slice(-2));\n\t            } else {\n\t                for (var k = 0, kk = pa.length; k < kk; k++) {\n\t                    r[k] = pa[k];\n\t                }\n\t            }\n\t            pa0 = pa0.toUpperCase();\n\t            if (pa0 != \"O\") {\n\t                switch (r[0]) {\n\t                    case \"Z\":\n\t                        x = +mx;\n\t                        y = +my;\n\t                        break;\n\t                    case \"H\":\n\t                        x = r[1];\n\t                        break;\n\t                    case \"V\":\n\t                        y = r[1];\n\t                        break;\n\t                    case \"M\":\n\t                        mx = r[r.length - 2];\n\t                        my = r[r.length - 1];\n\t                    default:\n\t                        x = r[r.length - 2];\n\t                        y = r[r.length - 1];\n\t                }\n\t            }\n\t        }\n\t        res.toString = toString;\n\t        pth.abs = pathClone(res);\n\t        return res;\n\t    }\n\t    function l2c(x1, y1, x2, y2) {\n\t        return [x1, y1, x2, y2, x2, y2];\n\t    }\n\t    function q2c(x1, y1, ax, ay, x2, y2) {\n\t        var _13 = 1 / 3,\n\t            _23 = 2 / 3;\n\t        return [\n\t                _13 * x1 + _23 * ax,\n\t                _13 * y1 + _23 * ay,\n\t                _13 * x2 + _23 * ax,\n\t                _13 * y2 + _23 * ay,\n\t                x2,\n\t                y2\n\t            ];\n\t    }\n\t    function a2c(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n\t        // for more information of where this math came from visit:\n\t        // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n\t        var _120 = PI * 120 / 180,\n\t            rad = PI / 180 * (+angle || 0),\n\t            res = [],\n\t            xy,\n\t            rotate = Snap._.cacher(function (x, y, rad) {\n\t                var X = x * math.cos(rad) - y * math.sin(rad),\n\t                    Y = x * math.sin(rad) + y * math.cos(rad);\n\t                return {x: X, y: Y};\n\t            });\n\t        if (!rx || !ry) {\n\t            return [x1, y1, x2, y2, x2, y2];\n\t        }\n\t        if (!recursive) {\n\t            xy = rotate(x1, y1, -rad);\n\t            x1 = xy.x;\n\t            y1 = xy.y;\n\t            xy = rotate(x2, y2, -rad);\n\t            x2 = xy.x;\n\t            y2 = xy.y;\n\t            var cos = math.cos(PI / 180 * angle),\n\t                sin = math.sin(PI / 180 * angle),\n\t                x = (x1 - x2) / 2,\n\t                y = (y1 - y2) / 2;\n\t            var h = x * x / (rx * rx) + y * y / (ry * ry);\n\t            if (h > 1) {\n\t                h = math.sqrt(h);\n\t                rx = h * rx;\n\t                ry = h * ry;\n\t            }\n\t            var rx2 = rx * rx,\n\t                ry2 = ry * ry,\n\t                k = (large_arc_flag == sweep_flag ? -1 : 1) *\n\t                    math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n\t                cx = k * rx * y / ry + (x1 + x2) / 2,\n\t                cy = k * -ry * x / rx + (y1 + y2) / 2,\n\t                f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\n\t                f2 = math.asin(((y2 - cy) / ry).toFixed(9));\n\t\n\t            f1 = x1 < cx ? PI - f1 : f1;\n\t            f2 = x2 < cx ? PI - f2 : f2;\n\t            f1 < 0 && (f1 = PI * 2 + f1);\n\t            f2 < 0 && (f2 = PI * 2 + f2);\n\t            if (sweep_flag && f1 > f2) {\n\t                f1 = f1 - PI * 2;\n\t            }\n\t            if (!sweep_flag && f2 > f1) {\n\t                f2 = f2 - PI * 2;\n\t            }\n\t        } else {\n\t            f1 = recursive[0];\n\t            f2 = recursive[1];\n\t            cx = recursive[2];\n\t            cy = recursive[3];\n\t        }\n\t        var df = f2 - f1;\n\t        if (abs(df) > _120) {\n\t            var f2old = f2,\n\t                x2old = x2,\n\t                y2old = y2;\n\t            f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n\t            x2 = cx + rx * math.cos(f2);\n\t            y2 = cy + ry * math.sin(f2);\n\t            res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n\t        }\n\t        df = f2 - f1;\n\t        var c1 = math.cos(f1),\n\t            s1 = math.sin(f1),\n\t            c2 = math.cos(f2),\n\t            s2 = math.sin(f2),\n\t            t = math.tan(df / 4),\n\t            hx = 4 / 3 * rx * t,\n\t            hy = 4 / 3 * ry * t,\n\t            m1 = [x1, y1],\n\t            m2 = [x1 + hx * s1, y1 - hy * c1],\n\t            m3 = [x2 + hx * s2, y2 - hy * c2],\n\t            m4 = [x2, y2];\n\t        m2[0] = 2 * m1[0] - m2[0];\n\t        m2[1] = 2 * m1[1] - m2[1];\n\t        if (recursive) {\n\t            return [m2, m3, m4].concat(res);\n\t        } else {\n\t            res = [m2, m3, m4].concat(res).join().split(\",\");\n\t            var newres = [];\n\t            for (var i = 0, ii = res.length; i < ii; i++) {\n\t                newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n\t            }\n\t            return newres;\n\t        }\n\t    }\n\t    function findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n\t        var t1 = 1 - t;\n\t        return {\n\t            x: pow(t1, 3) * p1x + pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + pow(t, 3) * p2x,\n\t            y: pow(t1, 3) * p1y + pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + pow(t, 3) * p2y\n\t        };\n\t    }\n\t\n\t    // Returns bounding box of cubic bezier curve.\n\t    // Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n\t    // Original version: NISHIO Hirokazu\n\t    // Modifications: https://github.com/timo22345\n\t    function curveDim(x0, y0, x1, y1, x2, y2, x3, y3) {\n\t        var tvalues = [],\n\t            bounds = [[], []],\n\t            a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n\t        for (var i = 0; i < 2; ++i) {\n\t            if (i == 0) {\n\t                b = 6 * x0 - 12 * x1 + 6 * x2;\n\t                a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n\t                c = 3 * x1 - 3 * x0;\n\t            } else {\n\t                b = 6 * y0 - 12 * y1 + 6 * y2;\n\t                a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n\t                c = 3 * y1 - 3 * y0;\n\t            }\n\t            if (abs(a) < 1e-12) {\n\t                if (abs(b) < 1e-12) {\n\t                    continue;\n\t                }\n\t                t = -c / b;\n\t                if (0 < t && t < 1) {\n\t                    tvalues.push(t);\n\t                }\n\t                continue;\n\t            }\n\t            b2ac = b * b - 4 * c * a;\n\t            sqrtb2ac = math.sqrt(b2ac);\n\t            if (b2ac < 0) {\n\t                continue;\n\t            }\n\t            t1 = (-b + sqrtb2ac) / (2 * a);\n\t            if (0 < t1 && t1 < 1) {\n\t                tvalues.push(t1);\n\t            }\n\t            t2 = (-b - sqrtb2ac) / (2 * a);\n\t            if (0 < t2 && t2 < 1) {\n\t                tvalues.push(t2);\n\t            }\n\t        }\n\t\n\t        var x, y, j = tvalues.length,\n\t            jlen = j,\n\t            mt;\n\t        while (j--) {\n\t            t = tvalues[j];\n\t            mt = 1 - t;\n\t            bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n\t            bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n\t        }\n\t\n\t        bounds[0][jlen] = x0;\n\t        bounds[1][jlen] = y0;\n\t        bounds[0][jlen + 1] = x3;\n\t        bounds[1][jlen + 1] = y3;\n\t        bounds[0].length = bounds[1].length = jlen + 2;\n\t\n\t\n\t        return {\n\t          min: {x: mmin.apply(0, bounds[0]), y: mmin.apply(0, bounds[1])},\n\t          max: {x: mmax.apply(0, bounds[0]), y: mmax.apply(0, bounds[1])}\n\t        };\n\t    }\n\t\n\t    function path2curve(path, path2) {\n\t        var pth = !path2 && paths(path);\n\t        if (!path2 && pth.curve) {\n\t            return pathClone(pth.curve);\n\t        }\n\t        var p = pathToAbsolute(path),\n\t            p2 = path2 && pathToAbsolute(path2),\n\t            attrs = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n\t            attrs2 = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n\t            processPath = function (path, d, pcom) {\n\t                var nx, ny;\n\t                if (!path) {\n\t                    return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\n\t                }\n\t                !(path[0] in {T: 1, Q: 1}) && (d.qx = d.qy = null);\n\t                switch (path[0]) {\n\t                    case \"M\":\n\t                        d.X = path[1];\n\t                        d.Y = path[2];\n\t                        break;\n\t                    case \"A\":\n\t                        path = [\"C\"].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n\t                        break;\n\t                    case \"S\":\n\t                        if (pcom == \"C\" || pcom == \"S\") { // In \"S\" case we have to take into account, if the previous command is C/S.\n\t                            nx = d.x * 2 - d.bx;          // And reflect the previous\n\t                            ny = d.y * 2 - d.by;          // command's control point relative to the current point.\n\t                        }\n\t                        else {                            // or some else or nothing\n\t                            nx = d.x;\n\t                            ny = d.y;\n\t                        }\n\t                        path = [\"C\", nx, ny].concat(path.slice(1));\n\t                        break;\n\t                    case \"T\":\n\t                        if (pcom == \"Q\" || pcom == \"T\") { // In \"T\" case we have to take into account, if the previous command is Q/T.\n\t                            d.qx = d.x * 2 - d.qx;        // And make a reflection similar\n\t                            d.qy = d.y * 2 - d.qy;        // to case \"S\".\n\t                        }\n\t                        else {                            // or something else or nothing\n\t                            d.qx = d.x;\n\t                            d.qy = d.y;\n\t                        }\n\t                        path = [\"C\"].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n\t                        break;\n\t                    case \"Q\":\n\t                        d.qx = path[1];\n\t                        d.qy = path[2];\n\t                        path = [\"C\"].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n\t                        break;\n\t                    case \"L\":\n\t                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], path[2]));\n\t                        break;\n\t                    case \"H\":\n\t                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], d.y));\n\t                        break;\n\t                    case \"V\":\n\t                        path = [\"C\"].concat(l2c(d.x, d.y, d.x, path[1]));\n\t                        break;\n\t                    case \"Z\":\n\t                        path = [\"C\"].concat(l2c(d.x, d.y, d.X, d.Y));\n\t                        break;\n\t                }\n\t                return path;\n\t            },\n\t            fixArc = function (pp, i) {\n\t                if (pp[i].length > 7) {\n\t                    pp[i].shift();\n\t                    var pi = pp[i];\n\t                    while (pi.length) {\n\t                        pcoms1[i] = \"A\"; // if created multiple C:s, their original seg is saved\n\t                        p2 && (pcoms2[i] = \"A\"); // the same as above\n\t                        pp.splice(i++, 0, [\"C\"].concat(pi.splice(0, 6)));\n\t                    }\n\t                    pp.splice(i, 1);\n\t                    ii = mmax(p.length, p2 && p2.length || 0);\n\t                }\n\t            },\n\t            fixM = function (path1, path2, a1, a2, i) {\n\t                if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\n\t                    path2.splice(i, 0, [\"M\", a2.x, a2.y]);\n\t                    a1.bx = 0;\n\t                    a1.by = 0;\n\t                    a1.x = path1[i][1];\n\t                    a1.y = path1[i][2];\n\t                    ii = mmax(p.length, p2 && p2.length || 0);\n\t                }\n\t            },\n\t            pcoms1 = [], // path commands of original path p\n\t            pcoms2 = [], // path commands of original path p2\n\t            pfirst = \"\", // temporary holder for original path command\n\t            pcom = \"\"; // holder for previous path command of original path\n\t        for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\n\t            p[i] && (pfirst = p[i][0]); // save current path command\n\t\n\t            if (pfirst != \"C\") // C is not saved yet, because it may be result of conversion\n\t            {\n\t                pcoms1[i] = pfirst; // Save current path command\n\t                i && ( pcom = pcoms1[i - 1]); // Get previous path command pcom\n\t            }\n\t            p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\t\n\t            if (pcoms1[i] != \"A\" && pfirst == \"C\") pcoms1[i] = \"C\"; // A is the only command\n\t            // which may produce multiple C:s\n\t            // so we have to make sure that C is also C in original path\n\t\n\t            fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\t\n\t            if (p2) { // the same procedures is done to p2\n\t                p2[i] && (pfirst = p2[i][0]);\n\t                if (pfirst != \"C\") {\n\t                    pcoms2[i] = pfirst;\n\t                    i && (pcom = pcoms2[i - 1]);\n\t                }\n\t                p2[i] = processPath(p2[i], attrs2, pcom);\n\t\n\t                if (pcoms2[i] != \"A\" && pfirst == \"C\") {\n\t                    pcoms2[i] = \"C\";\n\t                }\n\t\n\t                fixArc(p2, i);\n\t            }\n\t            fixM(p, p2, attrs, attrs2, i);\n\t            fixM(p2, p, attrs2, attrs, i);\n\t            var seg = p[i],\n\t                seg2 = p2 && p2[i],\n\t                seglen = seg.length,\n\t                seg2len = p2 && seg2.length;\n\t            attrs.x = seg[seglen - 2];\n\t            attrs.y = seg[seglen - 1];\n\t            attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n\t            attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n\t            attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\n\t            attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\n\t            attrs2.x = p2 && seg2[seg2len - 2];\n\t            attrs2.y = p2 && seg2[seg2len - 1];\n\t        }\n\t        if (!p2) {\n\t            pth.curve = pathClone(p);\n\t        }\n\t        return p2 ? [p, p2] : p;\n\t    }\n\t    function mapPath(path, matrix) {\n\t        if (!matrix) {\n\t            return path;\n\t        }\n\t        var x, y, i, j, ii, jj, pathi;\n\t        path = path2curve(path);\n\t        for (i = 0, ii = path.length; i < ii; i++) {\n\t            pathi = path[i];\n\t            for (j = 1, jj = pathi.length; j < jj; j += 2) {\n\t                x = matrix.x(pathi[j], pathi[j + 1]);\n\t                y = matrix.y(pathi[j], pathi[j + 1]);\n\t                pathi[j] = x;\n\t                pathi[j + 1] = y;\n\t            }\n\t        }\n\t        return path;\n\t    }\n\t\n\t    // http://schepers.cc/getting-to-the-point\n\t    function catmullRom2bezier(crp, z) {\n\t        var d = [];\n\t        for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n\t            var p = [\n\t                        {x: +crp[i - 2], y: +crp[i - 1]},\n\t                        {x: +crp[i],     y: +crp[i + 1]},\n\t                        {x: +crp[i + 2], y: +crp[i + 3]},\n\t                        {x: +crp[i + 4], y: +crp[i + 5]}\n\t                    ];\n\t            if (z) {\n\t                if (!i) {\n\t                    p[0] = {x: +crp[iLen - 2], y: +crp[iLen - 1]};\n\t                } else if (iLen - 4 == i) {\n\t                    p[3] = {x: +crp[0], y: +crp[1]};\n\t                } else if (iLen - 2 == i) {\n\t                    p[2] = {x: +crp[0], y: +crp[1]};\n\t                    p[3] = {x: +crp[2], y: +crp[3]};\n\t                }\n\t            } else {\n\t                if (iLen - 4 == i) {\n\t                    p[3] = p[2];\n\t                } else if (!i) {\n\t                    p[0] = {x: +crp[i], y: +crp[i + 1]};\n\t                }\n\t            }\n\t            d.push([\"C\",\n\t                  (-p[0].x + 6 * p[1].x + p[2].x) / 6,\n\t                  (-p[0].y + 6 * p[1].y + p[2].y) / 6,\n\t                  (p[1].x + 6 * p[2].x - p[3].x) / 6,\n\t                  (p[1].y + 6*p[2].y - p[3].y) / 6,\n\t                  p[2].x,\n\t                  p[2].y\n\t            ]);\n\t        }\n\t\n\t        return d;\n\t    }\n\t\n\t    // export\n\t    Snap.path = paths;\n\t\n\t    /*\\\n\t     * Snap.path.getTotalLength\n\t     [ method ]\n\t     **\n\t     * Returns the length of the given path in pixels\n\t     **\n\t     - path (string) SVG path string\n\t     **\n\t     = (number) length\n\t    \\*/\n\t    Snap.path.getTotalLength = getTotalLength;\n\t    /*\\\n\t     * Snap.path.getPointAtLength\n\t     [ method ]\n\t     **\n\t     * Returns the coordinates of the point located at the given length along the given path\n\t     **\n\t     - path (string) SVG path string\n\t     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n\t     **\n\t     = (object) representation of the point:\n\t     o {\n\t     o     x: (number) x coordinate,\n\t     o     y: (number) y coordinate,\n\t     o     alpha: (number) angle of derivative\n\t     o }\n\t    \\*/\n\t    Snap.path.getPointAtLength = getPointAtLength;\n\t    /*\\\n\t     * Snap.path.getSubpath\n\t     [ method ]\n\t     **\n\t     * Returns the subpath of a given path between given start and end lengths\n\t     **\n\t     - path (string) SVG path string\n\t     - from (number) length, in pixels, from the start of the path to the start of the segment\n\t     - to (number) length, in pixels, from the start of the path to the end of the segment\n\t     **\n\t     = (string) path string definition for the segment\n\t    \\*/\n\t    Snap.path.getSubpath = function (path, from, to) {\n\t        if (this.getTotalLength(path) - to < 1e-6) {\n\t            return getSubpathsAtLength(path, from).end;\n\t        }\n\t        var a = getSubpathsAtLength(path, to, 1);\n\t        return from ? getSubpathsAtLength(a, from).end : a;\n\t    };\n\t    /*\\\n\t     * Element.getTotalLength\n\t     [ method ]\n\t     **\n\t     * Returns the length of the path in pixels (only works for `path` elements)\n\t     = (number) length\n\t    \\*/\n\t    elproto.getTotalLength = function () {\n\t        if (this.node.getTotalLength) {\n\t            return this.node.getTotalLength();\n\t        }\n\t    };\n\t    // SIERRA Element.getPointAtLength()/Element.getTotalLength(): If a <path> is broken into different segments, is the jump distance to the new coordinates set by the _M_ or _m_ commands calculated as part of the path's total length?\n\t    /*\\\n\t     * Element.getPointAtLength\n\t     [ method ]\n\t     **\n\t     * Returns coordinates of the point located at the given length on the given path (only works for `path` elements)\n\t     **\n\t     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n\t     **\n\t     = (object) representation of the point:\n\t     o {\n\t     o     x: (number) x coordinate,\n\t     o     y: (number) y coordinate,\n\t     o     alpha: (number) angle of derivative\n\t     o }\n\t    \\*/\n\t    elproto.getPointAtLength = function (length) {\n\t        return getPointAtLength(this.attr(\"d\"), length);\n\t    };\n\t    // SIERRA Element.getSubpath(): Similar to the problem for Element.getPointAtLength(). Unclear how this would work for a segmented path. Overall, the concept of _subpath_ and what I'm calling a _segment_ (series of non-_M_ or _Z_ commands) is unclear.\n\t    /*\\\n\t     * Element.getSubpath\n\t     [ method ]\n\t     **\n\t     * Returns subpath of a given element from given start and end lengths (only works for `path` elements)\n\t     **\n\t     - from (number) length, in pixels, from the start of the path to the start of the segment\n\t     - to (number) length, in pixels, from the start of the path to the end of the segment\n\t     **\n\t     = (string) path string definition for the segment\n\t    \\*/\n\t    elproto.getSubpath = function (from, to) {\n\t        return Snap.path.getSubpath(this.attr(\"d\"), from, to);\n\t    };\n\t    Snap._.box = box;\n\t    /*\\\n\t     * Snap.path.findDotsAtSegment\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Finds dot coordinates on the given cubic beziér curve at the given t\n\t     - p1x (number) x of the first point of the curve\n\t     - p1y (number) y of the first point of the curve\n\t     - c1x (number) x of the first anchor of the curve\n\t     - c1y (number) y of the first anchor of the curve\n\t     - c2x (number) x of the second anchor of the curve\n\t     - c2y (number) y of the second anchor of the curve\n\t     - p2x (number) x of the second point of the curve\n\t     - p2y (number) y of the second point of the curve\n\t     - t (number) position on the curve (0..1)\n\t     = (object) point information in format:\n\t     o {\n\t     o     x: (number) x coordinate of the point,\n\t     o     y: (number) y coordinate of the point,\n\t     o     m: {\n\t     o         x: (number) x coordinate of the left anchor,\n\t     o         y: (number) y coordinate of the left anchor\n\t     o     },\n\t     o     n: {\n\t     o         x: (number) x coordinate of the right anchor,\n\t     o         y: (number) y coordinate of the right anchor\n\t     o     },\n\t     o     start: {\n\t     o         x: (number) x coordinate of the start of the curve,\n\t     o         y: (number) y coordinate of the start of the curve\n\t     o     },\n\t     o     end: {\n\t     o         x: (number) x coordinate of the end of the curve,\n\t     o         y: (number) y coordinate of the end of the curve\n\t     o     },\n\t     o     alpha: (number) angle of the curve derivative at the point\n\t     o }\n\t    \\*/\n\t    Snap.path.findDotsAtSegment = findDotsAtSegment;\n\t    /*\\\n\t     * Snap.path.bezierBBox\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Returns the bounding box of a given cubic beziér curve\n\t     - p1x (number) x of the first point of the curve\n\t     - p1y (number) y of the first point of the curve\n\t     - c1x (number) x of the first anchor of the curve\n\t     - c1y (number) y of the first anchor of the curve\n\t     - c2x (number) x of the second anchor of the curve\n\t     - c2y (number) y of the second anchor of the curve\n\t     - p2x (number) x of the second point of the curve\n\t     - p2y (number) y of the second point of the curve\n\t     * or\n\t     - bez (array) array of six points for beziér curve\n\t     = (object) bounding box\n\t     o {\n\t     o     x: (number) x coordinate of the left top point of the box,\n\t     o     y: (number) y coordinate of the left top point of the box,\n\t     o     x2: (number) x coordinate of the right bottom point of the box,\n\t     o     y2: (number) y coordinate of the right bottom point of the box,\n\t     o     width: (number) width of the box,\n\t     o     height: (number) height of the box\n\t     o }\n\t    \\*/\n\t    Snap.path.bezierBBox = bezierBBox;\n\t    /*\\\n\t     * Snap.path.isPointInsideBBox\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Returns `true` if given point is inside bounding box\n\t     - bbox (string) bounding box\n\t     - x (string) x coordinate of the point\n\t     - y (string) y coordinate of the point\n\t     = (boolean) `true` if point is inside\n\t    \\*/\n\t    Snap.path.isPointInsideBBox = isPointInsideBBox;\n\t    Snap.closest = function (x, y, X, Y) {\n\t        var r = 100,\n\t            b = box(x - r / 2, y - r / 2, r, r),\n\t            inside = [],\n\t            getter = X[0].hasOwnProperty(\"x\") ? function (i) {\n\t                return {\n\t                    x: X[i].x,\n\t                    y: X[i].y\n\t                };\n\t            } : function (i) {\n\t                return {\n\t                    x: X[i],\n\t                    y: Y[i]\n\t                };\n\t            },\n\t            found = 0;\n\t        while (r <= 1e6 && !found) {\n\t            for (var i = 0, ii = X.length; i < ii; i++) {\n\t                var xy = getter(i);\n\t                if (isPointInsideBBox(b, xy.x, xy.y)) {\n\t                    found++;\n\t                    inside.push(xy);\n\t                    break;\n\t                }\n\t            }\n\t            if (!found) {\n\t                r *= 2;\n\t                b = box(x - r / 2, y - r / 2, r, r)\n\t            }\n\t        }\n\t        if (r == 1e6) {\n\t            return;\n\t        }\n\t        var len = Infinity,\n\t            res;\n\t        for (i = 0, ii = inside.length; i < ii; i++) {\n\t            var l = Snap.len(x, y, inside[i].x, inside[i].y);\n\t            if (len > l) {\n\t                len = l;\n\t                inside[i].len = l;\n\t                res = inside[i];\n\t            }\n\t        }\n\t        return res;\n\t    };\n\t    /*\\\n\t     * Snap.path.isBBoxIntersect\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Returns `true` if two bounding boxes intersect\n\t     - bbox1 (string) first bounding box\n\t     - bbox2 (string) second bounding box\n\t     = (boolean) `true` if bounding boxes intersect\n\t    \\*/\n\t    Snap.path.isBBoxIntersect = isBBoxIntersect;\n\t    /*\\\n\t     * Snap.path.intersection\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Finds intersections of two paths\n\t     - path1 (string) path string\n\t     - path2 (string) path string\n\t     = (array) dots of intersection\n\t     o [\n\t     o     {\n\t     o         x: (number) x coordinate of the point,\n\t     o         y: (number) y coordinate of the point,\n\t     o         t1: (number) t value for segment of path1,\n\t     o         t2: (number) t value for segment of path2,\n\t     o         segment1: (number) order number for segment of path1,\n\t     o         segment2: (number) order number for segment of path2,\n\t     o         bez1: (array) eight coordinates representing beziér curve for the segment of path1,\n\t     o         bez2: (array) eight coordinates representing beziér curve for the segment of path2\n\t     o     }\n\t     o ]\n\t    \\*/\n\t    Snap.path.intersection = pathIntersection;\n\t    Snap.path.intersectionNumber = pathIntersectionNumber;\n\t    /*\\\n\t     * Snap.path.isPointInside\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Returns `true` if given point is inside a given closed path.\n\t     *\n\t     * Note: fill mode doesn’t affect the result of this method.\n\t     - path (string) path string\n\t     - x (number) x of the point\n\t     - y (number) y of the point\n\t     = (boolean) `true` if point is inside the path\n\t    \\*/\n\t    Snap.path.isPointInside = isPointInsidePath;\n\t    /*\\\n\t     * Snap.path.getBBox\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Returns the bounding box of a given path\n\t     - path (string) path string\n\t     = (object) bounding box\n\t     o {\n\t     o     x: (number) x coordinate of the left top point of the box,\n\t     o     y: (number) y coordinate of the left top point of the box,\n\t     o     x2: (number) x coordinate of the right bottom point of the box,\n\t     o     y2: (number) y coordinate of the right bottom point of the box,\n\t     o     width: (number) width of the box,\n\t     o     height: (number) height of the box\n\t     o }\n\t    \\*/\n\t    Snap.path.getBBox = pathBBox;\n\t    Snap.path.get = getPath;\n\t    /*\\\n\t     * Snap.path.toRelative\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Converts path coordinates into relative values\n\t     - path (string) path string\n\t     = (array) path string\n\t    \\*/\n\t    Snap.path.toRelative = pathToRelative;\n\t    /*\\\n\t     * Snap.path.toAbsolute\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Converts path coordinates into absolute values\n\t     - path (string) path string\n\t     = (array) path string\n\t    \\*/\n\t    Snap.path.toAbsolute = pathToAbsolute;\n\t    /*\\\n\t     * Snap.path.toCubic\n\t     [ method ]\n\t     **\n\t     * Utility method\n\t     **\n\t     * Converts path to a new path where all segments are cubic beziér curves\n\t     - pathString (string|array) path string or array of segments\n\t     = (array) array of segments\n\t    \\*/\n\t    Snap.path.toCubic = path2curve;\n\t    /*\\\n\t     * Snap.path.map\n\t     [ method ]\n\t     **\n\t     * Transform the path string with the given matrix\n\t     - path (string) path string\n\t     - matrix (object) see @Matrix\n\t     = (string) transformed path string\n\t    \\*/\n\t    Snap.path.map = mapPath;\n\t    Snap.path.toString = toString;\n\t    Snap.path.clone = pathClone;\n\t});\n\t\n\t// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n\t//\n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t//\n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t//\n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\tSnap.plugin(function (Snap, Element, Paper, glob) {\n\t    var mmax = Math.max,\n\t        mmin = Math.min;\n\t\n\t    // Set\n\t    var Set = function (items) {\n\t        this.items = [];\n\t\tthis.bindings = {};\n\t        this.length = 0;\n\t        this.type = \"set\";\n\t        if (items) {\n\t            for (var i = 0, ii = items.length; i < ii; i++) {\n\t                if (items[i]) {\n\t                    this[this.items.length] = this.items[this.items.length] = items[i];\n\t                    this.length++;\n\t                }\n\t            }\n\t        }\n\t    },\n\t    setproto = Set.prototype;\n\t    /*\\\n\t     * Set.push\n\t     [ method ]\n\t     **\n\t     * Adds each argument to the current set\n\t     = (object) original element\n\t    \\*/\n\t    setproto.push = function () {\n\t        var item,\n\t            len;\n\t        for (var i = 0, ii = arguments.length; i < ii; i++) {\n\t            item = arguments[i];\n\t            if (item) {\n\t                len = this.items.length;\n\t                this[len] = this.items[len] = item;\n\t                this.length++;\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Set.pop\n\t     [ method ]\n\t     **\n\t     * Removes last element and returns it\n\t     = (object) element\n\t    \\*/\n\t    setproto.pop = function () {\n\t        this.length && delete this[this.length--];\n\t        return this.items.pop();\n\t    };\n\t    /*\\\n\t     * Set.forEach\n\t     [ method ]\n\t     **\n\t     * Executes given function for each element in the set\n\t     *\n\t     * If the function returns `false`, the loop stops running.\n\t     **\n\t     - callback (function) function to run\n\t     - thisArg (object) context object for the callback\n\t     = (object) Set object\n\t    \\*/\n\t    setproto.forEach = function (callback, thisArg) {\n\t        for (var i = 0, ii = this.items.length; i < ii; i++) {\n\t            if (callback.call(thisArg, this.items[i], i) === false) {\n\t                return this;\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Set.animate\n\t     [ method ]\n\t     **\n\t     * Animates each element in set in sync.\n\t     *\n\t     **\n\t     - attrs (object) key-value pairs of destination attributes\n\t     - duration (number) duration of the animation in milliseconds\n\t     - easing (function) #optional easing function from @mina or custom\n\t     - callback (function) #optional callback function that executes when the animation ends\n\t     * or\n\t     - animation (array) array of animation parameter for each element in set in format `[attrs, duration, easing, callback]`\n\t     > Usage\n\t     | // animate all elements in set to radius 10\n\t     | set.animate({r: 10}, 500, mina.easein);\n\t     | // or\n\t     | // animate first element to radius 10, but second to radius 20 and in different time\n\t     | set.animate([{r: 10}, 500, mina.easein], [{r: 20}, 1500, mina.easein]);\n\t     = (Element) the current element\n\t    \\*/\n\t    setproto.animate = function (attrs, ms, easing, callback) {\n\t        if (typeof easing == \"function\" && !easing.length) {\n\t            callback = easing;\n\t            easing = mina.linear;\n\t        }\n\t        if (attrs instanceof Snap._.Animation) {\n\t            callback = attrs.callback;\n\t            easing = attrs.easing;\n\t            ms = easing.dur;\n\t            attrs = attrs.attr;\n\t        }\n\t        var args = arguments;\n\t        if (Snap.is(attrs, \"array\") && Snap.is(args[args.length - 1], \"array\")) {\n\t            var each = true;\n\t        }\n\t        var begin,\n\t            handler = function () {\n\t                if (begin) {\n\t                    this.b = begin;\n\t                } else {\n\t                    begin = this.b;\n\t                }\n\t            },\n\t            cb = 0,\n\t            set = this,\n\t            callbacker = callback && function () {\n\t                if (++cb == set.length) {\n\t                    callback.call(this);\n\t                }\n\t            };\n\t        return this.forEach(function (el, i) {\n\t            eve.once(\"snap.animcreated.\" + el.id, handler);\n\t            if (each) {\n\t                args[i] && el.animate.apply(el, args[i]);\n\t            } else {\n\t                el.animate(attrs, ms, easing, callbacker);\n\t            }\n\t        });\n\t    };\n\t    /*\\\n\t     * Set.remove\n\t     [ method ]\n\t     **\n\t     * Removes all children of the set.\n\t     *\n\t     = (object) Set object\n\t    \\*/\n\t    setproto.remove = function () {\n\t        while (this.length) {\n\t            this.pop().remove();\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Set.bind\n\t     [ method ]\n\t     **\n\t     * Specifies how to handle a specific attribute when applied\n\t     * to a set.\n\t     *\n\t     **\n\t     - attr (string) attribute name\n\t     - callback (function) function to run\n\t     * or\n\t     - attr (string) attribute name\n\t     - element (Element) specific element in the set to apply the attribute to\n\t     * or\n\t     - attr (string) attribute name\n\t     - element (Element) specific element in the set to apply the attribute to\n\t     - eattr (string) attribute on the element to bind the attribute to\n\t     = (object) Set object\n\t    \\*/\n\t    setproto.bind = function (attr, a, b) {\n\t        var data = {};\n\t        if (typeof a == \"function\") {\n\t            this.bindings[attr] = a;\n\t        } else {\n\t            var aname = b || attr;\n\t            this.bindings[attr] = function (v) {\n\t                data[aname] = v;\n\t                a.attr(data);\n\t            };\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Set.attr\n\t     [ method ]\n\t     **\n\t     * Equivalent of @Element.attr.\n\t     = (object) Set object\n\t    \\*/\n\t    setproto.attr = function (value) {\n\t        var unbound = {};\n\t        for (var k in value) {\n\t            if (this.bindings[k]) {\n\t                this.bindings[k](value[k]);\n\t            } else {\n\t                unbound[k] = value[k];\n\t            }\n\t        }\n\t        for (var i = 0, ii = this.items.length; i < ii; i++) {\n\t            this.items[i].attr(unbound);\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Set.clear\n\t     [ method ]\n\t     **\n\t     * Removes all elements from the set\n\t    \\*/\n\t    setproto.clear = function () {\n\t        while (this.length) {\n\t            this.pop();\n\t        }\n\t    };\n\t    /*\\\n\t     * Set.splice\n\t     [ method ]\n\t     **\n\t     * Removes range of elements from the set\n\t     **\n\t     - index (number) position of the deletion\n\t     - count (number) number of element to remove\n\t     - insertion… (object) #optional elements to insert\n\t     = (object) set elements that were deleted\n\t    \\*/\n\t    setproto.splice = function (index, count, insertion) {\n\t        index = index < 0 ? mmax(this.length + index, 0) : index;\n\t        count = mmax(0, mmin(this.length - index, count));\n\t        var tail = [],\n\t            todel = [],\n\t            args = [],\n\t            i;\n\t        for (i = 2; i < arguments.length; i++) {\n\t            args.push(arguments[i]);\n\t        }\n\t        for (i = 0; i < count; i++) {\n\t            todel.push(this[index + i]);\n\t        }\n\t        for (; i < this.length - index; i++) {\n\t            tail.push(this[index + i]);\n\t        }\n\t        var arglen = args.length;\n\t        for (i = 0; i < arglen + tail.length; i++) {\n\t            this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];\n\t        }\n\t        i = this.items.length = this.length -= count - arglen;\n\t        while (this[i]) {\n\t            delete this[i++];\n\t        }\n\t        return new Set(todel);\n\t    };\n\t    /*\\\n\t     * Set.exclude\n\t     [ method ]\n\t     **\n\t     * Removes given element from the set\n\t     **\n\t     - element (object) element to remove\n\t     = (boolean) `true` if object was found and removed from the set\n\t    \\*/\n\t    setproto.exclude = function (el) {\n\t        for (var i = 0, ii = this.length; i < ii; i++) if (this[i] == el) {\n\t            this.splice(i, 1);\n\t            return true;\n\t        }\n\t        return false;\n\t    };\n\t    /*\\\n\t     * Set.insertAfter\n\t     [ method ]\n\t     **\n\t     * Inserts set elements after given element.\n\t     **\n\t     - element (object) set will be inserted after this element\n\t     = (object) Set object\n\t    \\*/\n\t    setproto.insertAfter = function (el) {\n\t        var i = this.items.length;\n\t        while (i--) {\n\t            this.items[i].insertAfter(el);\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Set.getBBox\n\t     [ method ]\n\t     **\n\t     * Union of all bboxes of the set. See @Element.getBBox.\n\t     = (object) bounding box descriptor. See @Element.getBBox.\n\t    \\*/\n\t    setproto.getBBox = function () {\n\t        var x = [],\n\t            y = [],\n\t            x2 = [],\n\t            y2 = [];\n\t        for (var i = this.items.length; i--;) if (!this.items[i].removed) {\n\t            var box = this.items[i].getBBox();\n\t            x.push(box.x);\n\t            y.push(box.y);\n\t            x2.push(box.x + box.width);\n\t            y2.push(box.y + box.height);\n\t        }\n\t        x = mmin.apply(0, x);\n\t        y = mmin.apply(0, y);\n\t        x2 = mmax.apply(0, x2);\n\t        y2 = mmax.apply(0, y2);\n\t        return {\n\t            x: x,\n\t            y: y,\n\t            x2: x2,\n\t            y2: y2,\n\t            width: x2 - x,\n\t            height: y2 - y,\n\t            cx: x + (x2 - x) / 2,\n\t            cy: y + (y2 - y) / 2\n\t        };\n\t    };\n\t    /*\\\n\t     * Set.insertAfter\n\t     [ method ]\n\t     **\n\t     * Creates a clone of the set.\n\t     **\n\t     = (object) New Set object\n\t    \\*/\n\t    setproto.clone = function (s) {\n\t        s = new Set;\n\t        for (var i = 0, ii = this.items.length; i < ii; i++) {\n\t            s.push(this.items[i].clone());\n\t        }\n\t        return s;\n\t    };\n\t    setproto.toString = function () {\n\t        return \"Snap\\u2018s set\";\n\t    };\n\t    setproto.type = \"set\";\n\t    // export\n\t    /*\\\n\t     * Snap.Set\n\t     [ property ]\n\t     **\n\t     * Set constructor.\n\t    \\*/\n\t    Snap.Set = Set;\n\t    /*\\\n\t     * Snap.set\n\t     [ method ]\n\t     **\n\t     * Creates a set and fills it with list of arguments.\n\t     **\n\t     = (object) New Set object\n\t     | var r = paper.rect(0, 0, 10, 10),\n\t     |     s1 = Snap.set(), // empty set\n\t     |     s2 = Snap.set(r, paper.circle(100, 100, 20)); // prefilled set\n\t    \\*/\n\t    Snap.set = function () {\n\t        var set = new Set;\n\t        if (arguments.length) {\n\t            set.push.apply(set, Array.prototype.slice.call(arguments, 0));\n\t        }\n\t        return set;\n\t    };\n\t});\n\t\n\t// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n\t//\n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t//\n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t//\n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\tSnap.plugin(function (Snap, Element, Paper, glob) {\n\t    var names = {},\n\t        reUnit = /[%a-z]+$/i,\n\t        Str = String;\n\t    names.stroke = names.fill = \"colour\";\n\t    function getEmpty(item) {\n\t        var l = item[0];\n\t        switch (l.toLowerCase()) {\n\t            case \"t\": return [l, 0, 0];\n\t            case \"m\": return [l, 1, 0, 0, 1, 0, 0];\n\t            case \"r\": if (item.length == 4) {\n\t                return [l, 0, item[2], item[3]];\n\t            } else {\n\t                return [l, 0];\n\t            }\n\t            case \"s\": if (item.length == 5) {\n\t                return [l, 1, 1, item[3], item[4]];\n\t            } else if (item.length == 3) {\n\t                return [l, 1, 1];\n\t            } else {\n\t                return [l, 1];\n\t            }\n\t        }\n\t    }\n\t    function equaliseTransform(t1, t2, getBBox) {\n\t        t1 = t1 || new Snap.Matrix;\n\t        t2 = t2 || new Snap.Matrix;\n\t        t1 = Snap.parseTransformString(t1.toTransformString()) || [];\n\t        t2 = Snap.parseTransformString(t2.toTransformString()) || [];\n\t        var maxlength = Math.max(t1.length, t2.length),\n\t            from = [],\n\t            to = [],\n\t            i = 0, j, jj,\n\t            tt1, tt2;\n\t        for (; i < maxlength; i++) {\n\t            tt1 = t1[i] || getEmpty(t2[i]);\n\t            tt2 = t2[i] || getEmpty(tt1);\n\t            if (tt1[0] != tt2[0] ||\n\t                tt1[0].toLowerCase() == \"r\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3]) ||\n\t                tt1[0].toLowerCase() == \"s\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4])\n\t                ) {\n\t                    t1 = Snap._.transform2matrix(t1, getBBox());\n\t                    t2 = Snap._.transform2matrix(t2, getBBox());\n\t                    from = [[\"m\", t1.a, t1.b, t1.c, t1.d, t1.e, t1.f]];\n\t                    to = [[\"m\", t2.a, t2.b, t2.c, t2.d, t2.e, t2.f]];\n\t                    break;\n\t            }\n\t            from[i] = [];\n\t            to[i] = [];\n\t            for (j = 0, jj = Math.max(tt1.length, tt2.length); j < jj; j++) {\n\t                j in tt1 && (from[i][j] = tt1[j]);\n\t                j in tt2 && (to[i][j] = tt2[j]);\n\t            }\n\t        }\n\t        return {\n\t            from: path2array(from),\n\t            to: path2array(to),\n\t            f: getPath(from)\n\t        };\n\t    }\n\t    function getNumber(val) {\n\t        return val;\n\t    }\n\t    function getUnit(unit) {\n\t        return function (val) {\n\t            return +val.toFixed(3) + unit;\n\t        };\n\t    }\n\t    function getViewBox(val) {\n\t        return val.join(\" \");\n\t    }\n\t    function getColour(clr) {\n\t        return Snap.rgb(clr[0], clr[1], clr[2], clr[3]);\n\t    }\n\t    function getPath(path) {\n\t        var k = 0, i, ii, j, jj, out, a, b = [];\n\t        for (i = 0, ii = path.length; i < ii; i++) {\n\t            out = \"[\";\n\t            a = ['\"' + path[i][0] + '\"'];\n\t            for (j = 1, jj = path[i].length; j < jj; j++) {\n\t                a[j] = \"val[\" + k++ + \"]\";\n\t            }\n\t            out += a + \"]\";\n\t            b[i] = out;\n\t        }\n\t        return Function(\"val\", \"return Snap.path.toString.call([\" + b + \"])\");\n\t    }\n\t    function path2array(path) {\n\t        var out = [];\n\t        for (var i = 0, ii = path.length; i < ii; i++) {\n\t            for (var j = 1, jj = path[i].length; j < jj; j++) {\n\t                out.push(path[i][j]);\n\t            }\n\t        }\n\t        return out;\n\t    }\n\t    function isNumeric(obj) {\n\t        return isFinite(obj);\n\t    }\n\t    function arrayEqual(arr1, arr2) {\n\t        if (!Snap.is(arr1, \"array\") || !Snap.is(arr2, \"array\")) {\n\t            return false;\n\t        }\n\t        return arr1.toString() == arr2.toString();\n\t    }\n\t    Element.prototype.equal = function (name, b) {\n\t        return eve(\"snap.util.equal\", this, name, b).firstDefined();\n\t    };\n\t    eve.on(\"snap.util.equal\", function (name, b) {\n\t        var A, B, a = Str(this.attr(name) || \"\"),\n\t            el = this;\n\t        if (names[name] == \"colour\") {\n\t            A = Snap.color(a);\n\t            B = Snap.color(b);\n\t            return {\n\t                from: [A.r, A.g, A.b, A.opacity],\n\t                to: [B.r, B.g, B.b, B.opacity],\n\t                f: getColour\n\t            };\n\t        }\n\t        if (name == \"viewBox\") {\n\t            A = this.attr(name).vb.split(\" \").map(Number);\n\t            B = b.split(\" \").map(Number);\n\t            return {\n\t                from: A,\n\t                to: B,\n\t                f: getViewBox\n\t            };\n\t        }\n\t        if (name == \"transform\" || name == \"gradientTransform\" || name == \"patternTransform\") {\n\t            if (typeof b == \"string\") {\n\t                b = Str(b).replace(/\\.{3}|\\u2026/g, a);\n\t            }\n\t            a = this.matrix;\n\t            if (!Snap._.rgTransform.test(b)) {\n\t                b = Snap._.transform2matrix(Snap._.svgTransform2string(b), this.getBBox());\n\t            } else {\n\t                b = Snap._.transform2matrix(b, this.getBBox());\n\t            }\n\t            return equaliseTransform(a, b, function () {\n\t                return el.getBBox(1);\n\t            });\n\t        }\n\t        if (name == \"d\" || name == \"path\") {\n\t            A = Snap.path.toCubic(a, b);\n\t            return {\n\t                from: path2array(A[0]),\n\t                to: path2array(A[1]),\n\t                f: getPath(A[0])\n\t            };\n\t        }\n\t        if (name == \"points\") {\n\t            A = Str(a).split(Snap._.separator);\n\t            B = Str(b).split(Snap._.separator);\n\t            return {\n\t                from: A,\n\t                to: B,\n\t                f: function (val) { return val; }\n\t            };\n\t        }\n\t        if (isNumeric(a) && isNumeric(b)) {\n\t            return {\n\t                from: parseFloat(a),\n\t                to: parseFloat(b),\n\t                f: getNumber\n\t            };\n\t        }\n\t        var aUnit = a.match(reUnit),\n\t            bUnit = Str(b).match(reUnit);\n\t        if (aUnit && arrayEqual(aUnit, bUnit)) {\n\t            return {\n\t                from: parseFloat(a),\n\t                to: parseFloat(b),\n\t                f: getUnit(aUnit)\n\t            };\n\t        } else {\n\t            return {\n\t                from: this.asPX(name),\n\t                to: this.asPX(name, b),\n\t                f: getNumber\n\t            };\n\t        }\n\t    });\n\t});\n\t\n\t// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n\t// \n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t// \n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t// \n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\tSnap.plugin(function (Snap, Element, Paper, glob) {\n\t    var elproto = Element.prototype,\n\t    has = \"hasOwnProperty\",\n\t    supportsTouch = \"createTouch\" in glob.doc,\n\t    events = [\n\t        \"click\", \"dblclick\", \"mousedown\", \"mousemove\", \"mouseout\",\n\t        \"mouseover\", \"mouseup\", \"touchstart\", \"touchmove\", \"touchend\",\n\t        \"touchcancel\"\n\t    ],\n\t    touchMap = {\n\t        mousedown: \"touchstart\",\n\t        mousemove: \"touchmove\",\n\t        mouseup: \"touchend\"\n\t    },\n\t    getScroll = function (xy, el) {\n\t        var name = xy == \"y\" ? \"scrollTop\" : \"scrollLeft\",\n\t            doc = el && el.node ? el.node.ownerDocument : glob.doc;\n\t        return doc[name in doc.documentElement ? \"documentElement\" : \"body\"][name];\n\t    },\n\t    preventDefault = function () {\n\t        this.returnValue = false;\n\t    },\n\t    preventTouch = function () {\n\t        return this.originalEvent.preventDefault();\n\t    },\n\t    stopPropagation = function () {\n\t        this.cancelBubble = true;\n\t    },\n\t    stopTouch = function () {\n\t        return this.originalEvent.stopPropagation();\n\t    },\n\t    addEvent = function (obj, type, fn, element) {\n\t        var realName = supportsTouch && touchMap[type] ? touchMap[type] : type,\n\t            f = function (e) {\n\t                var scrollY = getScroll(\"y\", element),\n\t                    scrollX = getScroll(\"x\", element);\n\t                if (supportsTouch && touchMap[has](type)) {\n\t                    for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++) {\n\t                        if (e.targetTouches[i].target == obj || obj.contains(e.targetTouches[i].target)) {\n\t                            var olde = e;\n\t                            e = e.targetTouches[i];\n\t                            e.originalEvent = olde;\n\t                            e.preventDefault = preventTouch;\n\t                            e.stopPropagation = stopTouch;\n\t                            break;\n\t                        }\n\t                    }\n\t                }\n\t                var x = e.clientX + scrollX,\n\t                    y = e.clientY + scrollY;\n\t                return fn.call(element, e, x, y);\n\t            };\n\t\n\t        if (type !== realName) {\n\t            obj.addEventListener(type, f, false);\n\t        }\n\t\n\t        obj.addEventListener(realName, f, false);\n\t\n\t        return function () {\n\t            if (type !== realName) {\n\t                obj.removeEventListener(type, f, false);\n\t            }\n\t\n\t            obj.removeEventListener(realName, f, false);\n\t            return true;\n\t        };\n\t    },\n\t    drag = [],\n\t    dragMove = function (e) {\n\t        var x = e.clientX,\n\t            y = e.clientY,\n\t            scrollY = getScroll(\"y\"),\n\t            scrollX = getScroll(\"x\"),\n\t            dragi,\n\t            j = drag.length;\n\t        while (j--) {\n\t            dragi = drag[j];\n\t            if (supportsTouch) {\n\t                var i = e.touches && e.touches.length,\n\t                    touch;\n\t                while (i--) {\n\t                    touch = e.touches[i];\n\t                    if (touch.identifier == dragi.el._drag.id || dragi.el.node.contains(touch.target)) {\n\t                        x = touch.clientX;\n\t                        y = touch.clientY;\n\t                        (e.originalEvent ? e.originalEvent : e).preventDefault();\n\t                        break;\n\t                    }\n\t                }\n\t            } else {\n\t                e.preventDefault();\n\t            }\n\t            var node = dragi.el.node,\n\t                o,\n\t                next = node.nextSibling,\n\t                parent = node.parentNode,\n\t                display = node.style.display;\n\t            // glob.win.opera && parent.removeChild(node);\n\t            // node.style.display = \"none\";\n\t            // o = dragi.el.paper.getElementByPoint(x, y);\n\t            // node.style.display = display;\n\t            // glob.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));\n\t            // o && eve(\"snap.drag.over.\" + dragi.el.id, dragi.el, o);\n\t            x += scrollX;\n\t            y += scrollY;\n\t            eve(\"snap.drag.move.\" + dragi.el.id, dragi.move_scope || dragi.el, x - dragi.el._drag.x, y - dragi.el._drag.y, x, y, e);\n\t        }\n\t    },\n\t    dragUp = function (e) {\n\t        Snap.unmousemove(dragMove).unmouseup(dragUp);\n\t        var i = drag.length,\n\t            dragi;\n\t        while (i--) {\n\t            dragi = drag[i];\n\t            dragi.el._drag = {};\n\t            eve(\"snap.drag.end.\" + dragi.el.id, dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el, e);\n\t            eve.off(\"snap.drag.*.\" + dragi.el.id);\n\t        }\n\t        drag = [];\n\t    };\n\t    /*\\\n\t     * Element.click\n\t     [ method ]\n\t     **\n\t     * Adds a click event handler to the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.unclick\n\t     [ method ]\n\t     **\n\t     * Removes a click event handler from the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    \n\t    /*\\\n\t     * Element.dblclick\n\t     [ method ]\n\t     **\n\t     * Adds a double click event handler to the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.undblclick\n\t     [ method ]\n\t     **\n\t     * Removes a double click event handler from the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    \n\t    /*\\\n\t     * Element.mousedown\n\t     [ method ]\n\t     **\n\t     * Adds a mousedown event handler to the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.unmousedown\n\t     [ method ]\n\t     **\n\t     * Removes a mousedown event handler from the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    \n\t    /*\\\n\t     * Element.mousemove\n\t     [ method ]\n\t     **\n\t     * Adds a mousemove event handler to the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.unmousemove\n\t     [ method ]\n\t     **\n\t     * Removes a mousemove event handler from the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    \n\t    /*\\\n\t     * Element.mouseout\n\t     [ method ]\n\t     **\n\t     * Adds a mouseout event handler to the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.unmouseout\n\t     [ method ]\n\t     **\n\t     * Removes a mouseout event handler from the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    \n\t    /*\\\n\t     * Element.mouseover\n\t     [ method ]\n\t     **\n\t     * Adds a mouseover event handler to the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.unmouseover\n\t     [ method ]\n\t     **\n\t     * Removes a mouseover event handler from the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    \n\t    /*\\\n\t     * Element.mouseup\n\t     [ method ]\n\t     **\n\t     * Adds a mouseup event handler to the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.unmouseup\n\t     [ method ]\n\t     **\n\t     * Removes a mouseup event handler from the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    \n\t    /*\\\n\t     * Element.touchstart\n\t     [ method ]\n\t     **\n\t     * Adds a touchstart event handler to the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.untouchstart\n\t     [ method ]\n\t     **\n\t     * Removes a touchstart event handler from the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    \n\t    /*\\\n\t     * Element.touchmove\n\t     [ method ]\n\t     **\n\t     * Adds a touchmove event handler to the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.untouchmove\n\t     [ method ]\n\t     **\n\t     * Removes a touchmove event handler from the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    \n\t    /*\\\n\t     * Element.touchend\n\t     [ method ]\n\t     **\n\t     * Adds a touchend event handler to the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.untouchend\n\t     [ method ]\n\t     **\n\t     * Removes a touchend event handler from the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    \n\t    /*\\\n\t     * Element.touchcancel\n\t     [ method ]\n\t     **\n\t     * Adds a touchcancel event handler to the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    /*\\\n\t     * Element.untouchcancel\n\t     [ method ]\n\t     **\n\t     * Removes a touchcancel event handler from the element\n\t     - handler (function) handler for the event\n\t     = (object) @Element\n\t    \\*/\n\t    for (var i = events.length; i--;) {\n\t        (function (eventName) {\n\t            Snap[eventName] = elproto[eventName] = function (fn, scope) {\n\t                if (Snap.is(fn, \"function\")) {\n\t                    this.events = this.events || [];\n\t                    this.events.push({\n\t                        name: eventName,\n\t                        f: fn,\n\t                        unbind: addEvent(this.node || document, eventName, fn, scope || this)\n\t                    });\n\t                } else {\n\t                    for (var i = 0, ii = this.events.length; i < ii; i++) if (this.events[i].name == eventName) {\n\t                        try {\n\t                            this.events[i].f.call(this);\n\t                        } catch (e) {}\n\t                    }\n\t                }\n\t                return this;\n\t            };\n\t            Snap[\"un\" + eventName] =\n\t            elproto[\"un\" + eventName] = function (fn) {\n\t                var events = this.events || [],\n\t                    l = events.length;\n\t                while (l--) if (events[l].name == eventName &&\n\t                               (events[l].f == fn || !fn)) {\n\t                    events[l].unbind();\n\t                    events.splice(l, 1);\n\t                    !events.length && delete this.events;\n\t                    return this;\n\t                }\n\t                return this;\n\t            };\n\t        })(events[i]);\n\t    }\n\t    /*\\\n\t     * Element.hover\n\t     [ method ]\n\t     **\n\t     * Adds hover event handlers to the element\n\t     - f_in (function) handler for hover in\n\t     - f_out (function) handler for hover out\n\t     - icontext (object) #optional context for hover in handler\n\t     - ocontext (object) #optional context for hover out handler\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.hover = function (f_in, f_out, scope_in, scope_out) {\n\t        return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in);\n\t    };\n\t    /*\\\n\t     * Element.unhover\n\t     [ method ]\n\t     **\n\t     * Removes hover event handlers from the element\n\t     - f_in (function) handler for hover in\n\t     - f_out (function) handler for hover out\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.unhover = function (f_in, f_out) {\n\t        return this.unmouseover(f_in).unmouseout(f_out);\n\t    };\n\t    var draggable = [];\n\t    // SIERRA unclear what _context_ refers to for starting, ending, moving the drag gesture.\n\t    // SIERRA Element.drag(): _x position of the mouse_: Where are the x/y values offset from?\n\t    // SIERRA Element.drag(): much of this member's doc appears to be duplicated for some reason.\n\t    // SIERRA Unclear about this sentence: _Additionally following drag events will be triggered: drag.start.<id> on start, drag.end.<id> on end and drag.move.<id> on every move._ Is there a global _drag_ object to which you can assign handlers keyed by an element's ID?\n\t    /*\\\n\t     * Element.drag\n\t     [ method ]\n\t     **\n\t     * Adds event handlers for an element's drag gesture\n\t     **\n\t     - onmove (function) handler for moving\n\t     - onstart (function) handler for drag start\n\t     - onend (function) handler for drag end\n\t     - mcontext (object) #optional context for moving handler\n\t     - scontext (object) #optional context for drag start handler\n\t     - econtext (object) #optional context for drag end handler\n\t     * Additionaly following `drag` events are triggered: `drag.start.<id>` on start, \n\t     * `drag.end.<id>` on end and `drag.move.<id>` on every move. When element is dragged over another element \n\t     * `drag.over.<id>` fires as well.\n\t     *\n\t     * Start event and start handler are called in specified context or in context of the element with following parameters:\n\t     o x (number) x position of the mouse\n\t     o y (number) y position of the mouse\n\t     o event (object) DOM event object\n\t     * Move event and move handler are called in specified context or in context of the element with following parameters:\n\t     o dx (number) shift by x from the start point\n\t     o dy (number) shift by y from the start point\n\t     o x (number) x position of the mouse\n\t     o y (number) y position of the mouse\n\t     o event (object) DOM event object\n\t     * End event and end handler are called in specified context or in context of the element with following parameters:\n\t     o event (object) DOM event object\n\t     = (object) @Element\n\t    \\*/\n\t    elproto.drag = function (onmove, onstart, onend, move_scope, start_scope, end_scope) {\n\t        var el = this;\n\t        if (!arguments.length) {\n\t            var origTransform;\n\t            return el.drag(function (dx, dy) {\n\t                this.attr({\n\t                    transform: origTransform + (origTransform ? \"T\" : \"t\") + [dx, dy]\n\t                });\n\t            }, function () {\n\t                origTransform = this.transform().local;\n\t            });\n\t        }\n\t        function start(e, x, y) {\n\t            (e.originalEvent || e).preventDefault();\n\t            el._drag.x = x;\n\t            el._drag.y = y;\n\t            el._drag.id = e.identifier;\n\t            !drag.length && Snap.mousemove(dragMove).mouseup(dragUp);\n\t            drag.push({el: el, move_scope: move_scope, start_scope: start_scope, end_scope: end_scope});\n\t            onstart && eve.on(\"snap.drag.start.\" + el.id, onstart);\n\t            onmove && eve.on(\"snap.drag.move.\" + el.id, onmove);\n\t            onend && eve.on(\"snap.drag.end.\" + el.id, onend);\n\t            eve(\"snap.drag.start.\" + el.id, start_scope || move_scope || el, x, y, e);\n\t        }\n\t        function init(e, x, y) {\n\t            eve(\"snap.draginit.\" + el.id, el, e, x, y);\n\t        }\n\t        eve.on(\"snap.draginit.\" + el.id, start);\n\t        el._drag = {};\n\t        draggable.push({el: el, start: start, init: init});\n\t        el.mousedown(init);\n\t        return el;\n\t    };\n\t    /*\n\t     * Element.onDragOver\n\t     [ method ]\n\t     **\n\t     * Shortcut to assign event handler for `drag.over.<id>` event, where `id` is the element's `id` (see @Element.id)\n\t     - f (function) handler for event, first argument would be the element you are dragging over\n\t    \\*/\n\t    // elproto.onDragOver = function (f) {\n\t    //     f ? eve.on(\"snap.drag.over.\" + this.id, f) : eve.unbind(\"snap.drag.over.\" + this.id);\n\t    // };\n\t    /*\\\n\t     * Element.undrag\n\t     [ method ]\n\t     **\n\t     * Removes all drag event handlers from the given element\n\t    \\*/\n\t    elproto.undrag = function () {\n\t        var i = draggable.length;\n\t        while (i--) if (draggable[i].el == this) {\n\t            this.unmousedown(draggable[i].init);\n\t            draggable.splice(i, 1);\n\t            eve.unbind(\"snap.drag.*.\" + this.id);\n\t            eve.unbind(\"snap.draginit.\" + this.id);\n\t        }\n\t        !draggable.length && Snap.unmousemove(dragMove).unmouseup(dragUp);\n\t        return this;\n\t    };\n\t});\n\t\n\t// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n\t//\n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t//\n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t//\n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\tSnap.plugin(function (Snap, Element, Paper, glob) {\n\t    var elproto = Element.prototype,\n\t        pproto = Paper.prototype,\n\t        rgurl = /^\\s*url\\((.+)\\)/,\n\t        Str = String,\n\t        $ = Snap._.$;\n\t    Snap.filter = {};\n\t    /*\\\n\t     * Paper.filter\n\t     [ method ]\n\t     **\n\t     * Creates a `<filter>` element\n\t     **\n\t     - filstr (string) SVG fragment of filter provided as a string\n\t     = (object) @Element\n\t     * Note: It is recommended to use filters embedded into the page inside an empty SVG element.\n\t     > Usage\n\t     | var f = paper.filter('<feGaussianBlur stdDeviation=\"2\"/>'),\n\t     |     c = paper.circle(10, 10, 10).attr({\n\t     |         filter: f\n\t     |     });\n\t    \\*/\n\t    pproto.filter = function (filstr) {\n\t        var paper = this;\n\t        if (paper.type != \"svg\") {\n\t            paper = paper.paper;\n\t        }\n\t        var f = Snap.parse(Str(filstr)),\n\t            id = Snap._.id(),\n\t            width = paper.node.offsetWidth,\n\t            height = paper.node.offsetHeight,\n\t            filter = $(\"filter\");\n\t        $(filter, {\n\t            id: id,\n\t            filterUnits: \"userSpaceOnUse\"\n\t        });\n\t        filter.appendChild(f.node);\n\t        paper.defs.appendChild(filter);\n\t        return new Element(filter);\n\t    };\n\t\n\t    eve.on(\"snap.util.getattr.filter\", function () {\n\t        eve.stop();\n\t        var p = $(this.node, \"filter\");\n\t        if (p) {\n\t            var match = Str(p).match(rgurl);\n\t            return match && Snap.select(match[1]);\n\t        }\n\t    });\n\t    eve.on(\"snap.util.attr.filter\", function (value) {\n\t        if (value instanceof Element && value.type == \"filter\") {\n\t            eve.stop();\n\t            var id = value.node.id;\n\t            if (!id) {\n\t                $(value.node, {id: value.id});\n\t                id = value.id;\n\t            }\n\t            $(this.node, {\n\t                filter: Snap.url(id)\n\t            });\n\t        }\n\t        if (!value || value == \"none\") {\n\t            eve.stop();\n\t            this.node.removeAttribute(\"filter\");\n\t        }\n\t    });\n\t    /*\\\n\t     * Snap.filter.blur\n\t     [ method ]\n\t     **\n\t     * Returns an SVG markup string for the blur filter\n\t     **\n\t     - x (number) amount of horizontal blur, in pixels\n\t     - y (number) #optional amount of vertical blur, in pixels\n\t     = (string) filter representation\n\t     > Usage\n\t     | var f = paper.filter(Snap.filter.blur(5, 10)),\n\t     |     c = paper.circle(10, 10, 10).attr({\n\t     |         filter: f\n\t     |     });\n\t    \\*/\n\t    Snap.filter.blur = function (x, y) {\n\t        if (x == null) {\n\t            x = 2;\n\t        }\n\t        var def = y == null ? x : [x, y];\n\t        return Snap.format('\\<feGaussianBlur stdDeviation=\"{def}\"/>', {\n\t            def: def\n\t        });\n\t    };\n\t    Snap.filter.blur.toString = function () {\n\t        return this();\n\t    };\n\t    /*\\\n\t     * Snap.filter.shadow\n\t     [ method ]\n\t     **\n\t     * Returns an SVG markup string for the shadow filter\n\t     **\n\t     - dx (number) #optional horizontal shift of the shadow, in pixels\n\t     - dy (number) #optional vertical shift of the shadow, in pixels\n\t     - blur (number) #optional amount of blur\n\t     - color (string) #optional color of the shadow\n\t     - opacity (number) #optional `0..1` opacity of the shadow\n\t     * or\n\t     - dx (number) #optional horizontal shift of the shadow, in pixels\n\t     - dy (number) #optional vertical shift of the shadow, in pixels\n\t     - color (string) #optional color of the shadow\n\t     - opacity (number) #optional `0..1` opacity of the shadow\n\t     * which makes blur default to `4`. Or\n\t     - dx (number) #optional horizontal shift of the shadow, in pixels\n\t     - dy (number) #optional vertical shift of the shadow, in pixels\n\t     - opacity (number) #optional `0..1` opacity of the shadow\n\t     = (string) filter representation\n\t     > Usage\n\t     | var f = paper.filter(Snap.filter.shadow(0, 2, .3)),\n\t     |     c = paper.circle(10, 10, 10).attr({\n\t     |         filter: f\n\t     |     });\n\t    \\*/\n\t    Snap.filter.shadow = function (dx, dy, blur, color, opacity) {\n\t        if (opacity == null) {\n\t            if (color == null) {\n\t                opacity = blur;\n\t                blur = 4;\n\t                color = \"#000\";\n\t            } else {\n\t                opacity = color;\n\t                color = blur;\n\t                blur = 4;\n\t            }\n\t        }\n\t        if (blur == null) {\n\t            blur = 4;\n\t        }\n\t        if (opacity == null) {\n\t            opacity = 1;\n\t        }\n\t        if (dx == null) {\n\t            dx = 0;\n\t            dy = 2;\n\t        }\n\t        if (dy == null) {\n\t            dy = dx;\n\t        }\n\t        color = Snap.color(color);\n\t        return Snap.format('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"{blur}\"/><feOffset dx=\"{dx}\" dy=\"{dy}\" result=\"offsetblur\"/><feFlood flood-color=\"{color}\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"{opacity}\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>', {\n\t            color: color,\n\t            dx: dx,\n\t            dy: dy,\n\t            blur: blur,\n\t            opacity: opacity\n\t        });\n\t    };\n\t    Snap.filter.shadow.toString = function () {\n\t        return this();\n\t    };\n\t    /*\\\n\t     * Snap.filter.grayscale\n\t     [ method ]\n\t     **\n\t     * Returns an SVG markup string for the grayscale filter\n\t     **\n\t     - amount (number) amount of filter (`0..1`)\n\t     = (string) filter representation\n\t    \\*/\n\t    Snap.filter.grayscale = function (amount) {\n\t        if (amount == null) {\n\t            amount = 1;\n\t        }\n\t        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0\"/>', {\n\t            a: 0.2126 + 0.7874 * (1 - amount),\n\t            b: 0.7152 - 0.7152 * (1 - amount),\n\t            c: 0.0722 - 0.0722 * (1 - amount),\n\t            d: 0.2126 - 0.2126 * (1 - amount),\n\t            e: 0.7152 + 0.2848 * (1 - amount),\n\t            f: 0.0722 - 0.0722 * (1 - amount),\n\t            g: 0.2126 - 0.2126 * (1 - amount),\n\t            h: 0.0722 + 0.9278 * (1 - amount)\n\t        });\n\t    };\n\t    Snap.filter.grayscale.toString = function () {\n\t        return this();\n\t    };\n\t    /*\\\n\t     * Snap.filter.sepia\n\t     [ method ]\n\t     **\n\t     * Returns an SVG markup string for the sepia filter\n\t     **\n\t     - amount (number) amount of filter (`0..1`)\n\t     = (string) filter representation\n\t    \\*/\n\t    Snap.filter.sepia = function (amount) {\n\t        if (amount == null) {\n\t            amount = 1;\n\t        }\n\t        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0\"/>', {\n\t            a: 0.393 + 0.607 * (1 - amount),\n\t            b: 0.769 - 0.769 * (1 - amount),\n\t            c: 0.189 - 0.189 * (1 - amount),\n\t            d: 0.349 - 0.349 * (1 - amount),\n\t            e: 0.686 + 0.314 * (1 - amount),\n\t            f: 0.168 - 0.168 * (1 - amount),\n\t            g: 0.272 - 0.272 * (1 - amount),\n\t            h: 0.534 - 0.534 * (1 - amount),\n\t            i: 0.131 + 0.869 * (1 - amount)\n\t        });\n\t    };\n\t    Snap.filter.sepia.toString = function () {\n\t        return this();\n\t    };\n\t    /*\\\n\t     * Snap.filter.saturate\n\t     [ method ]\n\t     **\n\t     * Returns an SVG markup string for the saturate filter\n\t     **\n\t     - amount (number) amount of filter (`0..1`)\n\t     = (string) filter representation\n\t    \\*/\n\t    Snap.filter.saturate = function (amount) {\n\t        if (amount == null) {\n\t            amount = 1;\n\t        }\n\t        return Snap.format('<feColorMatrix type=\"saturate\" values=\"{amount}\"/>', {\n\t            amount: 1 - amount\n\t        });\n\t    };\n\t    Snap.filter.saturate.toString = function () {\n\t        return this();\n\t    };\n\t    /*\\\n\t     * Snap.filter.hueRotate\n\t     [ method ]\n\t     **\n\t     * Returns an SVG markup string for the hue-rotate filter\n\t     **\n\t     - angle (number) angle of rotation\n\t     = (string) filter representation\n\t    \\*/\n\t    Snap.filter.hueRotate = function (angle) {\n\t        angle = angle || 0;\n\t        return Snap.format('<feColorMatrix type=\"hueRotate\" values=\"{angle}\"/>', {\n\t            angle: angle\n\t        });\n\t    };\n\t    Snap.filter.hueRotate.toString = function () {\n\t        return this();\n\t    };\n\t    /*\\\n\t     * Snap.filter.invert\n\t     [ method ]\n\t     **\n\t     * Returns an SVG markup string for the invert filter\n\t     **\n\t     - amount (number) amount of filter (`0..1`)\n\t     = (string) filter representation\n\t    \\*/\n\t    Snap.filter.invert = function (amount) {\n\t        if (amount == null) {\n\t            amount = 1;\n\t        }\n\t//        <feColorMatrix type=\"matrix\" values=\"-1 0 0 0 1  0 -1 0 0 1  0 0 -1 0 1  0 0 0 1 0\" color-interpolation-filters=\"sRGB\"/>\n\t        return Snap.format('<feComponentTransfer><feFuncR type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncG type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncB type=\"table\" tableValues=\"{amount} {amount2}\"/></feComponentTransfer>', {\n\t            amount: amount,\n\t            amount2: 1 - amount\n\t        });\n\t    };\n\t    Snap.filter.invert.toString = function () {\n\t        return this();\n\t    };\n\t    /*\\\n\t     * Snap.filter.brightness\n\t     [ method ]\n\t     **\n\t     * Returns an SVG markup string for the brightness filter\n\t     **\n\t     - amount (number) amount of filter (`0..1`)\n\t     = (string) filter representation\n\t    \\*/\n\t    Snap.filter.brightness = function (amount) {\n\t        if (amount == null) {\n\t            amount = 1;\n\t        }\n\t        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\"/><feFuncG type=\"linear\" slope=\"{amount}\"/><feFuncB type=\"linear\" slope=\"{amount}\"/></feComponentTransfer>', {\n\t            amount: amount\n\t        });\n\t    };\n\t    Snap.filter.brightness.toString = function () {\n\t        return this();\n\t    };\n\t    /*\\\n\t     * Snap.filter.contrast\n\t     [ method ]\n\t     **\n\t     * Returns an SVG markup string for the contrast filter\n\t     **\n\t     - amount (number) amount of filter (`0..1`)\n\t     = (string) filter representation\n\t    \\*/\n\t    Snap.filter.contrast = function (amount) {\n\t        if (amount == null) {\n\t            amount = 1;\n\t        }\n\t        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncG type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncB type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/></feComponentTransfer>', {\n\t            amount: amount,\n\t            amount2: .5 - amount / 2\n\t        });\n\t    };\n\t    Snap.filter.contrast.toString = function () {\n\t        return this();\n\t    };\n\t});\n\t\n\t// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n\t//\n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t//\n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t//\n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\tSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n\t    var box = Snap._.box,\n\t        is = Snap.is,\n\t        firstLetter = /^[^a-z]*([tbmlrc])/i,\n\t        toString = function () {\n\t            return \"T\" + this.dx + \",\" + this.dy;\n\t        };\n\t    /*\\\n\t     * Element.getAlign\n\t     [ method ]\n\t     **\n\t     * Returns shift needed to align the element relatively to given element.\n\t     * If no elements specified, parent `<svg>` container will be used.\n\t     - el (object) @optional alignment element\n\t     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n\t     = (object|string) Object in format `{dx: , dy: }` also has a string representation as a transformation string\n\t     > Usage\n\t     | el.transform(el.getAlign(el2, \"top\"));\n\t     * or\n\t     | var dy = el.getAlign(el2, \"top\").dy;\n\t    \\*/\n\t    Element.prototype.getAlign = function (el, way) {\n\t        if (way == null && is(el, \"string\")) {\n\t            way = el;\n\t            el = null;\n\t        }\n\t        el = el || this.paper;\n\t        var bx = el.getBBox ? el.getBBox() : box(el),\n\t            bb = this.getBBox(),\n\t            out = {};\n\t        way = way && way.match(firstLetter);\n\t        way = way ? way[1].toLowerCase() : \"c\";\n\t        switch (way) {\n\t            case \"t\":\n\t                out.dx = 0;\n\t                out.dy = bx.y - bb.y;\n\t            break;\n\t            case \"b\":\n\t                out.dx = 0;\n\t                out.dy = bx.y2 - bb.y2;\n\t            break;\n\t            case \"m\":\n\t                out.dx = 0;\n\t                out.dy = bx.cy - bb.cy;\n\t            break;\n\t            case \"l\":\n\t                out.dx = bx.x - bb.x;\n\t                out.dy = 0;\n\t            break;\n\t            case \"r\":\n\t                out.dx = bx.x2 - bb.x2;\n\t                out.dy = 0;\n\t            break;\n\t            default:\n\t                out.dx = bx.cx - bb.cx;\n\t                out.dy = 0;\n\t            break;\n\t        }\n\t        out.toString = toString;\n\t        return out;\n\t    };\n\t    /*\\\n\t     * Element.align\n\t     [ method ]\n\t     **\n\t     * Aligns the element relatively to given one via transformation.\n\t     * If no elements specified, parent `<svg>` container will be used.\n\t     - el (object) @optional alignment element\n\t     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n\t     = (object) this element\n\t     > Usage\n\t     | el.align(el2, \"top\");\n\t     * or\n\t     | el.align(\"middle\");\n\t    \\*/\n\t    Element.prototype.align = function (el, way) {\n\t        return this.transform(\"...\" + this.getAlign(el, way));\n\t    };\n\t});\n\t\n\t// Copyright (c) 2016 Adobe Systems Incorporated. All rights reserved.\n\t//\n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t//\n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t//\n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\tSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n\t    var elproto = Element.prototype,\n\t        is = Snap.is,\n\t        Str = String,\n\t        has = \"hasOwnProperty\";\n\t    function slice(from, to, f) {\n\t        return function (arr) {\n\t            var res = arr.slice(from, to);\n\t            if (res.length == 1) {\n\t                res = res[0];\n\t            }\n\t            return f ? f(res) : res;\n\t        };\n\t    }\n\t    var Animation = function (attr, ms, easing, callback) {\n\t        if (typeof easing == \"function\" && !easing.length) {\n\t            callback = easing;\n\t            easing = mina.linear;\n\t        }\n\t        this.attr = attr;\n\t        this.dur = ms;\n\t        easing && (this.easing = easing);\n\t        callback && (this.callback = callback);\n\t    };\n\t    Snap._.Animation = Animation;\n\t    /*\\\n\t     * Snap.animation\n\t     [ method ]\n\t     **\n\t     * Creates an animation object\n\t     **\n\t     - attr (object) attributes of final destination\n\t     - duration (number) duration of the animation, in milliseconds\n\t     - easing (function) #optional one of easing functions of @mina or custom one\n\t     - callback (function) #optional callback function that fires when animation ends\n\t     = (object) animation object\n\t    \\*/\n\t    Snap.animation = function (attr, ms, easing, callback) {\n\t        return new Animation(attr, ms, easing, callback);\n\t    };\n\t    /*\\\n\t     * Element.inAnim\n\t     [ method ]\n\t     **\n\t     * Returns a set of animations that may be able to manipulate the current element\n\t     **\n\t     = (object) in format:\n\t     o {\n\t     o     anim (object) animation object,\n\t     o     mina (object) @mina object,\n\t     o     curStatus (number) 0..1 — status of the animation: 0 — just started, 1 — just finished,\n\t     o     status (function) gets or sets the status of the animation,\n\t     o     stop (function) stops the animation\n\t     o }\n\t    \\*/\n\t    elproto.inAnim = function () {\n\t        var el = this,\n\t            res = [];\n\t        for (var id in el.anims) if (el.anims[has](id)) {\n\t            (function (a) {\n\t                res.push({\n\t                    anim: new Animation(a._attrs, a.dur, a.easing, a._callback),\n\t                    mina: a,\n\t                    curStatus: a.status(),\n\t                    status: function (val) {\n\t                        return a.status(val);\n\t                    },\n\t                    stop: function () {\n\t                        a.stop();\n\t                    }\n\t                });\n\t            }(el.anims[id]));\n\t        }\n\t        return res;\n\t    };\n\t    /*\\\n\t     * Snap.animate\n\t     [ method ]\n\t     **\n\t     * Runs generic animation of one number into another with a caring function\n\t     **\n\t     - from (number|array) number or array of numbers\n\t     - to (number|array) number or array of numbers\n\t     - setter (function) caring function that accepts one number argument\n\t     - duration (number) duration, in milliseconds\n\t     - easing (function) #optional easing function from @mina or custom\n\t     - callback (function) #optional callback function to execute when animation ends\n\t     = (object) animation object in @mina format\n\t     o {\n\t     o     id (string) animation id, consider it read-only,\n\t     o     duration (function) gets or sets the duration of the animation,\n\t     o     easing (function) easing,\n\t     o     speed (function) gets or sets the speed of the animation,\n\t     o     status (function) gets or sets the status of the animation,\n\t     o     stop (function) stops the animation\n\t     o }\n\t     | var rect = Snap().rect(0, 0, 10, 10);\n\t     | Snap.animate(0, 10, function (val) {\n\t     |     rect.attr({\n\t     |         x: val\n\t     |     });\n\t     | }, 1000);\n\t     | // in given context is equivalent to\n\t     | rect.animate({x: 10}, 1000);\n\t    \\*/\n\t    Snap.animate = function (from, to, setter, ms, easing, callback) {\n\t        if (typeof easing == \"function\" && !easing.length) {\n\t            callback = easing;\n\t            easing = mina.linear;\n\t        }\n\t        var now = mina.time(),\n\t            anim = mina(from, to, now, now + ms, mina.time, setter, easing);\n\t        callback && eve.once(\"mina.finish.\" + anim.id, callback);\n\t        return anim;\n\t    };\n\t    /*\\\n\t     * Element.stop\n\t     [ method ]\n\t     **\n\t     * Stops all the animations for the current element\n\t     **\n\t     = (Element) the current element\n\t    \\*/\n\t    elproto.stop = function () {\n\t        var anims = this.inAnim();\n\t        for (var i = 0, ii = anims.length; i < ii; i++) {\n\t            anims[i].stop();\n\t        }\n\t        return this;\n\t    };\n\t    /*\\\n\t     * Element.animate\n\t     [ method ]\n\t     **\n\t     * Animates the given attributes of the element\n\t     **\n\t     - attrs (object) key-value pairs of destination attributes\n\t     - duration (number) duration of the animation in milliseconds\n\t     - easing (function) #optional easing function from @mina or custom\n\t     - callback (function) #optional callback function that executes when the animation ends\n\t     = (Element) the current element\n\t    \\*/\n\t    elproto.animate = function (attrs, ms, easing, callback) {\n\t        if (typeof easing == \"function\" && !easing.length) {\n\t            callback = easing;\n\t            easing = mina.linear;\n\t        }\n\t        if (attrs instanceof Animation) {\n\t            callback = attrs.callback;\n\t            easing = attrs.easing;\n\t            ms = attrs.dur;\n\t            attrs = attrs.attr;\n\t        }\n\t        var fkeys = [], tkeys = [], keys = {}, from, to, f, eq,\n\t            el = this;\n\t        for (var key in attrs) if (attrs[has](key)) {\n\t            if (el.equal) {\n\t                eq = el.equal(key, Str(attrs[key]));\n\t                from = eq.from;\n\t                to = eq.to;\n\t                f = eq.f;\n\t            } else {\n\t                from = +el.attr(key);\n\t                to = +attrs[key];\n\t            }\n\t            var len = is(from, \"array\") ? from.length : 1;\n\t            keys[key] = slice(fkeys.length, fkeys.length + len, f);\n\t            fkeys = fkeys.concat(from);\n\t            tkeys = tkeys.concat(to);\n\t        }\n\t        var now = mina.time(),\n\t            anim = mina(fkeys, tkeys, now, now + ms, mina.time, function (val) {\n\t                var attr = {};\n\t                for (var key in keys) if (keys[has](key)) {\n\t                    attr[key] = keys[key](val);\n\t                }\n\t                el.attr(attr);\n\t            }, easing);\n\t        el.anims[anim.id] = anim;\n\t        anim._attrs = attrs;\n\t        anim._callback = callback;\n\t        eve(\"snap.animcreated.\" + el.id, anim);\n\t        eve.once(\"mina.finish.\" + anim.id, function () {\n\t            eve.off(\"mina.*.\" + anim.id);\n\t            delete el.anims[anim.id];\n\t            callback && callback.call(el);\n\t        });\n\t        eve.once(\"mina.stop.\" + anim.id, function () {\n\t            eve.off(\"mina.*.\" + anim.id);\n\t            delete el.anims[anim.id];\n\t        });\n\t        return el;\n\t    };\n\t});\n\t\n\t// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n\t//\n\t// Licensed under the Apache License, Version 2.0 (the \"License\");\n\t// you may not use this file except in compliance with the License.\n\t// You may obtain a copy of the License at\n\t//\n\t// http://www.apache.org/licenses/LICENSE-2.0\n\t//\n\t// Unless required by applicable law or agreed to in writing, software\n\t// distributed under the License is distributed on an \"AS IS\" BASIS,\n\t// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t// See the License for the specific language governing permissions and\n\t// limitations under the License.\n\tSnap.plugin(function (Snap, Element, Paper, glob) {\n\t    // Colours are from https://www.materialui.co\n\t    var red         = \"#ffebee#ffcdd2#ef9a9a#e57373#ef5350#f44336#e53935#d32f2f#c62828#b71c1c#ff8a80#ff5252#ff1744#d50000\",\n\t        pink        = \"#FCE4EC#F8BBD0#F48FB1#F06292#EC407A#E91E63#D81B60#C2185B#AD1457#880E4F#FF80AB#FF4081#F50057#C51162\",\n\t        purple      = \"#F3E5F5#E1BEE7#CE93D8#BA68C8#AB47BC#9C27B0#8E24AA#7B1FA2#6A1B9A#4A148C#EA80FC#E040FB#D500F9#AA00FF\",\n\t        deeppurple  = \"#EDE7F6#D1C4E9#B39DDB#9575CD#7E57C2#673AB7#5E35B1#512DA8#4527A0#311B92#B388FF#7C4DFF#651FFF#6200EA\",\n\t        indigo      = \"#E8EAF6#C5CAE9#9FA8DA#7986CB#5C6BC0#3F51B5#3949AB#303F9F#283593#1A237E#8C9EFF#536DFE#3D5AFE#304FFE\",\n\t        blue        = \"#E3F2FD#BBDEFB#90CAF9#64B5F6#64B5F6#2196F3#1E88E5#1976D2#1565C0#0D47A1#82B1FF#448AFF#2979FF#2962FF\",\n\t        lightblue   = \"#E1F5FE#B3E5FC#81D4FA#4FC3F7#29B6F6#03A9F4#039BE5#0288D1#0277BD#01579B#80D8FF#40C4FF#00B0FF#0091EA\",\n\t        cyan        = \"#E0F7FA#B2EBF2#80DEEA#4DD0E1#26C6DA#00BCD4#00ACC1#0097A7#00838F#006064#84FFFF#18FFFF#00E5FF#00B8D4\",\n\t        teal        = \"#E0F2F1#B2DFDB#80CBC4#4DB6AC#26A69A#009688#00897B#00796B#00695C#004D40#A7FFEB#64FFDA#1DE9B6#00BFA5\",\n\t        green       = \"#E8F5E9#C8E6C9#A5D6A7#81C784#66BB6A#4CAF50#43A047#388E3C#2E7D32#1B5E20#B9F6CA#69F0AE#00E676#00C853\",\n\t        lightgreen  = \"#F1F8E9#DCEDC8#C5E1A5#AED581#9CCC65#8BC34A#7CB342#689F38#558B2F#33691E#CCFF90#B2FF59#76FF03#64DD17\",\n\t        lime        = \"#F9FBE7#F0F4C3#E6EE9C#DCE775#D4E157#CDDC39#C0CA33#AFB42B#9E9D24#827717#F4FF81#EEFF41#C6FF00#AEEA00\",\n\t        yellow      = \"#FFFDE7#FFF9C4#FFF59D#FFF176#FFEE58#FFEB3B#FDD835#FBC02D#F9A825#F57F17#FFFF8D#FFFF00#FFEA00#FFD600\",\n\t        amber       = \"#FFF8E1#FFECB3#FFE082#FFD54F#FFCA28#FFC107#FFB300#FFA000#FF8F00#FF6F00#FFE57F#FFD740#FFC400#FFAB00\",\n\t        orange      = \"#FFF3E0#FFE0B2#FFCC80#FFB74D#FFA726#FF9800#FB8C00#F57C00#EF6C00#E65100#FFD180#FFAB40#FF9100#FF6D00\",\n\t        deeporange  = \"#FBE9E7#FFCCBC#FFAB91#FF8A65#FF7043#FF5722#F4511E#E64A19#D84315#BF360C#FF9E80#FF6E40#FF3D00#DD2C00\",\n\t        brown       = \"#EFEBE9#D7CCC8#BCAAA4#A1887F#8D6E63#795548#6D4C41#5D4037#4E342E#3E2723\",\n\t        grey        = \"#FAFAFA#F5F5F5#EEEEEE#E0E0E0#BDBDBD#9E9E9E#757575#616161#424242#212121\",\n\t        bluegrey    = \"#ECEFF1#CFD8DC#B0BEC5#90A4AE#78909C#607D8B#546E7A#455A64#37474F#263238\";\n\t    /*\\\n\t     * Snap.mui\n\t     [ property ]\n\t     **\n\t     * Contain Material UI colours.\n\t     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.mui.deeppurple, stroke: Snap.mui.amber[600]});\n\t     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n\t    \\*/\n\t    Snap.mui = {};\n\t    /*\\\n\t     * Snap.flat\n\t     [ property ]\n\t     **\n\t     * Contain Flat UI colours.\n\t     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.flat.carrot, stroke: Snap.flat.wetasphalt});\n\t     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n\t    \\*/\n\t    Snap.flat = {};\n\t    function saveColor(colors) {\n\t        colors = colors.split(/(?=#)/);\n\t        var color = new String(colors[5]);\n\t        color[50] = colors[0];\n\t        color[100] = colors[1];\n\t        color[200] = colors[2];\n\t        color[300] = colors[3];\n\t        color[400] = colors[4];\n\t        color[500] = colors[5];\n\t        color[600] = colors[6];\n\t        color[700] = colors[7];\n\t        color[800] = colors[8];\n\t        color[900] = colors[9];\n\t        if (colors[10]) {\n\t            color.A100 = colors[10];\n\t            color.A200 = colors[11];\n\t            color.A400 = colors[12];\n\t            color.A700 = colors[13];\n\t        }\n\t        return color;\n\t    }\n\t    Snap.mui.red = saveColor(red);\n\t    Snap.mui.pink = saveColor(pink);\n\t    Snap.mui.purple = saveColor(purple);\n\t    Snap.mui.deeppurple = saveColor(deeppurple);\n\t    Snap.mui.indigo = saveColor(indigo);\n\t    Snap.mui.blue = saveColor(blue);\n\t    Snap.mui.lightblue = saveColor(lightblue);\n\t    Snap.mui.cyan = saveColor(cyan);\n\t    Snap.mui.teal = saveColor(teal);\n\t    Snap.mui.green = saveColor(green);\n\t    Snap.mui.lightgreen = saveColor(lightgreen);\n\t    Snap.mui.lime = saveColor(lime);\n\t    Snap.mui.yellow = saveColor(yellow);\n\t    Snap.mui.amber = saveColor(amber);\n\t    Snap.mui.orange = saveColor(orange);\n\t    Snap.mui.deeporange = saveColor(deeporange);\n\t    Snap.mui.brown = saveColor(brown);\n\t    Snap.mui.grey = saveColor(grey);\n\t    Snap.mui.bluegrey = saveColor(bluegrey);\n\t    Snap.flat.turquoise = \"#1abc9c\";\n\t    Snap.flat.greensea = \"#16a085\";\n\t    Snap.flat.sunflower = \"#f1c40f\";\n\t    Snap.flat.orange = \"#f39c12\";\n\t    Snap.flat.emerland = \"#2ecc71\";\n\t    Snap.flat.nephritis = \"#27ae60\";\n\t    Snap.flat.carrot = \"#e67e22\";\n\t    Snap.flat.pumpkin = \"#d35400\";\n\t    Snap.flat.peterriver = \"#3498db\";\n\t    Snap.flat.belizehole = \"#2980b9\";\n\t    Snap.flat.alizarin = \"#e74c3c\";\n\t    Snap.flat.pomegranate = \"#c0392b\";\n\t    Snap.flat.amethyst = \"#9b59b6\";\n\t    Snap.flat.wisteria = \"#8e44ad\";\n\t    Snap.flat.clouds = \"#ecf0f1\";\n\t    Snap.flat.silver = \"#bdc3c7\";\n\t    Snap.flat.wetasphalt = \"#34495e\";\n\t    Snap.flat.midnightblue = \"#2c3e50\";\n\t    Snap.flat.concrete = \"#95a5a6\";\n\t    Snap.flat.asbestos = \"#7f8c8d\";\n\t    /*\\\n\t     * Snap.importMUIColors\n\t     [ method ]\n\t     **\n\t     * Imports Material UI colours into global object.\n\t     | Snap.importMUIColors();\n\t     | Snap().rect(0, 0, 10, 10).attr({fill: deeppurple, stroke: amber[600]});\n\t     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n\t    \\*/\n\t    Snap.importMUIColors = function () {\n\t        for (var color in Snap.mui) {\n\t            if (Snap.mui.hasOwnProperty(color)) {\n\t                window[color] = Snap.mui[color];\n\t            }\n\t        }\n\t    };\n\t});\n\t\n\tmodule.exports = Snap\n\n\n/***/ }),\n\n/***/ 548:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _gatsbyLink = __webpack_require__(45);\n\t\n\tvar _gatsbyLink2 = _interopRequireDefault(_gatsbyLink);\n\t\n\tvar _UserLinks = __webpack_require__(554);\n\t\n\tvar _UserLinks2 = _interopRequireDefault(_UserLinks);\n\t\n\t__webpack_require__(1044);\n\t\n\tvar _mystyle = __webpack_require__(25);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Footer = function (_Component) {\n\t  _inherits(Footer, _Component);\n\t\n\t  function Footer() {\n\t    _classCallCheck(this, Footer);\n\t\n\t    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n\t  }\n\t\n\t  Footer.prototype.render = function render() {\n\t    var config = this.props.config;\n\t    var copyright = config.copyright,\n\t        phone = config.phone;\n\t\n\t    if (!copyright) {\n\t      return null;\n\t    }\n\t    return _react2.default.createElement(\n\t      'footer',\n\t      { className: 'footer' },\n\t      _react2.default.createElement(\n\t        'div',\n\t        { className: 'footer-inner' },\n\t        _react2.default.createElement(\n\t          'div',\n\t          { className: 'extra-zone' },\n\t          _react2.default.createElement(\n\t            'div',\n\t            { className: 'inner' },\n\t            _react2.default.createElement(\n\t              _mystyle.Container,\n\t              null,\n\t              _react2.default.createElement(\n\t                'div',\n\t                { className: 'footer-widgets row' },\n\t                _react2.default.createElement(\n\t                  'div',\n\t                  { className: 'col-xs-12 col-md-3 footer-widget-1' },\n\t                  _react2.default.createElement(\n\t                    'div',\n\t                    { className: 'widget widget-container' },\n\t                    _react2.default.createElement(\n\t                      'div',\n\t                      { className: 'widget-body' },\n\t                      _react2.default.createElement(\n\t                        'div',\n\t                        { className: 'textwidget' },\n\t                        _react2.default.createElement(\n\t                          'div',\n\t                          { className: 'group-icons' },\n\t                          _react2.default.createElement(\n\t                            'p',\n\t                            { className: 'home-icon' },\n\t                            _react2.default.createElement(\n\t                              'span',\n\t                              { className: 'pr-10' },\n\t                              _react2.default.createElement('i', { className: 'ion-android-pin' })\n\t                            ),\n\t                            config.address\n\t                          ),\n\t                          _react2.default.createElement(\n\t                            'p',\n\t                            { className: 'phone-icon' },\n\t                            _react2.default.createElement(\n\t                              'span',\n\t                              { className: 'pr-10' },\n\t                              _react2.default.createElement('i', { className: 'ion-android-call' })\n\t                            ),\n\t                            _react2.default.createElement(\n\t                              'a',\n\t                              { href: 'tel:0988 990 168' },\n\t                              phone\n\t                            )\n\t                          ),\n\t                          _react2.default.createElement(\n\t                            'p',\n\t                            { className: 'email-icon' },\n\t                            _react2.default.createElement(\n\t                              'span',\n\t                              { className: 'pr-10' },\n\t                              _react2.default.createElement('i', { className: 'ion-android-mail' })\n\t                            ),\n\t                            _react2.default.createElement(\n\t                              'a',\n\t                              { href: 'mailto:' + config.email, target: '_blank' },\n\t                              config.email\n\t                            )\n\t                          )\n\t                        )\n\t                      )\n\t                    )\n\t                  )\n\t                ),\n\t                _react2.default.createElement(\n\t                  'div',\n\t                  { className: 'col-xs-12 col-md-3 footer-widget-2' },\n\t                  _react2.default.createElement(\n\t                    'div',\n\t                    { className: 'widget widget-container' },\n\t                    _react2.default.createElement(\n\t                      'div',\n\t                      { className: 'widget-body' },\n\t                      _react2.default.createElement(\n\t                        'div',\n\t                        { className: 'menu' },\n\t                        _react2.default.createElement(\n\t                          'ul',\n\t                          { className: 'menu' },\n\t                          _react2.default.createElement(\n\t                            'li',\n\t                            { className: 'menu-item' },\n\t                            _react2.default.createElement(\n\t                              _gatsbyLink2.default,\n\t                              { to: '/support-and-faq' },\n\t                              'H\\u01B0\\u1EDBng d\\u1EABn mua h\\xE0ng'\n\t                            )\n\t                          ),\n\t                          _react2.default.createElement(\n\t                            'li',\n\t                            { className: 'menu-item' },\n\t                            _react2.default.createElement(\n\t                              _gatsbyLink2.default,\n\t                              { to: '/support-and-faq' },\n\t                              'H\\xECnh th\\u1EE9c thanh to\\xE1n'\n\t                            )\n\t                          )\n\t                        )\n\t                      )\n\t                    )\n\t                  )\n\t                ),\n\t                _react2.default.createElement(\n\t                  'div',\n\t                  { className: 'col-xs-12 col-md-3 footer-widget-3' },\n\t                  _react2.default.createElement(\n\t                    'div',\n\t                    { className: 'widget widget-container' },\n\t                    _react2.default.createElement(\n\t                      'div',\n\t                      { className: 'widget-body' },\n\t                      _react2.default.createElement(\n\t                        'div',\n\t                        { className: 'menu' },\n\t                        _react2.default.createElement(\n\t                          'dl',\n\t                          null,\n\t                          _react2.default.createElement(\n\t                            'dt',\n\t                            null,\n\t                            'Vietcombank'\n\t                          ),\n\t                          _react2.default.createElement(\n\t                            'dd',\n\t                            null,\n\t                            'L\\u01B0u B\\xECnh An'\n\t                          ),\n\t                          _react2.default.createElement(\n\t                            'dd',\n\t                            null,\n\t                            '0181-003-023-502'\n\t                          )\n\t                        ),\n\t                        _react2.default.createElement(\n\t                          'dl',\n\t                          null,\n\t                          _react2.default.createElement(\n\t                            'dt',\n\t                            null,\n\t                            'ACB'\n\t                          ),\n\t                          _react2.default.createElement(\n\t                            'dd',\n\t                            null,\n\t                            'Tr\\u01B0\\u01A1ng Th\\u1ECB T\\u1ED1 Mi'\n\t                          ),\n\t                          _react2.default.createElement(\n\t                            'dd',\n\t                            null,\n\t                            '0181-003-023-502'\n\t                          )\n\t                        )\n\t                      )\n\t                    )\n\t                  )\n\t                ),\n\t                _react2.default.createElement(\n\t                  'div',\n\t                  { className: 'col-xs-12 col-md-3 footer-widget-4' },\n\t                  _react2.default.createElement(\n\t                    'div',\n\t                    { className: 'widget widget-container' },\n\t                    _react2.default.createElement(\n\t                      'div',\n\t                      { className: 'widget-body' },\n\t                      _react2.default.createElement(\n\t                        'div',\n\t                        { className: 'menu' },\n\t                        _react2.default.createElement(_UserLinks2.default, { config: config, labeled: true })\n\t                      )\n\t                    )\n\t                  )\n\t                )\n\t              )\n\t            )\n\t          )\n\t        ),\n\t        _react2.default.createElement(\n\t          _mystyle.Container,\n\t          null,\n\t          _react2.default.createElement(\n\t            _mystyle.Row,\n\t            null,\n\t            _react2.default.createElement(\n\t              _mystyle.Col,\n\t              { sm: 6, xs: 12 },\n\t              _react2.default.createElement(\n\t                'div',\n\t                { className: 'copyright' },\n\t                copyright\n\t              )\n\t            ),\n\t            _react2.default.createElement(\n\t              _mystyle.Col,\n\t              { sm: 6, xs: 12 },\n\t              _react2.default.createElement(\n\t                'div',\n\t                { className: 'credit' },\n\t                _react2.default.createElement(\n\t                  'ul',\n\t                  { className: 'footer-nav' },\n\t                  _react2.default.createElement(\n\t                    'li',\n\t                    null,\n\t                    _react2.default.createElement(\n\t                      _gatsbyLink2.default,\n\t                      { to: '/support-and-faq' },\n\t                      'C\\xE2u h\\u1ECFi th\\u01B0\\u1EDDng g\\u1EB7p'\n\t                    )\n\t                  )\n\t                )\n\t              )\n\t            )\n\t          )\n\t        )\n\t      )\n\t    );\n\t  };\n\t\n\t  return Footer;\n\t}(_react.Component);\n\t\n\texports.default = Footer;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1044:\n/***/ (function(module, exports) {\n\n\t// empty (null-loader)\n\n/***/ }),\n\n/***/ 549:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _Footer = __webpack_require__(548);\n\t\n\tvar _Footer2 = _interopRequireDefault(_Footer);\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n\texports.default = _Footer2.default;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 832:\n/***/ (function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 554:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\t__webpack_require__(832);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar UserLinks = function (_Component) {\n\t  _inherits(UserLinks, _Component);\n\t\n\t  function UserLinks() {\n\t    _classCallCheck(this, UserLinks);\n\t\n\t    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n\t  }\n\t\n\t  UserLinks.prototype.getLinkElements = function getLinkElements() {\n\t    var userLinks = this.props.config.userLinks;\n\t    var labeled = this.props.labeled;\n\t\n\t    return userLinks.map(function (link) {\n\t      return _react2.default.createElement(\n\t        'p',\n\t        { key: link.label },\n\t        _react2.default.createElement(\n\t          'a',\n\t          { target: '_blank', href: link.url, className: 'btn ' + link.label },\n\t          link.iconClassName !== '' && _react2.default.createElement('i', { className: link.iconClassName + ' pr-2' }),\n\t          labeled ? link.label : ''\n\t        )\n\t      );\n\t    });\n\t  };\n\t\n\t  UserLinks.prototype.render = function render() {\n\t    var userLinks = this.props.config.userLinks;\n\t\n\t    if (!userLinks) {\n\t      return null;\n\t    }\n\t    return _react2.default.createElement(\n\t      'div',\n\t      { className: 'user-links' },\n\t      this.getLinkElements()\n\t    );\n\t  };\n\t\n\t  return UserLinks;\n\t}(_react.Component);\n\t\n\texports.default = UserLinks;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 637:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactHelmet = __webpack_require__(46);\n\t\n\tvar _reactHelmet2 = _interopRequireDefault(_reactHelmet);\n\t\n\tvar _gatsbyLink = __webpack_require__(45);\n\t\n\tvar _gatsbyLink2 = _interopRequireDefault(_gatsbyLink);\n\t\n\tvar _reactBurgerMenu = __webpack_require__(1190);\n\t\n\tvar _antd = __webpack_require__(91);\n\t\n\t__webpack_require__(829);\n\t\n\tvar _SiteConfig = __webpack_require__(34);\n\t\n\tvar _SiteConfig2 = _interopRequireDefault(_SiteConfig);\n\t\n\tvar _data = __webpack_require__(52);\n\t\n\t__webpack_require__(1047);\n\t\n\t__webpack_require__(1048);\n\t\n\t__webpack_require__(1049);\n\t\n\tvar _mystyle = __webpack_require__(25);\n\t\n\tvar _Footer = __webpack_require__(549);\n\t\n\tvar _Footer2 = _interopRequireDefault(_Footer);\n\t\n\tvar _logoShopMatTroiNho = __webpack_require__(1297);\n\t\n\tvar _logoShopMatTroiNho2 = _interopRequireDefault(_logoShopMatTroiNho);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar MainLayout = function (_React$Component) {\n\t  _inherits(MainLayout, _React$Component);\n\t\n\t  function MainLayout(props) {\n\t    _classCallCheck(this, MainLayout);\n\t\n\t    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));\n\t\n\t    _initialiseProps.call(_this);\n\t\n\t    _this.state = {\n\t      showBugger: false\n\t    };\n\t    return _this;\n\t  }\n\t\n\t  MainLayout.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n\t    this.setState({ showBugger: false });\n\t  };\n\t\n\t  MainLayout.prototype.getLocalTitle = function getLocalTitle() {\n\t    function capitalize(string) {\n\t      return string.charAt(0).toUpperCase() + string.slice(1);\n\t    }\n\t    var pathPrefix = _SiteConfig2.default.pathPrefix ? _SiteConfig2.default.pathPrefix : '/';\n\t    var currentPath = this.props.location.pathname.replace(pathPrefix, '').replace('/', '');\n\t    var title = '';\n\t    if (currentPath === '') {\n\t      title = 'Home';\n\t    } else if (currentPath === 'tags/') {\n\t      title = 'Tags';\n\t    } else if (currentPath === 'categories/') {\n\t      title = 'Categories';\n\t    } else if (currentPath === 'about/') {\n\t      title = 'About';\n\t    } else if (currentPath.includes('posts')) {\n\t      title = 'Article';\n\t    } else if (currentPath.includes('tags/')) {\n\t      var tag = currentPath.replace('tags/', '').replace('/', '').replace('-', ' ');\n\t      title = 'Tagged in ' + capitalize(tag);\n\t    } else if (currentPath.includes('categories/')) {\n\t      var category = currentPath.replace('categories/', '').replace('/', '').replace('-', ' ');\n\t      title = '' + capitalize(category);\n\t    }\n\t    return title;\n\t  };\n\t\n\t  MainLayout.prototype.render = function render() {\n\t    var _this2 = this;\n\t\n\t    var children = this.props.children;\n\t\n\t    var pathArray = this.props.location.pathname;\n\t    var selectedKey = pathArray.split('/').slice(-1);\n\t    return _react2.default.createElement(\n\t      'div',\n\t      { className: 'mystyle' },\n\t      _react2.default.createElement(\n\t        _reactHelmet2.default,\n\t        null,\n\t        _react2.default.createElement(\n\t          'title',\n\t          null,\n\t          _SiteConfig2.default.siteTitle + ' |  ' + this.getLocalTitle()\n\t        ),\n\t        _react2.default.createElement('meta', { name: 'description', content: _SiteConfig2.default.siteDescription })\n\t      ),\n\t      _react2.default.createElement(\n\t        'div',\n\t        { id: 'outer-container' },\n\t        _react2.default.createElement(\n\t          _mystyle.Button,\n\t          { className: 'bugger-menu-control', primary: true, onClick: this.toggleMenu },\n\t          _react2.default.createElement('i', { className: 'ion-android-menu' })\n\t        ),\n\t        _react2.default.createElement(\n\t          _reactBurgerMenu.push,\n\t          { pageWrapId: 'page-wrap', outerContainerId: 'outer-container', isOpen: this.state.showBugger },\n\t          _data.PRIMARY_NAVIGATION.map(function (menu, index) {\n\t            var hasChildrens = !!(menu.childrens !== undefined && menu.childrens.length !== 0);\n\t            return _react2.default.createElement(\n\t              'ul',\n\t              { className: 'menu-mobile list-group list-group-flush', key: index },\n\t              _react2.default.createElement(\n\t                'li',\n\t                { className: 'list-group-item list-group-item-primary' },\n\t                _react2.default.createElement(\n\t                  'span',\n\t                  { style: { cursor: 'pointer' }, onClick: function onClick() {\n\t                      return _this2.callChangeLink(menu.href);\n\t                    } },\n\t                  menu.name\n\t                )\n\t              ),\n\t              hasChildrens ? _this2.renderChildrenMenu(menu.childrens) : null\n\t            );\n\t          })\n\t        ),\n\t        _react2.default.createElement(\n\t          'main',\n\t          { id: 'page-wrap' },\n\t          _react2.default.createElement(\n\t            'div',\n\t            { id: 'header' },\n\t            _react2.default.createElement(\n\t              'div',\n\t              { className: 'header' },\n\t              _react2.default.createElement(\n\t                'div',\n\t                { className: 'header-inner' },\n\t                _react2.default.createElement(\n\t                  _mystyle.Container,\n\t                  { fluid: true },\n\t                  _react2.default.createElement(\n\t                    _mystyle.Row,\n\t                    null,\n\t                    _react2.default.createElement(\n\t                      _mystyle.Col,\n\t                      null,\n\t                      _react2.default.createElement(\n\t                        'div',\n\t                        { className: 'd-flex' },\n\t                        _react2.default.createElement(\n\t                          _gatsbyLink2.default,\n\t                          { to: '/', className: 'navbar-brand' },\n\t                          _react2.default.createElement('img', { src: _logoShopMatTroiNho2.default, alt: _SiteConfig2.default.siteTitle })\n\t                        ),\n\t                        _react2.default.createElement(_mystyle.Nav, { selectedKey: selectedKey[0], items: _data.PRIMARY_NAVIGATION, className: 'primary-nav' }),\n\t                        _react2.default.createElement(\n\t                          'div',\n\t                          { className: 'hightlight-features' },\n\t                          _react2.default.createElement(\n\t                            'div',\n\t                            { className: 'highlight-item' },\n\t                            _react2.default.createElement(\n\t                              'div',\n\t                              { className: 'img-holder' },\n\t                              _react2.default.createElement('i', { className: 'ion-bag' })\n\t                            ),\n\t                            _react2.default.createElement(\n\t                              'div',\n\t                              { className: 'desc-block' },\n\t                              _react2.default.createElement(\n\t                                _antd.Popover,\n\t                                { content: this.contentGiaoHang(), title: 'Giao h\\xE0ng t\\u1EADn n\\u01A1i', trigger: 'hover' },\n\t                                _react2.default.createElement(\n\t                                  'div',\n\t                                  { className: '' },\n\t                                  'Giao h\\xE0ng to\\xE0n qu\\u1ED1c'\n\t                                )\n\t                              )\n\t                            )\n\t                          ),\n\t                          _react2.default.createElement(\n\t                            'div',\n\t                            { className: 'highlight-item' },\n\t                            _react2.default.createElement(\n\t                              'div',\n\t                              { className: 'img-holder' },\n\t                              _react2.default.createElement('i', { className: 'ion-cash' })\n\t                            ),\n\t                            _react2.default.createElement(\n\t                              'div',\n\t                              { className: 'desc-block' },\n\t                              _react2.default.createElement(\n\t                                _antd.Popover,\n\t                                { content: this.contentThanhToan(), title: '\\u0110a d\\u1EA1ng h\\xECnh th\\u1EE9c thanh to\\xE1n', trigger: 'hover' },\n\t                                _react2.default.createElement(\n\t                                  'div',\n\t                                  { className: '' },\n\t                                  'Thanh to\\xE1n khi nh\\u1EADn h\\xE0ng'\n\t                                )\n\t                              )\n\t                            )\n\t                          ),\n\t                          _react2.default.createElement(\n\t                            'div',\n\t                            { className: 'highlight-item' },\n\t                            _react2.default.createElement(\n\t                              'div',\n\t                              { className: 'img-holder' },\n\t                              _react2.default.createElement('i', { className: 'ion-happy-outline' })\n\t                            ),\n\t                            _react2.default.createElement(\n\t                              'div',\n\t                              { className: 'desc-block' },\n\t                              _react2.default.createElement(\n\t                                _antd.Popover,\n\t                                { content: this.contentUuDai(), title: '\\u01AFu \\u0111\\xE3i', trigger: 'hover' },\n\t                                _react2.default.createElement(\n\t                                  'div',\n\t                                  { className: '' },\n\t                                  '\\u01AFu \\u0111\\xE3i kh\\xE1ch h\\xE0ng th\\xE2n thi\\u1EBFt'\n\t                                )\n\t                              )\n\t                            )\n\t                          ),\n\t                          _react2.default.createElement(\n\t                            'div',\n\t                            { className: 'highlight-item' },\n\t                            _react2.default.createElement(\n\t                              'div',\n\t                              { className: 'img-holder' },\n\t                              _react2.default.createElement('i', { className: 'ion-cube' })\n\t                            ),\n\t                            _react2.default.createElement(\n\t                              'div',\n\t                              { className: 'desc-block' },\n\t                              _react2.default.createElement(\n\t                                _antd.Popover,\n\t                                { content: this.contentDoiTra(), title: 'Ch\\xEDnh s\\xE1ch \\u0111\\u1ED5i tr\\u1EA3', trigger: 'hover' },\n\t                                _react2.default.createElement(\n\t                                  'div',\n\t                                  { className: '' },\n\t                                  '\\u0110\\u1ED5i tr\\u1EA3 h\\xE0ng l\\u1ED7i'\n\t                                )\n\t                              )\n\t                            )\n\t                          )\n\t                        )\n\t                      )\n\t                    ),\n\t                    _react2.default.createElement(\n\t                      _mystyle.Col,\n\t                      { className: 'ml-a' },\n\t                      _react2.default.createElement(\n\t                        'div',\n\t                        { className: 'top-info-block' },\n\t                        _react2.default.createElement(\n\t                          'a',\n\t                          { href: _SiteConfig2.default.facebook, target: '_blank', className: 'link-facebook' },\n\t                          _react2.default.createElement('i', { className: 'ion-social-facebook' })\n\t                        ),\n\t                        _react2.default.createElement(\n\t                          'div',\n\t                          { className: 'hotline-badge hidden-xs' },\n\t                          _react2.default.createElement('i', { className: 'ion-ios-telephone' }),\n\t                          _react2.default.createElement(\n\t                            'div',\n\t                            { className: 'hotline-number' },\n\t                            _react2.default.createElement(\n\t                              'a',\n\t                              { href: 'tel:' + _SiteConfig2.default.phone },\n\t                              _SiteConfig2.default.phone\n\t                            )\n\t                          )\n\t                        )\n\t                      )\n\t                    )\n\t                  )\n\t                )\n\t              )\n\t            )\n\t          ),\n\t          _react2.default.createElement(\n\t            _mystyle.Master,\n\t            null,\n\t            children()\n\t          ),\n\t          _react2.default.createElement(_Footer2.default, { config: _SiteConfig2.default }),\n\t          _react2.default.createElement(_antd.BackTop, null)\n\t        )\n\t      )\n\t    );\n\t  };\n\t\n\t  return MainLayout;\n\t}(_react2.default.Component);\n\t\n\tvar _initialiseProps = function _initialiseProps() {\n\t  var _this3 = this;\n\t\n\t  this.contentGiaoHang = function () {\n\t    return _react2.default.createElement(\n\t      'div',\n\t      null,\n\t      _react2.default.createElement(\n\t        'ul',\n\t        { className: 'pl-30' },\n\t        _react2.default.createElement(\n\t          'li',\n\t          null,\n\t          'Giao h\\xE0ng ti\\u1EBFt ki\\u1EC7m'\n\t        ),\n\t        _react2.default.createElement(\n\t          'li',\n\t          null,\n\t          'Giao h\\xE0ng qua Viettel Post'\n\t        ),\n\t        _react2.default.createElement(\n\t          'li',\n\t          null,\n\t          'Giao h\\xE0ng nhanh trong ng\\xE0y'\n\t        )\n\t      )\n\t    );\n\t  };\n\t\n\t  this.contentThanhToan = function () {\n\t    return _react2.default.createElement(\n\t      'div',\n\t      null,\n\t      _react2.default.createElement(\n\t        'p',\n\t        null,\n\t        'Thanh to\\xE1n sau khi nh\\u1EADn v\\xE0 ki\\u1EC3m tra h\\xE0ng, \\xE1p d\\u1EE5ng cho c\\xE1c qu\\u1EADn \\u1EDF TP.HCM'\n\t      ),\n\t      _react2.default.createElement(\n\t        'p',\n\t        null,\n\t        'Chuy\\u1EC3n kho\\u1EA3n 50% h\\xF3a \\u0111\\u01A1n cho c\\xE1c t\\u1EC9nh kh\\xE1c.'\n\t      )\n\t    );\n\t  };\n\t\n\t  this.contentUuDai = function () {\n\t    return _react2.default.createElement(\n\t      'div',\n\t      null,\n\t      _react2.default.createElement(\n\t        'p',\n\t        null,\n\t        'Gi\\u1EA3m theo % tr\\xEAn t\\u1EEBng \\u0111\\u01A1n h\\xE0ng cho kh\\xE1ch h\\xE0ng th\\xE2n thi\\u1EBFt'\n\t      )\n\t    );\n\t  };\n\t\n\t  this.contentDoiTra = function () {\n\t    return _react2.default.createElement(\n\t      'div',\n\t      null,\n\t      _react2.default.createElement(\n\t        'ul',\n\t        { className: 'pl-30' },\n\t        _react2.default.createElement(\n\t          'li',\n\t          null,\n\t          'S\\u1EA3n ph\\u1EA9m b\\u1ECB l\\u1ED7i do s\\u1EA3n xu\\u1EA5t'\n\t        ),\n\t        _react2.default.createElement(\n\t          'li',\n\t          null,\n\t          'Kh\\xF4ng v\\u1EEBa size, \\u0111\\u1ED5i size mi\\u1EC5n ph\\xED'\n\t        )\n\t      )\n\t    );\n\t  };\n\t\n\t  this.renderChildrenMenu = function (props) {\n\t    return _react2.default.createElement(\n\t      'ul',\n\t      { className: 'list-group list-group-flush' },\n\t      props.map(function (item, index) {\n\t        return _react2.default.createElement(\n\t          'li',\n\t          { key: index, className: 'list-group-item' },\n\t          _react2.default.createElement(\n\t            'span',\n\t            { style: { cursor: 'pointer' }, onClick: function onClick() {\n\t                return _this3.callChangeLink(item.href);\n\t              } },\n\t            item.name\n\t          )\n\t        );\n\t      })\n\t    );\n\t  };\n\t\n\t  this.callChangeLink = function (href) {\n\t    (0, _gatsbyLink.navigateTo)('' + _SiteConfig2.default.pathPrefix + href);\n\t    _this3.setState({ showBugger: false });\n\t  };\n\t\n\t  this.toggleMenu = function (e) {\n\t    _this3.setState({ showBugger: true });\n\t  };\n\t};\n\t\n\texports.default = MainLayout;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1297:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__.p + \"static/logo-shop-mat-troi-nho.98819bbb.png\";\n\n/***/ }),\n\n/***/ 1047:\n/***/ (function(module, exports) {\n\n\t// empty (null-loader)\n\n/***/ }),\n\n/***/ 1048:\n/***/ (function(module, exports) {\n\n\t// empty (null-loader)\n\n/***/ }),\n\n/***/ 1049:\n/***/ (function(module, exports) {\n\n\t// empty (null-loader)\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-layouts-index-jsx-b376ec09a966f639f478.js","module.exports = {\"layoutContext\":{}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/layout-index.json\n// module id = 216\n// module chunks = 60335399758886 79611799117203","\n  import React from \"react\"\n  import Component from \"E:/anluu/sunshine/src/layouts/index.jsx\"\n  import data from \"E:\\\\anluu\\\\sunshine\\\\.cache\\\\json\\\\layout-index.json\"\n\n  export default (props) => <Component {...props} {...data} />\n  \n\n\n// WEBPACK FOOTER //\n// ./.cache/layouts/index.js","export const PRIMARY_NAVIGATION = [\n  {\n    key: 'be-trai',\n    slug: 'be-trai',\n    name: 'Bé Trai',\n    href: '/categories/be-trai',\n    isActive: false,\n    icon: '',\n    childrens: [\n      {\n        key: 'do-bo',\n        name: 'Đồ Bộ',\n        icon: '',\n        href: '/tags/do-bo?categories=be-trai',\n      },\n      {\n        key: 'ao',\n        name: 'Áo',\n        icon: '',\n        href: '/tags/ao?categories=be-trai',\n      },\n      {\n        key: 'ao-khoac',\n        name: 'Áo khoác',\n        icon: '',\n        href: '/tags/ao-khoac?categories=be-trai',\n      },\n      {\n        key: 'ao-lien-quan',\n        name: 'Áo liền quần',\n        icon: '',\n        href: '/tags/ao-lien-quan?categories=be-trai',\n      },\n      {\n        key: 'quan',\n        name: 'Quần',\n        icon: '',\n        href: '/tags/quan?categories=be-trai',\n      },\n      {\n        key: 'do-ngu',\n        name: 'Đồ ngủ',\n        icon: '',\n        href: '/tags/do-ngu?categories=be-trai',\n      },\n    ]\n  },\n  {\n    key: 'be-gai',\n    slug: 'be-gai',\n    name: 'Bé Gái',\n    href: '/categories/be-gai',\n    isActive: false,\n    icon: '',\n    childrens: [\n      {\n        key: 'do-bo',\n        name: 'Đồ bộ',\n        icon: '',\n        href: '/tags/do-bo?categories=be-gai',\n      },\n      {\n        key: 'ao',\n        name: 'Áo',\n        icon: '',\n        href: '/tags/ao?categories=be-gai',\n      },\n      {\n        key: 'ao-khoac',\n        name: 'Áo khoác',\n        icon: '',\n        href: '/tags/ao-khoac?categories=be-gai',\n      },\n      {\n        key: 'ao-lien-quan',\n        name: 'Áo liền quần',\n        icon: '',\n        href: '/tags/ao-lien-quan?categories=be-gai',\n      },\n      {\n        key: 'quan',\n        name: 'Quần',\n        icon: '',\n        href: '/tags/quan?categories=be-gai',\n      },\n      {\n        key: 'dam-vay',\n        name: 'Đầm váy',\n        icon: '',\n        href: '/tags/dam-vay?categories=be-gai',\n      },\n      {\n        key: 'do-ngu',\n        name: 'Đồ ngủ',\n        icon: '',\n        href: '/tags/do-ngu?categories=be-gai',\n      },\n    ]\n  },\n]\n\nexport const RIGHT_NAV = [\n  {\n    key: 'khuyen-mai',\n    slug: 'khuyen-mai',\n    name: 'Khuyến Mãi',\n    href: '/categories/khuyen-mai',\n    isActive: false,\n    icon: ''\n  },\n  {\n    key: 'lien-he',\n    slug: 'lien-he',\n    name: 'Liên hệ',\n    href: '/lien-he',\n    isActive: false,\n    icon: ''\n  },\n]\n\n\n\n// WEBPACK FOOTER //\n// ./data/data.js","// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// ┌────────────────────────────────────────────────────────────┐ \\\\\n// │ Eve 0.5.4 - JavaScript Events Library                      │ \\\\\n// ├────────────────────────────────────────────────────────────┤ \\\\\n// │ Author Dmitry Baranovskiy (http://dmitry.baranovskiy.com/) │ \\\\\n// └────────────────────────────────────────────────────────────┘ \\\\\n\n(function (glob) {\n    var version = \"0.5.4\",\n        has = \"hasOwnProperty\",\n        separator = /[\\.\\/]/,\n        comaseparator = /\\s*,\\s*/,\n        wildcard = \"*\",\n        numsort = function (a, b) {\n            return a - b;\n        },\n        current_event,\n        stop,\n        events = {n: {}},\n        firstDefined = function () {\n            for (var i = 0, ii = this.length; i < ii; i++) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n        lastDefined = function () {\n            var i = this.length;\n            while (--i) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n        objtos = Object.prototype.toString,\n        Str = String,\n        isArray = Array.isArray || function (ar) {\n            return ar instanceof Array || objtos.call(ar) == \"[object Array]\";\n        },\n    /*\\\n     * eve\n     [ method ]\n\n     * Fires event with given `name`, given scope and other parameters.\n\n     - name (string) name of the *event*, dot (`.`) or slash (`/`) separated\n     - scope (object) context for the event handlers\n     - varargs (...) the rest of arguments will be sent to event handlers\n\n     = (object) array of returned values from the listeners. Array has two methods `.firstDefined()` and `.lastDefined()` to get first or last not `undefined` value.\n    \\*/\n        eve = function (name, scope) {\n            var oldstop = stop,\n                args = Array.prototype.slice.call(arguments, 2),\n                listeners = eve.listeners(name),\n                z = 0,\n                l,\n                indexed = [],\n                queue = {},\n                out = [],\n                ce = current_event;\n            out.firstDefined = firstDefined;\n            out.lastDefined = lastDefined;\n            current_event = name;\n            stop = 0;\n            for (var i = 0, ii = listeners.length; i < ii; i++) if (\"zIndex\" in listeners[i]) {\n                indexed.push(listeners[i].zIndex);\n                if (listeners[i].zIndex < 0) {\n                    queue[listeners[i].zIndex] = listeners[i];\n                }\n            }\n            indexed.sort(numsort);\n            while (indexed[z] < 0) {\n                l = queue[indexed[z++]];\n                out.push(l.apply(scope, args));\n                if (stop) {\n                    stop = oldstop;\n                    return out;\n                }\n            }\n            for (i = 0; i < ii; i++) {\n                l = listeners[i];\n                if (\"zIndex\" in l) {\n                    if (l.zIndex == indexed[z]) {\n                        out.push(l.apply(scope, args));\n                        if (stop) {\n                            break;\n                        }\n                        do {\n                            z++;\n                            l = queue[indexed[z]];\n                            l && out.push(l.apply(scope, args));\n                            if (stop) {\n                                break;\n                            }\n                        } while (l)\n                    } else {\n                        queue[l.zIndex] = l;\n                    }\n                } else {\n                    out.push(l.apply(scope, args));\n                    if (stop) {\n                        break;\n                    }\n                }\n            }\n            stop = oldstop;\n            current_event = ce;\n            return out;\n        };\n    // Undocumented. Debug only.\n    eve._events = events;\n    /*\\\n     * eve.listeners\n     [ method ]\n\n     * Internal method which gives you array of all event handlers that will be triggered by the given `name`.\n\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated\n\n     = (array) array of event handlers\n    \\*/\n    eve.listeners = function (name) {\n        var names = isArray(name) ? name : name.split(separator),\n            e = events,\n            item,\n            items,\n            k,\n            i,\n            ii,\n            j,\n            jj,\n            nes,\n            es = [e],\n            out = [];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            nes = [];\n            for (j = 0, jj = es.length; j < jj; j++) {\n                e = es[j].n;\n                items = [e[names[i]], e[wildcard]];\n                k = 2;\n                while (k--) {\n                    item = items[k];\n                    if (item) {\n                        nes.push(item);\n                        out = out.concat(item.f || []);\n                    }\n                }\n            }\n            es = nes;\n        }\n        return out;\n    };\n    /*\\\n     * eve.separator\n     [ method ]\n\n     * If for some reasons you don’t like default separators (`.` or `/`) you can specify yours\n     * here. Be aware that if you pass a string longer than one character it will be treated as\n     * a list of characters.\n\n     - separator (string) new separator. Empty string resets to default: `.` or `/`.\n    \\*/\n    eve.separator = function (sep) {\n        if (sep) {\n            sep = Str(sep).replace(/(?=[\\.\\^\\]\\[\\-])/g, \"\\\\\");\n            sep = \"[\" + sep + \"]\";\n            separator = new RegExp(sep);\n        } else {\n            separator = /[\\.\\/]/;\n        }\n    };\n    /*\\\n     * eve.on\n     [ method ]\n     **\n     * Binds given event handler with a given name. You can use wildcards “`*`” for the names:\n     | eve.on(\"*.under.*\", f);\n     | eve(\"mouse.under.floor\"); // triggers f\n     * Use @eve to trigger the listener.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     - name (array) if you don’t want to use separators, you can use array of strings\n     - f (function) event handler function\n     **\n     = (function) returned function accepts a single numeric parameter that represents z-index of the handler. It is an optional feature and only used when you need to ensure that some subset of handlers will be invoked in a given order, despite of the order of assignment.\n     > Example:\n     | eve.on(\"mouse\", eatIt)(2);\n     | eve.on(\"mouse\", scream);\n     | eve.on(\"mouse\", catchIt)(1);\n     * This will ensure that `catchIt` function will be called before `eatIt`.\n     *\n     * If you want to put your handler before non-indexed handlers, specify a negative value.\n     * Note: I assume most of the time you don’t need to worry about z-index, but it’s nice to have this feature “just in case”.\n    \\*/\n    eve.on = function (name, f) {\n        if (typeof f != \"function\") {\n            return function () {};\n        }\n        var names = isArray(name) ? isArray(name[0]) ? name : [name] : Str(name).split(comaseparator);\n        for (var i = 0, ii = names.length; i < ii; i++) {\n            (function (name) {\n                var names = isArray(name) ? name : Str(name).split(separator),\n                    e = events,\n                    exist;\n                for (var i = 0, ii = names.length; i < ii; i++) {\n                    e = e.n;\n                    e = e.hasOwnProperty(names[i]) && e[names[i]] || (e[names[i]] = {n: {}});\n                }\n                e.f = e.f || [];\n                for (i = 0, ii = e.f.length; i < ii; i++) if (e.f[i] == f) {\n                    exist = true;\n                    break;\n                }\n                !exist && e.f.push(f);\n            }(names[i]));\n        }\n        return function (zIndex) {\n            if (+zIndex == +zIndex) {\n                f.zIndex = +zIndex;\n            }\n        };\n    };\n    /*\\\n     * eve.f\n     [ method ]\n     **\n     * Returns function that will fire given event with optional arguments.\n     * Arguments that will be passed to the result function will be also\n     * concated to the list of final arguments.\n     | el.onclick = eve.f(\"click\", 1, 2);\n     | eve.on(\"click\", function (a, b, c) {\n     |     console.log(a, b, c); // 1, 2, [event object]\n     | });\n     - event (string) event name\n     - varargs (…) and any other arguments\n     = (function) possible event handler function\n    \\*/\n    eve.f = function (event) {\n        var attrs = [].slice.call(arguments, 1);\n        return function () {\n            eve.apply(null, [event, null].concat(attrs).concat([].slice.call(arguments, 0)));\n        };\n    };\n    /*\\\n     * eve.stop\n     [ method ]\n     **\n     * Is used inside an event handler to stop the event, preventing any subsequent listeners from firing.\n    \\*/\n    eve.stop = function () {\n        stop = 1;\n    };\n    /*\\\n     * eve.nt\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     - subname (string) #optional subname of the event\n     **\n     = (string) name of the event, if `subname` is not specified\n     * or\n     = (boolean) `true`, if current event’s name contains `subname`\n    \\*/\n    eve.nt = function (subname) {\n        var cur = isArray(current_event) ? current_event.join(\".\") : current_event;\n        if (subname) {\n            return new RegExp(\"(?:\\\\.|\\\\/|^)\" + subname + \"(?:\\\\.|\\\\/|$)\").test(cur);\n        }\n        return cur;\n    };\n    /*\\\n     * eve.nts\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     **\n     = (array) names of the event\n    \\*/\n    eve.nts = function () {\n        return isArray(current_event) ? current_event : current_event.split(separator);\n    };\n    /*\\\n     * eve.off\n     [ method ]\n     **\n     * Removes given function from the list of event listeners assigned to given name.\n     * If no arguments specified all the events will be cleared.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n    \\*/\n    /*\\\n     * eve.unbind\n     [ method ]\n     **\n     * See @eve.off\n    \\*/\n    eve.off = eve.unbind = function (name, f) {\n        if (!name) {\n            eve._events = events = {n: {}};\n            return;\n        }\n        var names = isArray(name) ? isArray(name[0]) ? name : [name] : Str(name).split(comaseparator);\n        if (names.length > 1) {\n            for (var i = 0, ii = names.length; i < ii; i++) {\n                eve.off(names[i], f);\n            }\n            return;\n        }\n        names = isArray(name) ? name : Str(name).split(separator);\n        var e,\n            key,\n            splice,\n            i, ii, j, jj,\n            cur = [events],\n            inodes = [];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            for (j = 0; j < cur.length; j += splice.length - 2) {\n                splice = [j, 1];\n                e = cur[j].n;\n                if (names[i] != wildcard) {\n                    if (e[names[i]]) {\n                        splice.push(e[names[i]]);\n                        inodes.unshift({\n                            n: e,\n                            name: names[i]\n                        });\n                    }\n                } else {\n                    for (key in e) if (e[has](key)) {\n                        splice.push(e[key]);\n                        inodes.unshift({\n                            n: e,\n                            name: key\n                        });\n                    }\n                }\n                cur.splice.apply(cur, splice);\n            }\n        }\n        for (i = 0, ii = cur.length; i < ii; i++) {\n            e = cur[i];\n            while (e.n) {\n                if (f) {\n                    if (e.f) {\n                        for (j = 0, jj = e.f.length; j < jj; j++) if (e.f[j] == f) {\n                            e.f.splice(j, 1);\n                            break;\n                        }\n                        !e.f.length && delete e.f;\n                    }\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        var funcs = e.n[key].f;\n                        for (j = 0, jj = funcs.length; j < jj; j++) if (funcs[j] == f) {\n                            funcs.splice(j, 1);\n                            break;\n                        }\n                        !funcs.length && delete e.n[key].f;\n                    }\n                } else {\n                    delete e.f;\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        delete e.n[key].f;\n                    }\n                }\n                e = e.n;\n            }\n        }\n        // prune inner nodes in path\n        prune: for (i = 0, ii = inodes.length; i < ii; i++) {\n            e = inodes[i];\n            for (key in e.n[e.name].f) {\n                // not empty (has listeners)\n                continue prune;\n            }\n            for (key in e.n[e.name].n) {\n                // not empty (has children)\n                continue prune;\n            }\n            // is empty\n            delete e.n[e.name];\n        }\n    };\n    /*\\\n     * eve.once\n     [ method ]\n     **\n     * Binds given event handler with a given name to only run once then unbind itself.\n     | eve.once(\"login\", f);\n     | eve(\"login\"); // triggers f\n     | eve(\"login\"); // no listeners\n     * Use @eve to trigger the listener.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     = (function) same return function as @eve.on\n    \\*/\n    eve.once = function (name, f) {\n        var f2 = function () {\n            eve.off(name, f2);\n            return f.apply(this, arguments);\n        };\n        return eve.on(name, f2);\n    };\n    /*\\\n     * eve.version\n     [ property (string) ]\n     **\n     * Current version of the library.\n    \\*/\n    eve.version = version;\n    eve.toString = function () {\n        return \"You are running Eve \" + version;\n    };\n    glob.eve = eve;\n    typeof module != \"undefined\" && module.exports ? module.exports = eve : typeof define === \"function\" && define.amd ? define(\"eve\", [], function () { return eve; }) : glob.eve = eve;\n})(typeof window != \"undefined\" ? window : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/eve/eve.js\n// module id = 827\n// module chunks = 79611799117203","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar BurgerIcon = (function (_Component) {\n  _inherits(BurgerIcon, _Component);\n\n  function BurgerIcon(props) {\n    _classCallCheck(this, BurgerIcon);\n\n    _get(Object.getPrototypeOf(BurgerIcon.prototype), 'constructor', this).call(this, props);\n    this.state = {\n      hover: false\n    };\n  }\n\n  _createClass(BurgerIcon, [{\n    key: 'getLineStyle',\n    value: function getLineStyle(index) {\n      return {\n        position: 'absolute',\n        height: '20%',\n        left: 0,\n        right: 0,\n        top: 20 * (index * 2) + '%',\n        opacity: this.state.hover ? 0.6 : 1\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this = this;\n\n      var icon = undefined;\n      var buttonStyle = {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        width: '100%',\n        height: '100%',\n        margin: 0,\n        padding: 0,\n        border: 'none',\n        opacity: 0,\n        fontSize: 8,\n        cursor: 'pointer'\n      };\n\n      if (this.props.customIcon) {\n        var extraProps = {\n          className: 'bm-icon',\n          style: _extends({ width: '100%', height: '100%' }, this.props.styles.bmIcon)\n        };\n        icon = _react2['default'].cloneElement(this.props.customIcon, extraProps);\n      } else {\n        icon = _react2['default'].createElement(\n          'span',\n          null,\n          [0, 1, 2].map(function (bar) {\n            return _react2['default'].createElement('span', {\n              key: bar,\n              className: ('bm-burger-bars ' + _this.props.barClassName).trim(),\n              style: _extends({}, _this.getLineStyle(bar), _this.props.styles.bmBurgerBars)\n            });\n          })\n        );\n      }\n\n      return _react2['default'].createElement(\n        'div',\n        {\n          className: ('bm-burger-button ' + this.props.className).trim(),\n          style: _extends({ zIndex: 1000 }, this.props.styles.bmBurgerButton)\n        },\n        icon,\n        _react2['default'].createElement(\n          'button',\n          {\n            onClick: this.props.onClick,\n            onMouseOver: function () {\n              return _this.setState({ hover: true });\n            },\n            onMouseOut: function () {\n              return _this.setState({ hover: false });\n            },\n            style: buttonStyle\n          },\n          'Open Menu'\n        )\n      );\n    }\n  }]);\n\n  return BurgerIcon;\n})(_react.Component);\n\nexports['default'] = BurgerIcon;\n\nBurgerIcon.propTypes = {\n  barClassName: _propTypes2['default'].string,\n  customIcon: _propTypes2['default'].element,\n  styles: _propTypes2['default'].object\n};\n\nBurgerIcon.defaultProps = {\n  barClassName: '',\n  className: '',\n  styles: {}\n};\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-burger-menu/lib/BurgerIcon.js\n// module id = 1189\n// module chunks = 79611799117203","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports['default'] = {\n  slide: require('./menus/slide'),\n  stack: require('./menus/stack'),\n  elastic: require('./menus/elastic'),\n  bubble: require('./menus/bubble'),\n  push: require('./menus/push'),\n  pushRotate: require('./menus/pushRotate'),\n  scaleDown: require('./menus/scaleDown'),\n  scaleRotate: require('./menus/scaleRotate'),\n  fallDown: require('./menus/fallDown'),\n  reveal: require('./menus/reveal')\n};\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-burger-menu/lib/BurgerMenu.js\n// module id = 1190\n// module chunks = 79611799117203","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar CrossIcon = (function (_Component) {\n  _inherits(CrossIcon, _Component);\n\n  function CrossIcon() {\n    _classCallCheck(this, CrossIcon);\n\n    _get(Object.getPrototypeOf(CrossIcon.prototype), 'constructor', this).apply(this, arguments);\n  }\n\n  _createClass(CrossIcon, [{\n    key: 'getCrossStyle',\n    value: function getCrossStyle(type) {\n      return {\n        position: 'absolute',\n        width: 3,\n        height: 14,\n        transform: type === 'before' ? 'rotate(45deg)' : 'rotate(-45deg)'\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this = this;\n\n      var icon;\n      var buttonWrapperStyle = {\n        position: 'absolute',\n        width: 24,\n        height: 24,\n        right: 8,\n        top: 8\n      };\n      var buttonStyle = {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        width: '100%',\n        height: '100%',\n        margin: 0,\n        padding: 0,\n        border: 'none',\n        textIndent: -9999,\n        background: 'transparent',\n        outline: 'none',\n        cursor: 'pointer'\n      };\n\n      if (this.props.customIcon) {\n        var extraProps = {\n          className: 'bm-cross',\n          style: _extends({ width: '100%', height: '100%' }, this.props.styles.bmCross)\n        };\n        icon = _react2['default'].cloneElement(this.props.customIcon, extraProps);\n      } else {\n        icon = _react2['default'].createElement(\n          'span',\n          { style: { position: 'absolute', top: '6px', right: '14px' } },\n          ['before', 'after'].map(function (type, i) {\n            return _react2['default'].createElement('span', {\n              key: i,\n              className: ('bm-cross ' + _this.props.crossClassName).trim(),\n              style: _extends({}, _this.getCrossStyle(type), _this.props.styles.bmCross)\n            });\n          })\n        );\n      }\n\n      return _react2['default'].createElement(\n        'div',\n        {\n          className: ('bm-cross-button ' + this.props.className).trim(),\n          style: _extends({}, buttonWrapperStyle, this.props.styles.bmCrossButton)\n        },\n        icon,\n        _react2['default'].createElement(\n          'button',\n          { onClick: this.props.onClick, style: buttonStyle },\n          'Close Menu'\n        )\n      );\n    }\n  }]);\n\n  return CrossIcon;\n})(_react.Component);\n\nexports['default'] = CrossIcon;\n\nCrossIcon.propTypes = {\n  crossClassName: _propTypes2['default'].string,\n  customIcon: _propTypes2['default'].element,\n  styles: _propTypes2['default'].object\n};\n\nCrossIcon.defaultProps = {\n  crossClassName: '',\n  className: '',\n  styles: {}\n};\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-burger-menu/lib/CrossIcon.js\n// module id = 1191\n// module chunks = 79611799117203","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar styles = {\n  overlay: function overlay(isOpen) {\n    return {\n      position: 'fixed',\n      zIndex: 1000,\n      width: '100%',\n      height: '100%',\n      background: 'rgba(0, 0, 0, 0.3)',\n      opacity: isOpen ? 1 : 0,\n      MozTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      MsTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      OTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      WebkitTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      transform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      transition: isOpen ? 'opacity 0.3s' : 'opacity 0.3s, transform 0s 0.3s'\n    };\n  },\n\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      position: 'fixed',\n      right: right ? 0 : 'inherit',\n      zIndex: 1100,\n      width: width,\n      height: '100%',\n      MozTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transition: 'all 0.5s'\n    };\n  },\n\n  menu: function menu() {\n    return {\n      height: '100%',\n      boxSizing: 'border-box',\n      overflow: 'auto'\n    };\n  },\n\n  itemList: function itemList() {\n    return {\n      height: '100%'\n    };\n  },\n\n  item: function item() {\n    return {\n      display: 'block',\n      outline: 'none'\n    };\n  }\n};\n\nexports['default'] = styles;\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-burger-menu/lib/baseStyles.js\n// module id = 1192\n// module chunks = 79611799117203","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x3, _x4, _x5) { var _again = true; _function: while (_again) { var object = _x3, property = _x4, receiver = _x5; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x3 = parent; _x4 = property; _x5 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _baseStyles = require('./baseStyles');\n\nvar _baseStyles2 = _interopRequireDefault(_baseStyles);\n\nvar _BurgerIcon = require('./BurgerIcon');\n\nvar _BurgerIcon2 = _interopRequireDefault(_BurgerIcon);\n\nvar _CrossIcon = require('./CrossIcon');\n\nvar _CrossIcon2 = _interopRequireDefault(_CrossIcon);\n\nexports['default'] = function (styles) {\n  var Menu = (function (_Component) {\n    _inherits(Menu, _Component);\n\n    function Menu(props) {\n      _classCallCheck(this, Menu);\n\n      _get(Object.getPrototypeOf(Menu.prototype), 'constructor', this).call(this, props);\n      this.state = {\n        isOpen: false\n      };\n    }\n\n    _createClass(Menu, [{\n      key: 'toggleMenu',\n      value: function toggleMenu() {\n        var _this = this;\n\n        var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n        var isOpen = options.isOpen;\n        var noStateChange = options.noStateChange;\n\n        var newState = {\n          isOpen: typeof isOpen !== 'undefined' ? isOpen : !this.state.isOpen\n        };\n\n        this.applyWrapperStyles();\n\n        this.setState(newState, function () {\n          !noStateChange && _this.props.onStateChange(newState);\n\n          // Timeout ensures wrappers are cleared after animation finishes.\n          _this.timeoutId && clearTimeout(_this.timeoutId);\n          _this.timeoutId = setTimeout(function () {\n            _this.timeoutId = null;\n            if (!newState.isOpen) {\n              _this.applyWrapperStyles(false);\n            }\n          }, 500);\n        });\n      }\n\n      // Applies component-specific styles to external wrapper elements.\n    }, {\n      key: 'applyWrapperStyles',\n      value: function applyWrapperStyles() {\n        var set = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n\n        if (this.props.bodyClassName) {\n          var body = document.querySelector('body');\n          body.classList[set ? 'add' : 'remove'](this.props.bodyClassName);\n        }\n\n        if (styles.pageWrap && this.props.pageWrapId) {\n          this.handleExternalWrapper(this.props.pageWrapId, styles.pageWrap, set);\n        }\n\n        if (styles.outerContainer && this.props.outerContainerId) {\n          this.handleExternalWrapper(this.props.outerContainerId, styles.outerContainer, set);\n        }\n      }\n\n      // Sets or unsets styles on DOM elements outside the menu component.\n      // This is necessary for correct page interaction with some of the menus.\n      // Throws and returns if the required external elements don't exist,\n      // which means any external page animations won't be applied.\n    }, {\n      key: 'handleExternalWrapper',\n      value: function handleExternalWrapper(id, wrapperStyles, set) {\n        var html = document.querySelector('html');\n        var body = document.querySelector('body');\n        var wrapper = document.getElementById(id);\n\n        if (!wrapper) {\n          console.error(\"Element with ID '\" + id + \"' not found\");\n          return;\n        }\n\n        var builtStyles = this.getStyle(wrapperStyles);\n\n        for (var prop in builtStyles) {\n          if (builtStyles.hasOwnProperty(prop)) {\n            wrapper.style[prop] = set ? builtStyles[prop] : '';\n          }\n        }\n\n        // Prevent any horizontal scroll.\n        [html, body].forEach(function (element) {\n          element.style['overflow-x'] = set ? 'hidden' : '';\n        });\n      }\n\n      // Builds styles incrementally for a given element.\n    }, {\n      key: 'getStyles',\n      value: function getStyles(el, index, inline) {\n        var propName = 'bm' + el.replace(el.charAt(0), el.charAt(0).toUpperCase());\n\n        // Set base styles.\n        var output = _baseStyles2['default'][el] ? this.getStyle(_baseStyles2['default'][el]) : {};\n\n        // Add animation-specific styles.\n        if (styles[el]) {\n          output = _extends({}, output, this.getStyle(styles[el], index + 1));\n        }\n\n        // Add custom styles.\n        if (this.props.styles[propName]) {\n          output = _extends({}, output, this.props.styles[propName]);\n        }\n\n        // Add element inline styles.\n        if (inline) {\n          output = _extends({}, output, inline);\n        }\n\n        return output;\n      }\n    }, {\n      key: 'getStyle',\n      value: function getStyle(style, index) {\n        var width = this.props.width;\n\n        var formattedWidth = typeof width !== 'string' ? width + 'px' : width;\n        return style(this.state.isOpen, formattedWidth, this.props.right, index);\n      }\n    }, {\n      key: 'listenForClose',\n      value: function listenForClose(e) {\n        e = e || window.event;\n\n        if (this.state.isOpen && (e.key === 'Escape' || e.keyCode === 27)) {\n          this.toggleMenu();\n        }\n      }\n    }, {\n      key: 'shouldDisableOverlayClick',\n      value: function shouldDisableOverlayClick() {\n        if (typeof this.props.disableOverlayClick === 'function') {\n          return this.props.disableOverlayClick();\n        } else {\n          return this.props.disableOverlayClick;\n        }\n      }\n    }, {\n      key: 'componentWillMount',\n      value: function componentWillMount() {\n        if (!styles) {\n          throw new Error('No styles supplied');\n        }\n      }\n    }, {\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        // Bind ESC key handler (unless disabled or custom function supplied).\n        if (this.props.customOnKeyDown) {\n          window.onkeydown = this.props.customOnKeyDown;\n        } else if (!this.props.disableCloseOnEsc) {\n          window.onkeydown = this.listenForClose.bind(this);\n        }\n\n        // Allow initial open state to be set by props.\n        if (this.props.isOpen) {\n          this.toggleMenu({ isOpen: true, noStateChange: true });\n        }\n      }\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        window.onkeydown = null;\n\n        this.applyWrapperStyles(false);\n      }\n    }, {\n      key: 'componentDidUpdate',\n      value: function componentDidUpdate() {\n        var _this2 = this;\n\n        if (styles.svg) {\n          (function () {\n            var morphShape = _reactDom2['default'].findDOMNode(_this2, 'bm-morph-shape');\n            var path = styles.svg.lib(morphShape).select('path');\n\n            if (_this2.state.isOpen) {\n              // Animate SVG path.\n              styles.svg.animate(path);\n            } else {\n              // Reset path (timeout ensures animation happens off screen).\n              setTimeout(function () {\n                path.attr('d', styles.svg.pathInitial);\n              }, 300);\n            }\n          })();\n        }\n      }\n    }, {\n      key: 'componentWillReceiveProps',\n      value: function componentWillReceiveProps(nextProps) {\n        if (typeof nextProps.isOpen !== 'undefined' && nextProps.isOpen !== this.state.isOpen) {\n          this.toggleMenu();\n        }\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _this3 = this;\n\n        return _react2['default'].createElement(\n          'div',\n          null,\n          !this.props.noOverlay && _react2['default'].createElement('div', {\n            className: ('bm-overlay ' + this.props.overlayClassName).trim(),\n            onClick: function () {\n              return !_this3.shouldDisableOverlayClick() && _this3.toggleMenu();\n            },\n            style: this.getStyles('overlay')\n          }),\n          _react2['default'].createElement(\n            'div',\n            {\n              id: this.props.id,\n              className: ('bm-menu-wrap ' + this.props.className).trim(),\n              style: this.getStyles('menuWrap')\n            },\n            styles.svg && _react2['default'].createElement(\n              'div',\n              {\n                className: ('bm-morph-shape ' + this.props.morphShapeClassName).trim(),\n                style: this.getStyles('morphShape')\n              },\n              _react2['default'].createElement(\n                'svg',\n                {\n                  width: '100%',\n                  height: '100%',\n                  viewBox: '0 0 100 800',\n                  preserveAspectRatio: 'none'\n                },\n                _react2['default'].createElement('path', { d: styles.svg.pathInitial })\n              )\n            ),\n            _react2['default'].createElement(\n              'div',\n              {\n                className: ('bm-menu ' + this.props.menuClassName).trim(),\n                style: this.getStyles('menu')\n              },\n              _react2['default'].createElement(\n                'nav',\n                {\n                  className: ('bm-item-list ' + this.props.itemListClassName).trim(),\n                  style: this.getStyles('itemList')\n                },\n                _react2['default'].Children.map(this.props.children, function (item, index) {\n                  if (item) {\n                    var extraProps = {\n                      key: index,\n                      style: _this3.getStyles('item', index, item.props.style)\n                    };\n                    return _react2['default'].cloneElement(item, extraProps);\n                  }\n                })\n              )\n            ),\n            this.props.customCrossIcon !== false && _react2['default'].createElement(\n              'div',\n              { style: this.getStyles('closeButton') },\n              _react2['default'].createElement(_CrossIcon2['default'], {\n                onClick: function () {\n                  return _this3.toggleMenu();\n                },\n                styles: this.props.styles,\n                customIcon: this.props.customCrossIcon,\n                className: this.props.crossButtonClassName,\n                crossClassName: this.props.crossClassName\n              })\n            )\n          ),\n          this.props.customBurgerIcon !== false && _react2['default'].createElement(\n            'div',\n            { style: this.getStyles('burgerIcon') },\n            _react2['default'].createElement(_BurgerIcon2['default'], {\n              onClick: function () {\n                return _this3.toggleMenu();\n              },\n              styles: this.props.styles,\n              customIcon: this.props.customBurgerIcon,\n              className: this.props.burgerButtonClassName,\n              barClassName: this.props.burgerBarClassName\n            })\n          )\n        );\n      }\n    }]);\n\n    return Menu;\n  })(_react.Component);\n\n  Menu.propTypes = {\n    bodyClassName: _propTypes2['default'].string,\n    burgerBarClassName: _propTypes2['default'].string,\n    burgerButtonClassName: _propTypes2['default'].string,\n    crossButtonClassName: _propTypes2['default'].string,\n    crossClassName: _propTypes2['default'].string,\n    customBurgerIcon: _propTypes2['default'].oneOfType([_propTypes2['default'].element, _propTypes2['default'].oneOf([false])]),\n    customCrossIcon: _propTypes2['default'].oneOfType([_propTypes2['default'].element, _propTypes2['default'].oneOf([false])]),\n    customOnKeyDown: _propTypes2['default'].func,\n    disableCloseOnEsc: _propTypes2['default'].bool,\n    disableOverlayClick: _propTypes2['default'].oneOfType([_propTypes2['default'].bool, _propTypes2['default'].func]),\n    id: _propTypes2['default'].string,\n    isOpen: _propTypes2['default'].bool,\n    itemListClassName: _propTypes2['default'].string,\n    menuClassName: _propTypes2['default'].string,\n    morphShapeClassName: _propTypes2['default'].string,\n    noOverlay: _propTypes2['default'].bool,\n    onStateChange: _propTypes2['default'].func,\n    outerContainerId: styles && styles.outerContainer ? _propTypes2['default'].string.isRequired : _propTypes2['default'].string,\n    overlayClassName: _propTypes2['default'].string,\n    pageWrapId: styles && styles.pageWrap ? _propTypes2['default'].string.isRequired : _propTypes2['default'].string,\n    right: _propTypes2['default'].bool,\n    styles: _propTypes2['default'].object,\n    width: _propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].string])\n  };\n\n  Menu.defaultProps = {\n    bodyClassName: '',\n    burgerBarClassName: '',\n    burgerButtonClassName: '',\n    className: '',\n    crossButtonClassName: '',\n    crossClassName: '',\n    disableCloseOnEsc: false,\n    id: '',\n    itemListClassName: '',\n    menuClassName: '',\n    morphShapeClassName: '',\n    noOverlay: false,\n    onStateChange: function onStateChange() {},\n    outerContainerId: '',\n    overlayClassName: '',\n    pageWrapId: '',\n    styles: {},\n    width: 300\n  };\n\n  return Menu;\n};\n\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-burger-menu/lib/menuFactory.js\n// module id = 51\n// module chunks = 79611799117203","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _snapsvgImporter = require('../snapsvgImporter');\n\nvar _snapsvgImporter2 = _interopRequireDefault(_snapsvgImporter);\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  svg: {\n    lib: _snapsvgImporter2['default'],\n    pathInitial: 'M-7.312,0H0c0,0,0,113.839,0,400c0,264.506,0,400,0,400h-7.312V0z',\n    pathOpen: 'M-7.312,0H15c0,0,66,113.339,66,399.5C81,664.006,15,800,15,800H-7.312V0z;M-7.312,0H100c0,0,0,113.839,0,400c0,264.506,0,400,0,400H-7.312V0z',\n    animate: function animate(path) {\n      var pos = 0;\n      var steps = this.pathOpen.split(';');\n      var stepsTotal = steps.length;\n      var mina = window.mina;\n\n      var nextStep = function nextStep() {\n        if (pos > stepsTotal - 1) return;\n\n        path.animate({ path: steps[pos] }, pos === 0 ? 400 : 500, pos === 0 ? mina.easein : mina.elastic, function () {\n          nextStep();\n        });\n\n        pos++;\n      };\n\n      nextStep();\n    }\n  },\n\n  morphShape: function morphShape(isOpen, width, right) {\n    return {\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      right: right ? 'inherit' : 0,\n      left: right ? 0 : 'inherit',\n      MozTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      MsTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      OTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      WebkitTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      transform: right ? 'rotateY(180deg)' : 'rotateY(0deg)'\n    };\n  },\n\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transition: isOpen ? 'transform 0.4s 0s' : 'transform 0.4s'\n    };\n  },\n\n  menu: function menu(isOpen, width, right) {\n    width -= 140;\n    return {\n      position: 'fixed',\n      MozTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'opacity 0.1s 0.4s cubic-bezier(.17, .67, .1, 1.27), transform 0.1s 0.4s cubic-bezier(.17, .67, .1, 1.27)' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n      opacity: isOpen ? 1 : 0\n    };\n  },\n\n  item: function item(isOpen, width, right, nthChild) {\n    width -= 140;\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'opacity 0.3s 0.4s, transform 0.3s 0.4s' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n      opacity: isOpen ? 1 : 0\n    };\n  },\n\n  closeButton: function closeButton(isOpen, width, right) {\n    width -= 140;\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'opacity 0.3s 0.4s cubic-bezier(.17, .67, .1, 1.27), transform 0.3s 0.4s cubic-bezier(.17, .67, .1, 1.27)' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n      opacity: isOpen ? 1 : 0\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-burger-menu/lib/menus/bubble.js\n// module id = 1193\n// module chunks = 79611799117203","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _snapsvgImporter = require('../snapsvgImporter');\n\nvar _snapsvgImporter2 = _interopRequireDefault(_snapsvgImporter);\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  svg: {\n    lib: _snapsvgImporter2['default'],\n    pathInitial: 'M-1,0h101c0,0-97.833,153.603-97.833,396.167C2.167,627.579,100,800,100,800H-1V0z',\n    pathOpen: 'M-1,0h101c0,0,0-1,0,395c0,404,0,405,0,405H-1V0z',\n    animate: function animate(path) {\n      path.animate({ path: this.pathOpen }, 400, window.mina.easeinout);\n    }\n  },\n\n  morphShape: function morphShape(isOpen, width, right) {\n    return {\n      position: 'absolute',\n      width: 120,\n      height: '100%',\n      right: right ? 'inherit' : 0,\n      left: right ? 0 : 'inherit',\n      MozTransform: right ? 'rotateY(180deg)' : '',\n      MsTransform: right ? 'rotateY(180deg)' : '',\n      OTransform: right ? 'rotateY(180deg)' : '',\n      WebkitTransform: right ? 'rotateY(180deg)' : '',\n      transform: right ? 'rotateY(180deg)' : ''\n    };\n  },\n\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transition: 'all 0.3s'\n    };\n  },\n\n  menu: function menu(isOpen, width, right) {\n    return {\n      position: 'fixed',\n      right: right ? 0 : 'inherit',\n      width: 180,\n      whiteSpace: 'nowrap',\n      boxSizing: 'border-box',\n      overflow: 'visible'\n    };\n  },\n\n  itemList: function itemList(isOpen, width, right) {\n    if (right) {\n      return {\n        position: 'relative',\n        left: '-110px',\n        width: '170%',\n        overflow: 'auto'\n      };\n    }\n  },\n\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      transition: isOpen ? 'all 0.3s' : 'all 0.3s 0.1s'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-burger-menu/lib/menus/elastic.js\n// module id = 1194\n// module chunks = 79611799117203","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  menuWrap: function menuWrap(isOpen) {\n    return {\n      MozTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      MsTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      OTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      WebkitTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      transform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      transition: 'all 0.5s ease-in-out'\n    };\n  },\n\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transition: 'all 0.5s'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      perspective: '1500px',\n      perspectiveOrigin: '0% 50%',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-burger-menu/lib/menus/fallDown.js\n// module id = 1195\n// module chunks = 79611799117203","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transition: 'all 0.5s'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-burger-menu/lib/menus/push.js\n// module id = 1196\n// module chunks = 79611799117203","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      transformOrigin: right ? '100% 50%' : '0% 50%',\n      transformStyle: 'preserve-3d',\n      transition: 'all 0.5s'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      perspective: '1500px',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-burger-menu/lib/menus/pushRotate.js\n// module id = 1197\n// module chunks = 79611799117203","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      visibility: isOpen ? 'visible' : 'hidden',\n      MozTransform: 'translate3d(0, 0, 0)',\n      MsTransform: 'translate3d(0, 0, 0)',\n      OTransform: 'translate3d(0, 0, 0)',\n      WebkitTransform: 'translate3d(0, 0, 0)',\n      transform: 'translate3d(0, 0, 0)',\n      zIndex: 1000\n    };\n  },\n\n  overlay: function overlay(isOpen, width, right) {\n    return {\n      zIndex: 1400,\n      MozTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      MsTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      OTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      WebkitTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transition: 'all 0.5s',\n      visibility: isOpen ? 'visible' : 'hidden'\n    };\n  },\n\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transition: 'all 0.5s',\n      zIndex: 1200,\n      position: 'relative'\n    };\n  },\n\n  burgerIcon: function burgerIcon(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      MsTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      OTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      WebkitTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transition: 'all 0.1s',\n      position: 'relative',\n      zIndex: 1300\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-burger-menu/lib/menus/reveal.js\n// module id = 1198\n// module chunks = 79611799117203","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width) {\n    return {\n      MozTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      MsTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      OTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      WebkitTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      transform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      transformOrigin: '100%',\n      transformStyle: 'preserve-3d',\n      transition: 'all 0.5s'\n    };\n  },\n\n  outerContainer: function outerContainer() {\n    return {\n      perspective: '1500px'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-burger-menu/lib/menus/scaleDown.js\n// module id = 1199\n// module chunks = 79611799117203","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      transform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      transformStyle: 'preserve-3d',\n      transition: 'all 0.5s',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      perspective: '1500px',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-burger-menu/lib/menus/scaleRotate.js\n// module id = 1200\n// module chunks = 79611799117203","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-burger-menu/lib/menus/slide.js\n// module id = 1201\n// module chunks = 79611799117203","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'transform 0.8s cubic-bezier(0.7, 0, 0.3, 1)' : 'transform 0.4s cubic-bezier(0.7, 0, 0.3, 1)'\n    };\n  },\n\n  item: function item(isOpen, width, right, nthChild) {\n    return {\n      MozTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      MsTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      OTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      WebkitTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      transform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      transition: isOpen ? 'transform 0.8s cubic-bezier(0.7, 0, 0.3, 1)' : 'transform 0s 0.2s cubic-bezier(0.7, 0, 0.3, 1)'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-burger-menu/lib/menus/stack.js\n// module id = 1202\n// module chunks = 79611799117203","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nexports['default'] = function () {\n  var Snap = undefined;\n  try {\n    Snap = require('snapsvg-cjs');\n  } finally {\n    return Snap;\n  }\n};\n\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-burger-menu/lib/snapsvgImporter.js\n// module id = 405\n// module chunks = 79611799117203","window.eve = require('eve')\n\n// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar mina = (function (eve) {\n    var animations = {},\n    requestAnimFrame = window.requestAnimationFrame       ||\n                       window.webkitRequestAnimationFrame ||\n                       window.mozRequestAnimationFrame    ||\n                       window.oRequestAnimationFrame      ||\n                       window.msRequestAnimationFrame     ||\n                       function (callback) {\n                           setTimeout(callback, 16, new Date().getTime());\n                           return true;\n                       },\n    requestID,\n    isArray = Array.isArray || function (a) {\n        return a instanceof Array ||\n            Object.prototype.toString.call(a) == \"[object Array]\";\n    },\n    idgen = 0,\n    idprefix = \"M\" + (+new Date).toString(36),\n    ID = function () {\n        return idprefix + (idgen++).toString(36);\n    },\n    diff = function (a, b, A, B) {\n        if (isArray(a)) {\n            res = [];\n            for (var i = 0, ii = a.length; i < ii; i++) {\n                res[i] = diff(a[i], b, A[i], B);\n            }\n            return res;\n        }\n        var dif = (A - a) / (B - b);\n        return function (bb) {\n            return a + dif * (bb - b);\n        };\n    },\n    timer = Date.now || function () {\n        return +new Date;\n    },\n    sta = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.s;\n        }\n        var ds = a.s - val;\n        a.b += a.dur * ds;\n        a.B += a.dur * ds;\n        a.s = val;\n    },\n    speed = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.spd;\n        }\n        a.spd = val;\n    },\n    duration = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.dur;\n        }\n        a.s = a.s * val / a.dur;\n        a.dur = val;\n    },\n    stopit = function () {\n        var a = this;\n        delete animations[a.id];\n        a.update();\n        eve(\"mina.stop.\" + a.id, a);\n    },\n    pause = function () {\n        var a = this;\n        if (a.pdif) {\n            return;\n        }\n        delete animations[a.id];\n        a.update();\n        a.pdif = a.get() - a.b;\n    },\n    resume = function () {\n        var a = this;\n        if (!a.pdif) {\n            return;\n        }\n        a.b = a.get() - a.pdif;\n        delete a.pdif;\n        animations[a.id] = a;\n        frame();\n    },\n    update = function () {\n        var a = this,\n            res;\n        if (isArray(a.start)) {\n            res = [];\n            for (var j = 0, jj = a.start.length; j < jj; j++) {\n                res[j] = +a.start[j] +\n                    (a.end[j] - a.start[j]) * a.easing(a.s);\n            }\n        } else {\n            res = +a.start + (a.end - a.start) * a.easing(a.s);\n        }\n        a.set(res);\n    },\n    frame = function (timeStamp) {\n        // Manual invokation?\n        if (!timeStamp) {\n            // Frame loop stopped?\n            if (!requestID) {\n                // Start frame loop...\n                requestID = requestAnimFrame(frame);\n            }\n            return;\n        }\n        var len = 0;\n        for (var i in animations) if (animations.hasOwnProperty(i)) {\n            var a = animations[i],\n                b = a.get(),\n                res;\n            len++;\n            a.s = (b - a.b) / (a.dur / a.spd);\n            if (a.s >= 1) {\n                delete animations[i];\n                a.s = 1;\n                len--;\n                (function (a) {\n                    setTimeout(function () {\n                        eve(\"mina.finish.\" + a.id, a);\n                    });\n                }(a));\n            }\n            a.update();\n        }\n        requestID = len ? requestAnimFrame(frame) : false;\n    },\n    /*\\\n     * mina\n     [ method ]\n     **\n     * Generic animation of numbers\n     **\n     - a (number) start _slave_ number\n     - A (number) end _slave_ number\n     - b (number) start _master_ number (start time in general case)\n     - B (number) end _master_ number (end time in general case)\n     - get (function) getter of _master_ number (see @mina.time)\n     - set (function) setter of _slave_ number\n     - easing (function) #optional easing function, default is @mina.linear\n     = (object) animation descriptor\n     o {\n     o         id (string) animation id,\n     o         start (number) start _slave_ number,\n     o         end (number) end _slave_ number,\n     o         b (number) start _master_ number,\n     o         s (number) animation status (0..1),\n     o         dur (number) animation duration,\n     o         spd (number) animation speed,\n     o         get (function) getter of _master_ number (see @mina.time),\n     o         set (function) setter of _slave_ number,\n     o         easing (function) easing function, default is @mina.linear,\n     o         status (function) status getter/setter,\n     o         speed (function) speed getter/setter,\n     o         duration (function) duration getter/setter,\n     o         stop (function) animation stopper\n     o         pause (function) pauses the animation\n     o         resume (function) resumes the animation\n     o         update (function) calles setter with the right value of the animation\n     o }\n    \\*/\n    mina = function (a, A, b, B, get, set, easing) {\n        var anim = {\n            id: ID(),\n            start: a,\n            end: A,\n            b: b,\n            s: 0,\n            dur: B - b,\n            spd: 1,\n            get: get,\n            set: set,\n            easing: easing || mina.linear,\n            status: sta,\n            speed: speed,\n            duration: duration,\n            stop: stopit,\n            pause: pause,\n            resume: resume,\n            update: update\n        };\n        animations[anim.id] = anim;\n        var len = 0, i;\n        for (i in animations) if (animations.hasOwnProperty(i)) {\n            len++;\n            if (len == 2) {\n                break;\n            }\n        }\n        len == 1 && frame();\n        return anim;\n    };\n    /*\\\n     * mina.time\n     [ method ]\n     **\n     * Returns the current time. Equivalent to:\n     | function () {\n     |     return (new Date).getTime();\n     | }\n    \\*/\n    mina.time = timer;\n    /*\\\n     * mina.getById\n     [ method ]\n     **\n     * Returns an animation by its id\n     - id (string) animation's id\n     = (object) See @mina\n    \\*/\n    mina.getById = function (id) {\n        return animations[id] || null;\n    };\n\n    /*\\\n     * mina.linear\n     [ method ]\n     **\n     * Default linear easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.linear = function (n) {\n        return n;\n    };\n    /*\\\n     * mina.easeout\n     [ method ]\n     **\n     * Easeout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeout = function (n) {\n        return Math.pow(n, 1.7);\n    };\n    /*\\\n     * mina.easein\n     [ method ]\n     **\n     * Easein easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easein = function (n) {\n        return Math.pow(n, .48);\n    };\n    /*\\\n     * mina.easeinout\n     [ method ]\n     **\n     * Easeinout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeinout = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        if (n == 0) {\n            return 0;\n        }\n        var q = .48 - n / 1.04,\n            Q = Math.sqrt(.1734 + q * q),\n            x = Q - q,\n            X = Math.pow(Math.abs(x), 1 / 3) * (x < 0 ? -1 : 1),\n            y = -Q - q,\n            Y = Math.pow(Math.abs(y), 1 / 3) * (y < 0 ? -1 : 1),\n            t = X + Y + .5;\n        return (1 - t) * 3 * t * t + t * t * t;\n    };\n    /*\\\n     * mina.backin\n     [ method ]\n     **\n     * Backin easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backin = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        var s = 1.70158;\n        return n * n * ((s + 1) * n - s);\n    };\n    /*\\\n     * mina.backout\n     [ method ]\n     **\n     * Backout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backout = function (n) {\n        if (n == 0) {\n            return 0;\n        }\n        n = n - 1;\n        var s = 1.70158;\n        return n * n * ((s + 1) * n + s) + 1;\n    };\n    /*\\\n     * mina.elastic\n     [ method ]\n     **\n     * Elastic easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.elastic = function (n) {\n        if (n == !!n) {\n            return n;\n        }\n        return Math.pow(2, -10 * n) * Math.sin((n - .075) *\n            (2 * Math.PI) / .3) + 1;\n    };\n    /*\\\n     * mina.bounce\n     [ method ]\n     **\n     * Bounce easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.bounce = function (n) {\n        var s = 7.5625,\n            p = 2.75,\n            l;\n        if (n < 1 / p) {\n            l = s * n * n;\n        } else {\n            if (n < 2 / p) {\n                n -= 1.5 / p;\n                l = s * n * n + .75;\n            } else {\n                if (n < 2.5 / p) {\n                    n -= 2.25 / p;\n                    l = s * n * n + .9375;\n                } else {\n                    n -= 2.625 / p;\n                    l = s * n * n + .984375;\n                }\n            }\n        }\n        return l;\n    };\n    window.mina = mina;\n    return mina;\n})(typeof eve == \"undefined\" ? function () {} : eve);\n\n// Copyright (c) 2013 - 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar Snap = (function(root) {\nSnap.version = \"0.5.1\";\n/*\\\n * Snap\n [ method ]\n **\n * Creates a drawing surface or wraps existing SVG element.\n **\n - width (number|string) width of surface\n - height (number|string) height of surface\n * or\n - DOM (SVGElement) element to be wrapped into Snap structure\n * or\n - array (array) array of elements (will return set of elements)\n * or\n - query (string) CSS query selector\n = (object) @Element\n\\*/\nfunction Snap(w, h) {\n    if (w) {\n        if (w.nodeType) {\n            return wrap(w);\n        }\n        if (is(w, \"array\") && Snap.set) {\n            return Snap.set.apply(Snap, w);\n        }\n        if (w instanceof Element) {\n            return w;\n        }\n        if (h == null) {\n            try {\n                w = glob.doc.querySelector(String(w));\n                return wrap(w);\n            } catch (e) {\n                return null;\n            }\n        }\n    }\n    w = w == null ? \"100%\" : w;\n    h = h == null ? \"100%\" : h;\n    return new Paper(w, h);\n}\nSnap.toString = function () {\n    return \"Snap v\" + this.version;\n};\nSnap._ = {};\nvar glob = {\n    win: root.window,\n    doc: root.window.document\n};\nSnap._.glob = glob;\nvar has = \"hasOwnProperty\",\n    Str = String,\n    toFloat = parseFloat,\n    toInt = parseInt,\n    math = Math,\n    mmax = math.max,\n    mmin = math.min,\n    abs = math.abs,\n    pow = math.pow,\n    PI = math.PI,\n    round = math.round,\n    E = \"\",\n    S = \" \",\n    objectToString = Object.prototype.toString,\n    ISURL = /^url\\(['\"]?([^\\)]+?)['\"]?\\)$/i,\n    colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i,\n    bezierrg = /^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,\n    separator = Snap._.separator = /[,\\s]+/,\n    whitespace = /[\\s]/g,\n    commaSpaces = /[\\s]*,[\\s]*/,\n    hsrg = {hs: 1, rg: 1},\n    pathCommand = /([a-z])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    tCommand = /([rstm])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    pathValues = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\s]*,?[\\s]*/ig,\n    idgen = 0,\n    idprefix = \"S\" + (+new Date).toString(36),\n    ID = function (el) {\n        return (el && el.type ? el.type : E) + idprefix + (idgen++).toString(36);\n    },\n    xlink = \"http://www.w3.org/1999/xlink\",\n    xmlns = \"http://www.w3.org/2000/svg\",\n    hub = {},\n    /*\\\n     * Snap.url\n     [ method ]\n     **\n     * Wraps path into `\"url('<path>')\"`.\n     - value (string) path\n     = (string) wrapped path\n    \\*/\n    URL = Snap.url = function (url) {\n        return \"url('#\" + url + \"')\";\n    };\n\nfunction $(el, attr) {\n    if (attr) {\n        if (el == \"#text\") {\n            el = glob.doc.createTextNode(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (el == \"#comment\") {\n            el = glob.doc.createComment(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (typeof el == \"string\") {\n            el = $(el);\n        }\n        if (typeof attr == \"string\") {\n            if (el.nodeType == 1) {\n                if (attr.substring(0, 6) == \"xlink:\") {\n                    return el.getAttributeNS(xlink, attr.substring(6));\n                }\n                if (attr.substring(0, 4) == \"xml:\") {\n                    return el.getAttributeNS(xmlns, attr.substring(4));\n                }\n                return el.getAttribute(attr);\n            } else if (attr == \"text\") {\n                return el.nodeValue;\n            } else {\n                return null;\n            }\n        }\n        if (el.nodeType == 1) {\n            for (var key in attr) if (attr[has](key)) {\n                var val = Str(attr[key]);\n                if (val) {\n                    if (key.substring(0, 6) == \"xlink:\") {\n                        el.setAttributeNS(xlink, key.substring(6), val);\n                    } else if (key.substring(0, 4) == \"xml:\") {\n                        el.setAttributeNS(xmlns, key.substring(4), val);\n                    } else {\n                        el.setAttribute(key, val);\n                    }\n                } else {\n                    el.removeAttribute(key);\n                }\n            }\n        } else if (\"text\" in attr) {\n            el.nodeValue = attr.text;\n        }\n    } else {\n        el = glob.doc.createElementNS(xmlns, el);\n    }\n    return el;\n}\nSnap._.$ = $;\nSnap._.id = ID;\nfunction getAttrs(el) {\n    var attrs = el.attributes,\n        name,\n        out = {};\n    for (var i = 0; i < attrs.length; i++) {\n        if (attrs[i].namespaceURI == xlink) {\n            name = \"xlink:\";\n        } else {\n            name = \"\";\n        }\n        name += attrs[i].name;\n        out[name] = attrs[i].textContent;\n    }\n    return out;\n}\nfunction is(o, type) {\n    type = Str.prototype.toLowerCase.call(type);\n    if (type == \"finite\") {\n        return isFinite(o);\n    }\n    if (type == \"array\" &&\n        (o instanceof Array || Array.isArray && Array.isArray(o))) {\n        return true;\n    }\n    return  type == \"null\" && o === null ||\n            type == typeof o && o !== null ||\n            type == \"object\" && o === Object(o) ||\n            objectToString.call(o).slice(8, -1).toLowerCase() == type;\n}\n/*\\\n * Snap.format\n [ method ]\n **\n * Replaces construction of type `{<name>}` to the corresponding argument\n **\n - token (string) string to format\n - json (object) object which properties are used as a replacement\n = (string) formatted string\n > Usage\n | // this draws a rectangular shape equivalent to \"M10,20h40v50h-40z\"\n | paper.path(Snap.format(\"M{x},{y}h{dim.width}v{dim.height}h{dim['negative width']}z\", {\n |     x: 10,\n |     y: 20,\n |     dim: {\n |         width: 40,\n |         height: 50,\n |         \"negative width\": -40\n |     }\n | }));\n\\*/\nSnap.format = (function () {\n    var tokenRegex = /\\{([^\\}]+)\\}/g,\n        objNotationRegex = /(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g, // matches .xxxxx or [\"xxxxx\"] to run over object properties\n        replacer = function (all, key, obj) {\n            var res = obj;\n            key.replace(objNotationRegex, function (all, name, quote, quotedName, isFunc) {\n                name = name || quotedName;\n                if (res) {\n                    if (name in res) {\n                        res = res[name];\n                    }\n                    typeof res == \"function\" && isFunc && (res = res());\n                }\n            });\n            res = (res == null || res == obj ? all : res) + \"\";\n            return res;\n        };\n    return function (str, obj) {\n        return Str(str).replace(tokenRegex, function (all, key) {\n            return replacer(all, key, obj);\n        });\n    };\n})();\nfunction clone(obj) {\n    if (typeof obj == \"function\" || Object(obj) !== obj) {\n        return obj;\n    }\n    var res = new obj.constructor;\n    for (var key in obj) if (obj[has](key)) {\n        res[key] = clone(obj[key]);\n    }\n    return res;\n}\nSnap._.clone = clone;\nfunction repush(array, item) {\n    for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\n        return array.push(array.splice(i, 1)[0]);\n    }\n}\nfunction cacher(f, scope, postprocessor) {\n    function newf() {\n        var arg = Array.prototype.slice.call(arguments, 0),\n            args = arg.join(\"\\u2400\"),\n            cache = newf.cache = newf.cache || {},\n            count = newf.count = newf.count || [];\n        if (cache[has](args)) {\n            repush(count, args);\n            return postprocessor ? postprocessor(cache[args]) : cache[args];\n        }\n        count.length >= 1e3 && delete cache[count.shift()];\n        count.push(args);\n        cache[args] = f.apply(scope, arg);\n        return postprocessor ? postprocessor(cache[args]) : cache[args];\n    }\n    return newf;\n}\nSnap._.cacher = cacher;\nfunction angle(x1, y1, x2, y2, x3, y3) {\n    if (x3 == null) {\n        var x = x1 - x2,\n            y = y1 - y2;\n        if (!x && !y) {\n            return 0;\n        }\n        return (180 + math.atan2(-y, -x) * 180 / PI + 360) % 360;\n    } else {\n        return angle(x1, y1, x3, y3) - angle(x2, y2, x3, y3);\n    }\n}\nfunction rad(deg) {\n    return deg % 360 * PI / 180;\n}\nfunction deg(rad) {\n    return rad * 180 / PI % 360;\n}\nfunction x_y() {\n    return this.x + S + this.y;\n}\nfunction x_y_w_h() {\n    return this.x + S + this.y + S + this.width + \" \\xd7 \" + this.height;\n}\n\n/*\\\n * Snap.rad\n [ method ]\n **\n * Transform angle to radians\n - deg (number) angle in degrees\n = (number) angle in radians\n\\*/\nSnap.rad = rad;\n/*\\\n * Snap.deg\n [ method ]\n **\n * Transform angle to degrees\n - rad (number) angle in radians\n = (number) angle in degrees\n\\*/\nSnap.deg = deg;\n/*\\\n * Snap.sin\n [ method ]\n **\n * Equivalent to `Math.sin()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) sin\n\\*/\nSnap.sin = function (angle) {\n    return math.sin(Snap.rad(angle));\n};\n/*\\\n * Snap.tan\n [ method ]\n **\n * Equivalent to `Math.tan()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) tan\n\\*/\nSnap.tan = function (angle) {\n    return math.tan(Snap.rad(angle));\n};\n/*\\\n * Snap.cos\n [ method ]\n **\n * Equivalent to `Math.cos()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) cos\n\\*/\nSnap.cos = function (angle) {\n    return math.cos(Snap.rad(angle));\n};\n/*\\\n * Snap.asin\n [ method ]\n **\n * Equivalent to `Math.asin()` only works with degrees, not radians.\n - num (number) value\n = (number) asin in degrees\n\\*/\nSnap.asin = function (num) {\n    return Snap.deg(math.asin(num));\n};\n/*\\\n * Snap.acos\n [ method ]\n **\n * Equivalent to `Math.acos()` only works with degrees, not radians.\n - num (number) value\n = (number) acos in degrees\n\\*/\nSnap.acos = function (num) {\n    return Snap.deg(math.acos(num));\n};\n/*\\\n * Snap.atan\n [ method ]\n **\n * Equivalent to `Math.atan()` only works with degrees, not radians.\n - num (number) value\n = (number) atan in degrees\n\\*/\nSnap.atan = function (num) {\n    return Snap.deg(math.atan(num));\n};\n/*\\\n * Snap.atan2\n [ method ]\n **\n * Equivalent to `Math.atan2()` only works with degrees, not radians.\n - num (number) value\n = (number) atan2 in degrees\n\\*/\nSnap.atan2 = function (num) {\n    return Snap.deg(math.atan2(num));\n};\n/*\\\n * Snap.angle\n [ method ]\n **\n * Returns an angle between two or three points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n - x3 (number) #optional x coord of third point\n - y3 (number) #optional y coord of third point\n = (number) angle in degrees\n\\*/\nSnap.angle = angle;\n/*\\\n * Snap.len\n [ method ]\n **\n * Returns distance between two points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len = function (x1, y1, x2, y2) {\n    return Math.sqrt(Snap.len2(x1, y1, x2, y2));\n};\n/*\\\n * Snap.len2\n [ method ]\n **\n * Returns squared distance between two points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len2 = function (x1, y1, x2, y2) {\n    return (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n};\n/*\\\n * Snap.closestPoint\n [ method ]\n **\n * Returns closest point to a given one on a given path.\n - path (Element) path element\n - x (number) x coord of a point\n - y (number) y coord of a point\n = (object) in format\n {\n    x (number) x coord of the point on the path\n    y (number) y coord of the point on the path\n    length (number) length of the path to the point\n    distance (number) distance from the given point to the path\n }\n\\*/\n// Copied from http://bl.ocks.org/mbostock/8027637\nSnap.closestPoint = function (path, x, y) {\n    function distance2(p) {\n        var dx = p.x - x,\n            dy = p.y - y;\n        return dx * dx + dy * dy;\n    }\n    var pathNode = path.node,\n        pathLength = pathNode.getTotalLength(),\n        precision = pathLength / pathNode.pathSegList.numberOfItems * .125,\n        best,\n        bestLength,\n        bestDistance = Infinity;\n\n    // linear scan for coarse approximation\n    for (var scan, scanLength = 0, scanDistance; scanLength <= pathLength; scanLength += precision) {\n        if ((scanDistance = distance2(scan = pathNode.getPointAtLength(scanLength))) < bestDistance) {\n            best = scan;\n            bestLength = scanLength;\n            bestDistance = scanDistance;\n        }\n    }\n\n    // binary search for precise estimate\n    precision *= .5;\n    while (precision > .5) {\n        var before,\n            after,\n            beforeLength,\n            afterLength,\n            beforeDistance,\n            afterDistance;\n        if ((beforeLength = bestLength - precision) >= 0 && (beforeDistance = distance2(before = pathNode.getPointAtLength(beforeLength))) < bestDistance) {\n            best = before;\n            bestLength = beforeLength;\n            bestDistance = beforeDistance;\n        } else if ((afterLength = bestLength + precision) <= pathLength && (afterDistance = distance2(after = pathNode.getPointAtLength(afterLength))) < bestDistance) {\n            best = after;\n            bestLength = afterLength;\n            bestDistance = afterDistance;\n        } else {\n            precision *= .5;\n        }\n    }\n\n    best = {\n        x: best.x,\n        y: best.y,\n        length: bestLength,\n        distance: Math.sqrt(bestDistance)\n    };\n    return best;\n}\n/*\\\n * Snap.is\n [ method ]\n **\n * Handy replacement for the `typeof` operator\n - o (…) any object or primitive\n - type (string) name of the type, e.g., `string`, `function`, `number`, etc.\n = (boolean) `true` if given value is of given type\n\\*/\nSnap.is = is;\n/*\\\n * Snap.snapTo\n [ method ]\n **\n * Snaps given value to given grid\n - values (array|number) given array of values or step of the grid\n - value (number) value to adjust\n - tolerance (number) #optional maximum distance to the target value that would trigger the snap. Default is `10`.\n = (number) adjusted value\n\\*/\nSnap.snapTo = function (values, value, tolerance) {\n    tolerance = is(tolerance, \"finite\") ? tolerance : 10;\n    if (is(values, \"array\")) {\n        var i = values.length;\n        while (i--) if (abs(values[i] - value) <= tolerance) {\n            return values[i];\n        }\n    } else {\n        values = +values;\n        var rem = value % values;\n        if (rem < tolerance) {\n            return value - rem;\n        }\n        if (rem > values - tolerance) {\n            return value - rem + values;\n        }\n    }\n    return value;\n};\n// Colour\n/*\\\n * Snap.getRGB\n [ method ]\n **\n * Parses color string as RGB object\n - color (string) color string in one of the following formats:\n # <ul>\n #     <li>Color name (<code>red</code>, <code>green</code>, <code>cornflowerblue</code>, etc)</li>\n #     <li>#••• — shortened HTML color: (<code>#000</code>, <code>#fc0</code>, etc.)</li>\n #     <li>#•••••• — full length HTML color: (<code>#000000</code>, <code>#bd2300</code>)</li>\n #     <li>rgb(•••, •••, •••) — red, green and blue channels values: (<code>rgb(200,&nbsp;100,&nbsp;0)</code>)</li>\n #     <li>rgba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>)</li>\n #     <li>rgba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>)</li>\n #     <li>hsba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsl(•••, •••, •••) — hue, saturation and luminosity values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;0.5)</code>)</li>\n #     <li>hsla(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsl(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsla(•••%, •••%, •••%, •••%) — also with opacity</li>\n # </ul>\n * Note that `%` can be used any time: `rgb(20%, 255, 50%)`.\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) true if string can't be parsed\n o }\n\\*/\nSnap.getRGB = cacher(function (colour) {\n    if (!colour || !!((colour = Str(colour)).indexOf(\"-\") + 1)) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    if (colour == \"none\") {\n        return {r: -1, g: -1, b: -1, hex: \"none\", toString: rgbtoString};\n    }\n    !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = toHex(colour));\n    if (!colour) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    var res,\n        red,\n        green,\n        blue,\n        opacity,\n        t,\n        values,\n        rgb = colour.match(colourRegExp);\n    if (rgb) {\n        if (rgb[2]) {\n            blue = toInt(rgb[2].substring(5), 16);\n            green = toInt(rgb[2].substring(3, 5), 16);\n            red = toInt(rgb[2].substring(1, 3), 16);\n        }\n        if (rgb[3]) {\n            blue = toInt((t = rgb[3].charAt(3)) + t, 16);\n            green = toInt((t = rgb[3].charAt(2)) + t, 16);\n            red = toInt((t = rgb[3].charAt(1)) + t, 16);\n        }\n        if (rgb[4]) {\n            values = rgb[4].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red *= 2.55);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green *= 2.55);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue *= 2.55);\n            rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n        }\n        if (rgb[5]) {\n            values = rgb[5].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsb2rgb(red, green, blue, opacity);\n        }\n        if (rgb[6]) {\n            values = rgb[6].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsl2rgb(red, green, blue, opacity);\n        }\n        red = mmin(math.round(red), 255);\n        green = mmin(math.round(green), 255);\n        blue = mmin(math.round(blue), 255);\n        opacity = mmin(mmax(opacity, 0), 1);\n        rgb = {r: red, g: green, b: blue, toString: rgbtoString};\n        rgb.hex = \"#\" + (16777216 | blue | green << 8 | red << 16).toString(16).slice(1);\n        rgb.opacity = is(opacity, \"finite\") ? opacity : 1;\n        return rgb;\n    }\n    return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n}, Snap);\n/*\\\n * Snap.hsb\n [ method ]\n **\n * Converts HSB values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - b (number) value or brightness\n = (string) hex representation of the color\n\\*/\nSnap.hsb = cacher(function (h, s, b) {\n    return Snap.hsb2rgb(h, s, b).hex;\n});\n/*\\\n * Snap.hsl\n [ method ]\n **\n * Converts HSL values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (string) hex representation of the color\n\\*/\nSnap.hsl = cacher(function (h, s, l) {\n    return Snap.hsl2rgb(h, s, l).hex;\n});\n/*\\\n * Snap.rgb\n [ method ]\n **\n * Converts RGB values to a hex representation of the color\n - r (number) red\n - g (number) green\n - b (number) blue\n = (string) hex representation of the color\n\\*/\nSnap.rgb = cacher(function (r, g, b, o) {\n    if (is(o, \"finite\")) {\n        var round = math.round;\n        return \"rgba(\" + [round(r), round(g), round(b), +o.toFixed(2)] + \")\";\n    }\n    return \"#\" + (16777216 | b | g << 8 | r << 16).toString(16).slice(1);\n});\nvar toHex = function (color) {\n    var i = glob.doc.getElementsByTagName(\"head\")[0] || glob.doc.getElementsByTagName(\"svg\")[0],\n        red = \"rgb(255, 0, 0)\";\n    toHex = cacher(function (color) {\n        if (color.toLowerCase() == \"red\") {\n            return red;\n        }\n        i.style.color = red;\n        i.style.color = color;\n        var out = glob.doc.defaultView.getComputedStyle(i, E).getPropertyValue(\"color\");\n        return out == red ? null : out;\n    });\n    return toHex(color);\n},\nhsbtoString = function () {\n    return \"hsb(\" + [this.h, this.s, this.b] + \")\";\n},\nhsltoString = function () {\n    return \"hsl(\" + [this.h, this.s, this.l] + \")\";\n},\nrgbtoString = function () {\n    return this.opacity == 1 || this.opacity == null ?\n            this.hex :\n            \"rgba(\" + [this.r, this.g, this.b, this.opacity] + \")\";\n},\nprepareRGB = function (r, g, b) {\n    if (g == null && is(r, \"object\") && \"r\" in r && \"g\" in r && \"b\" in r) {\n        b = r.b;\n        g = r.g;\n        r = r.r;\n    }\n    if (g == null && is(r, string)) {\n        var clr = Snap.getRGB(r);\n        r = clr.r;\n        g = clr.g;\n        b = clr.b;\n    }\n    if (r > 1 || g > 1 || b > 1) {\n        r /= 255;\n        g /= 255;\n        b /= 255;\n    }\n\n    return [r, g, b];\n},\npackageRGB = function (r, g, b, o) {\n    r = math.round(r * 255);\n    g = math.round(g * 255);\n    b = math.round(b * 255);\n    var rgb = {\n        r: r,\n        g: g,\n        b: b,\n        opacity: is(o, \"finite\") ? o : 1,\n        hex: Snap.rgb(r, g, b),\n        toString: rgbtoString\n    };\n    is(o, \"finite\") && (rgb.opacity = o);\n    return rgb;\n};\n/*\\\n * Snap.color\n [ method ]\n **\n * Parses the color string and returns an object featuring the color's component values\n - clr (string) color string in one of the supported formats (see @Snap.getRGB)\n = (object) Combined RGB/HSB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) `true` if string can't be parsed,\n o     h (number) hue,\n o     s (number) saturation,\n o     v (number) value (brightness),\n o     l (number) lightness\n o }\n\\*/\nSnap.color = function (clr) {\n    var rgb;\n    if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"b\" in clr) {\n        rgb = Snap.hsb2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"l\" in clr) {\n        rgb = Snap.hsl2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else {\n        if (is(clr, \"string\")) {\n            clr = Snap.getRGB(clr);\n        }\n        if (is(clr, \"object\") && \"r\" in clr && \"g\" in clr && \"b\" in clr && !(\"error\" in clr)) {\n            rgb = Snap.rgb2hsl(clr);\n            clr.h = rgb.h;\n            clr.s = rgb.s;\n            clr.l = rgb.l;\n            rgb = Snap.rgb2hsb(clr);\n            clr.v = rgb.b;\n        } else {\n            clr = {hex: \"none\"};\n            clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1;\n            clr.error = 1;\n        }\n    }\n    clr.toString = rgbtoString;\n    return clr;\n};\n/*\\\n * Snap.hsb2rgb\n [ method ]\n **\n * Converts HSB values to an RGB object\n - h (number) hue\n - s (number) saturation\n - v (number) value or brightness\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsb2rgb = function (h, s, v, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"b\" in h) {\n        v = h.b;\n        s = h.s;\n        o = h.o;\n        h = h.h;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = v * s;\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = v - C;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.hsl2rgb\n [ method ]\n **\n * Converts HSL values to an RGB object\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsl2rgb = function (h, s, l, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"l\" in h) {\n        l = h.l;\n        s = h.s;\n        h = h.h;\n    }\n    if (h > 1 || s > 1 || l > 1) {\n        h /= 360;\n        s /= 100;\n        l /= 100;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = 2 * s * (l < .5 ? l : 1 - l);\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = l - C / 2;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.rgb2hsb\n [ method ]\n **\n * Converts RGB values to an HSB object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSB object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     b (number) brightness\n o }\n\\*/\nSnap.rgb2hsb = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, V, C;\n    V = mmax(r, g, b);\n    C = V - mmin(r, g, b);\n    H = C == 0 ? null :\n        V == r ? (g - b) / C :\n        V == g ? (b - r) / C + 2 :\n                 (r - g) / C + 4;\n    H = (H + 360) % 6 * 60 / 360;\n    S = C == 0 ? 0 : C / V;\n    return {h: H, s: S, b: V, toString: hsbtoString};\n};\n/*\\\n * Snap.rgb2hsl\n [ method ]\n **\n * Converts RGB values to an HSL object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSL object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     l (number) luminosity\n o }\n\\*/\nSnap.rgb2hsl = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, L, M, m, C;\n    M = mmax(r, g, b);\n    m = mmin(r, g, b);\n    C = M - m;\n    H = C == 0 ? null :\n        M == r ? (g - b) / C :\n        M == g ? (b - r) / C + 2 :\n                 (r - g) / C + 4;\n    H = (H + 360) % 6 * 60 / 360;\n    L = (M + m) / 2;\n    S = C == 0 ? 0 :\n         L < .5 ? C / (2 * L) :\n                  C / (2 - 2 * L);\n    return {h: H, s: S, l: L, toString: hsltoString};\n};\n\n// Transformations\n/*\\\n * Snap.parsePathString\n [ method ]\n **\n * Utility method\n **\n * Parses given path string into an array of arrays of path segments\n - pathString (string|array) path string or array of segments (in the last case it is returned straight away)\n = (array) array of segments\n\\*/\nSnap.parsePathString = function (pathString) {\n    if (!pathString) {\n        return null;\n    }\n    var pth = Snap.path(pathString);\n    if (pth.arr) {\n        return Snap.path.clone(pth.arr);\n    }\n\n    var paramCounts = {a: 7, c: 6, o: 2, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, u: 3, z: 0},\n        data = [];\n    if (is(pathString, \"array\") && is(pathString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(pathString);\n    }\n    if (!data.length) {\n        Str(pathString).replace(pathCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            if (name == \"m\" && params.length > 2) {\n                data.push([b].concat(params.splice(0, 2)));\n                name = \"l\";\n                b = b == \"m\" ? \"l\" : \"L\";\n            }\n            if (name == \"o\" && params.length == 1) {\n                data.push([b, params[0]]);\n            }\n            if (name == \"r\") {\n                data.push([b].concat(params));\n            } else while (params.length >= paramCounts[name]) {\n                data.push([b].concat(params.splice(0, paramCounts[name])));\n                if (!paramCounts[name]) {\n                    break;\n                }\n            }\n        });\n    }\n    data.toString = Snap.path.toString;\n    pth.arr = Snap.path.clone(data);\n    return data;\n};\n/*\\\n * Snap.parseTransformString\n [ method ]\n **\n * Utility method\n **\n * Parses given transform string into an array of transformations\n - TString (string|array) transform string or array of transformations (in the last case it is returned straight away)\n = (array) array of transformations\n\\*/\nvar parseTransformString = Snap.parseTransformString = function (TString) {\n    if (!TString) {\n        return null;\n    }\n    var paramCounts = {r: 3, s: 4, t: 2, m: 6},\n        data = [];\n    if (is(TString, \"array\") && is(TString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(TString);\n    }\n    if (!data.length) {\n        Str(TString).replace(tCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            data.push([b].concat(params));\n        });\n    }\n    data.toString = Snap.path.toString;\n    return data;\n};\nfunction svgTransform2string(tstr) {\n    var res = [];\n    tstr = tstr.replace(/(?:^|\\s)(\\w+)\\(([^)]+)\\)/g, function (all, name, params) {\n        params = params.split(/\\s*,\\s*|\\s+/);\n        if (name == \"rotate\" && params.length == 1) {\n            params.push(0, 0);\n        }\n        if (name == \"scale\") {\n            if (params.length > 2) {\n                params = params.slice(0, 2);\n            } else if (params.length == 2) {\n                params.push(0, 0);\n            }\n            if (params.length == 1) {\n                params.push(params[0], 0, 0);\n            }\n        }\n        if (name == \"skewX\") {\n            res.push([\"m\", 1, 0, math.tan(rad(params[0])), 1, 0, 0]);\n        } else if (name == \"skewY\") {\n            res.push([\"m\", 1, math.tan(rad(params[0])), 0, 1, 0, 0]);\n        } else {\n            res.push([name.charAt(0)].concat(params));\n        }\n        return all;\n    });\n    return res;\n}\nSnap._.svgTransform2string = svgTransform2string;\nSnap._.rgTransform = /^[a-z][\\s]*-?\\.?\\d/i;\nfunction transform2matrix(tstr, bbox) {\n    var tdata = parseTransformString(tstr),\n        m = new Snap.Matrix;\n    if (tdata) {\n        for (var i = 0, ii = tdata.length; i < ii; i++) {\n            var t = tdata[i],\n                tlen = t.length,\n                command = Str(t[0]).toLowerCase(),\n                absolute = t[0] != command,\n                inver = absolute ? m.invert() : 0,\n                x1,\n                y1,\n                x2,\n                y2,\n                bb;\n            if (command == \"t\" && tlen == 2){\n                m.translate(t[1], 0);\n            } else if (command == \"t\" && tlen == 3) {\n                if (absolute) {\n                    x1 = inver.x(0, 0);\n                    y1 = inver.y(0, 0);\n                    x2 = inver.x(t[1], t[2]);\n                    y2 = inver.y(t[1], t[2]);\n                    m.translate(x2 - x1, y2 - y1);\n                } else {\n                    m.translate(t[1], t[2]);\n                }\n            } else if (command == \"r\") {\n                if (tlen == 2) {\n                    bb = bb || bbox;\n                    m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.rotate(t[1], x2, y2);\n                    } else {\n                        m.rotate(t[1], t[2], t[3]);\n                    }\n                }\n            } else if (command == \"s\") {\n                if (tlen == 2 || tlen == 3) {\n                    bb = bb || bbox;\n                    m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.scale(t[1], t[1], x2, y2);\n                    } else {\n                        m.scale(t[1], t[1], t[2], t[3]);\n                    }\n                } else if (tlen == 5) {\n                    if (absolute) {\n                        x2 = inver.x(t[3], t[4]);\n                        y2 = inver.y(t[3], t[4]);\n                        m.scale(t[1], t[2], x2, y2);\n                    } else {\n                        m.scale(t[1], t[2], t[3], t[4]);\n                    }\n                }\n            } else if (command == \"m\" && tlen == 7) {\n                m.add(t[1], t[2], t[3], t[4], t[5], t[6]);\n            }\n        }\n    }\n    return m;\n}\nSnap._.transform2matrix = transform2matrix;\nSnap._unit2px = unit2px;\nvar contains = glob.doc.contains || glob.doc.compareDocumentPosition ?\n    function (a, b) {\n        var adown = a.nodeType == 9 ? a.documentElement : a,\n            bup = b && b.parentNode;\n            return a == bup || !!(bup && bup.nodeType == 1 && (\n                adown.contains ?\n                    adown.contains(bup) :\n                    a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16\n            ));\n    } :\n    function (a, b) {\n        if (b) {\n            while (b) {\n                b = b.parentNode;\n                if (b == a) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\nfunction getSomeDefs(el) {\n    var p = el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) ||\n            el.node.parentNode && wrap(el.node.parentNode) ||\n            Snap.select(\"svg\") ||\n            Snap(0, 0),\n        pdefs = p.select(\"defs\"),\n        defs  = pdefs == null ? false : pdefs.node;\n    if (!defs) {\n        defs = make(\"defs\", p.node).node;\n    }\n    return defs;\n}\nfunction getSomeSVG(el) {\n    return el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) || Snap.select(\"svg\");\n}\nSnap._.getSomeDefs = getSomeDefs;\nSnap._.getSomeSVG = getSomeSVG;\nfunction unit2px(el, name, value) {\n    var svg = getSomeSVG(el).node,\n        out = {},\n        mgr = svg.querySelector(\".svg---mgr\");\n    if (!mgr) {\n        mgr = $(\"rect\");\n        $(mgr, {x: -9e9, y: -9e9, width: 10, height: 10, \"class\": \"svg---mgr\", fill: \"none\"});\n        svg.appendChild(mgr);\n    }\n    function getW(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {width: val});\n        try {\n            return mgr.getBBox().width;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function getH(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {height: val});\n        try {\n            return mgr.getBBox().height;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function set(nam, f) {\n        if (name == null) {\n            out[nam] = f(el.attr(nam) || 0);\n        } else if (nam == name) {\n            out = f(value == null ? el.attr(nam) || 0 : value);\n        }\n    }\n    switch (el.type) {\n        case \"rect\":\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        case \"image\":\n            set(\"width\", getW);\n            set(\"height\", getH);\n        case \"text\":\n            set(\"x\", getW);\n            set(\"y\", getH);\n        break;\n        case \"circle\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"r\", getW);\n        break;\n        case \"ellipse\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        break;\n        case \"line\":\n            set(\"x1\", getW);\n            set(\"x2\", getW);\n            set(\"y1\", getH);\n            set(\"y2\", getH);\n        break;\n        case \"marker\":\n            set(\"refX\", getW);\n            set(\"markerWidth\", getW);\n            set(\"refY\", getH);\n            set(\"markerHeight\", getH);\n        break;\n        case \"radialGradient\":\n            set(\"fx\", getW);\n            set(\"fy\", getH);\n        break;\n        case \"tspan\":\n            set(\"dx\", getW);\n            set(\"dy\", getH);\n        break;\n        default:\n            set(name, getW);\n    }\n    svg.removeChild(mgr);\n    return out;\n}\n/*\\\n * Snap.select\n [ method ]\n **\n * Wraps a DOM element specified by CSS selector as @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.select = function (query) {\n    query = Str(query).replace(/([^\\\\]):/g, \"$1\\\\:\");\n    return wrap(glob.doc.querySelector(query));\n};\n/*\\\n * Snap.selectAll\n [ method ]\n **\n * Wraps DOM elements specified by CSS selector as set or array of @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.selectAll = function (query) {\n    var nodelist = glob.doc.querySelectorAll(query),\n        set = (Snap.set || Array)();\n    for (var i = 0; i < nodelist.length; i++) {\n        set.push(wrap(nodelist[i]));\n    }\n    return set;\n};\n\nfunction add2group(list) {\n    if (!is(list, \"array\")) {\n        list = Array.prototype.slice.call(arguments, 0);\n    }\n    var i = 0,\n        j = 0,\n        node = this.node;\n    while (this[i]) delete this[i++];\n    for (i = 0; i < list.length; i++) {\n        if (list[i].type == \"set\") {\n            list[i].forEach(function (el) {\n                node.appendChild(el.node);\n            });\n        } else {\n            node.appendChild(list[i].node);\n        }\n    }\n    var children = node.childNodes;\n    for (i = 0; i < children.length; i++) {\n        this[j++] = wrap(children[i]);\n    }\n    return this;\n}\n// Hub garbage collector every 10s\nsetInterval(function () {\n    for (var key in hub) if (hub[has](key)) {\n        var el = hub[key],\n            node = el.node;\n        if (el.type != \"svg\" && !node.ownerSVGElement || el.type == \"svg\" && (!node.parentNode || \"ownerSVGElement\" in node.parentNode && !node.ownerSVGElement)) {\n            delete hub[key];\n        }\n    }\n}, 1e4);\nfunction Element(el) {\n    if (el.snap in hub) {\n        return hub[el.snap];\n    }\n    var svg;\n    try {\n        svg = el.ownerSVGElement;\n    } catch(e) {}\n    /*\\\n     * Element.node\n     [ property (object) ]\n     **\n     * Gives you a reference to the DOM object, so you can assign event handlers or just mess around.\n     > Usage\n     | // draw a circle at coordinate 10,10 with radius of 10\n     | var c = paper.circle(10, 10, 10);\n     | c.node.onclick = function () {\n     |     c.attr(\"fill\", \"red\");\n     | };\n    \\*/\n    this.node = el;\n    if (svg) {\n        this.paper = new Paper(svg);\n    }\n    /*\\\n     * Element.type\n     [ property (string) ]\n     **\n     * SVG tag name of the given element.\n    \\*/\n    this.type = el.tagName || el.nodeName;\n    var id = this.id = ID(this);\n    this.anims = {};\n    this._ = {\n        transform: []\n    };\n    el.snap = id;\n    hub[id] = this;\n    if (this.type == \"g\") {\n        this.add = add2group;\n    }\n    if (this.type in {g: 1, mask: 1, pattern: 1, symbol: 1}) {\n        for (var method in Paper.prototype) if (Paper.prototype[has](method)) {\n            this[method] = Paper.prototype[method];\n        }\n    }\n}\n   /*\\\n     * Element.attr\n     [ method ]\n     **\n     * Gets or sets given attributes of the element.\n     **\n     - params (object) contains key-value pairs of attributes you want to set\n     * or\n     - param (string) name of the attribute\n     = (Element) the current element\n     * or\n     = (string) value of attribute\n     > Usage\n     | el.attr({\n     |     fill: \"#fc0\",\n     |     stroke: \"#000\",\n     |     strokeWidth: 2, // CamelCase...\n     |     \"fill-opacity\": 0.5, // or dash-separated names\n     |     width: \"*=2\" // prefixed values\n     | });\n     | console.log(el.attr(\"fill\")); // #fc0\n     * Prefixed values in format `\"+=10\"` supported. All four operations\n     * (`+`, `-`, `*` and `/`) could be used. Optionally you can use units for `+`\n     * and `-`: `\"+=2em\"`.\n    \\*/\n    Element.prototype.attr = function (params, value) {\n        var el = this,\n            node = el.node;\n        if (!params) {\n            if (node.nodeType != 1) {\n                return {\n                    text: node.nodeValue\n                };\n            }\n            var attr = node.attributes,\n                out = {};\n            for (var i = 0, ii = attr.length; i < ii; i++) {\n                out[attr[i].nodeName] = attr[i].nodeValue;\n            }\n            return out;\n        }\n        if (is(params, \"string\")) {\n            if (arguments.length > 1) {\n                var json = {};\n                json[params] = value;\n                params = json;\n            } else {\n                return eve(\"snap.util.getattr.\" + params, el).firstDefined();\n            }\n        }\n        for (var att in params) {\n            if (params[has](att)) {\n                eve(\"snap.util.attr.\" + att, el, params[att]);\n            }\n        }\n        return el;\n    };\n/*\\\n * Snap.parse\n [ method ]\n **\n * Parses SVG fragment and converts it into a @Fragment\n **\n - svg (string) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.parse = function (svg) {\n    var f = glob.doc.createDocumentFragment(),\n        full = true,\n        div = glob.doc.createElement(\"div\");\n    svg = Str(svg);\n    if (!svg.match(/^\\s*<\\s*svg(?:\\s|>)/)) {\n        svg = \"<svg>\" + svg + \"</svg>\";\n        full = false;\n    }\n    div.innerHTML = svg;\n    svg = div.getElementsByTagName(\"svg\")[0];\n    if (svg) {\n        if (full) {\n            f = svg;\n        } else {\n            while (svg.firstChild) {\n                f.appendChild(svg.firstChild);\n            }\n        }\n    }\n    return new Fragment(f);\n};\nfunction Fragment(frag) {\n    this.node = frag;\n}\n/*\\\n * Snap.fragment\n [ method ]\n **\n * Creates a DOM fragment from a given list of elements or strings\n **\n - varargs (…) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.fragment = function () {\n    var args = Array.prototype.slice.call(arguments, 0),\n        f = glob.doc.createDocumentFragment();\n    for (var i = 0, ii = args.length; i < ii; i++) {\n        var item = args[i];\n        if (item.node && item.node.nodeType) {\n            f.appendChild(item.node);\n        }\n        if (item.nodeType) {\n            f.appendChild(item);\n        }\n        if (typeof item == \"string\") {\n            f.appendChild(Snap.parse(item).node);\n        }\n    }\n    return new Fragment(f);\n};\n\nfunction make(name, parent) {\n    var res = $(name);\n    parent.appendChild(res);\n    var el = wrap(res);\n    return el;\n}\nfunction Paper(w, h) {\n    var res,\n        desc,\n        defs,\n        proto = Paper.prototype;\n    if (w && w.tagName && w.tagName.toLowerCase() == \"svg\") {\n        if (w.snap in hub) {\n            return hub[w.snap];\n        }\n        var doc = w.ownerDocument;\n        res = new Element(w);\n        desc = w.getElementsByTagName(\"desc\")[0];\n        defs = w.getElementsByTagName(\"defs\")[0];\n        if (!desc) {\n            desc = $(\"desc\");\n            desc.appendChild(doc.createTextNode(\"Created with Snap\"));\n            res.node.appendChild(desc);\n        }\n        if (!defs) {\n            defs = $(\"defs\");\n            res.node.appendChild(defs);\n        }\n        res.defs = defs;\n        for (var key in proto) if (proto[has](key)) {\n            res[key] = proto[key];\n        }\n        res.paper = res.root = res;\n    } else {\n        res = make(\"svg\", glob.doc.body);\n        $(res.node, {\n            height: h,\n            version: 1.1,\n            width: w,\n            xmlns: xmlns\n        });\n    }\n    return res;\n}\nfunction wrap(dom) {\n    if (!dom) {\n        return dom;\n    }\n    if (dom instanceof Element || dom instanceof Fragment) {\n        return dom;\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"svg\") {\n        return new Paper(dom);\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"object\" && dom.type == \"image/svg+xml\") {\n        return new Paper(dom.contentDocument.getElementsByTagName(\"svg\")[0]);\n    }\n    return new Element(dom);\n}\n\nSnap._.make = make;\nSnap._.wrap = wrap;\n/*\\\n * Paper.el\n [ method ]\n **\n * Creates an element on paper with a given name and no attributes\n **\n - name (string) tag name\n - attr (object) attributes\n = (Element) the current element\n > Usage\n | var c = paper.circle(10, 10, 10); // is the same as...\n | var c = paper.el(\"circle\").attr({\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n | // and the same as\n | var c = paper.el(\"circle\", {\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n\\*/\nPaper.prototype.el = function (name, attr) {\n    var el = make(name, this.node);\n    attr && el.attr(attr);\n    return el;\n};\n/*\\\n * Element.children\n [ method ]\n **\n * Returns array of all the children of the element.\n = (array) array of Elements\n\\*/\nElement.prototype.children = function () {\n    var out = [],\n        ch = this.node.childNodes;\n    for (var i = 0, ii = ch.length; i < ii; i++) {\n        out[i] = Snap(ch[i]);\n    }\n    return out;\n};\nfunction jsonFiller(root, o) {\n    for (var i = 0, ii = root.length; i < ii; i++) {\n        var item = {\n                type: root[i].type,\n                attr: root[i].attr()\n            },\n            children = root[i].children();\n        o.push(item);\n        if (children.length) {\n            jsonFiller(children, item.childNodes = []);\n        }\n    }\n}\n/*\\\n * Element.toJSON\n [ method ]\n **\n * Returns object representation of the given element and all its children.\n = (object) in format\n o {\n o     type (string) this.type,\n o     attr (object) attributes map,\n o     childNodes (array) optional array of children in the same format\n o }\n\\*/\nElement.prototype.toJSON = function () {\n    var out = [];\n    jsonFiller([this], out);\n    return out[0];\n};\n// default\neve.on(\"snap.util.getattr\", function () {\n    var att = eve.nt();\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    var css = att.replace(/[A-Z]/g, function (letter) {\n        return \"-\" + letter.toLowerCase();\n    });\n    if (cssAttr[has](css)) {\n        return this.node.ownerDocument.defaultView.getComputedStyle(this.node, null).getPropertyValue(css);\n    } else {\n        return $(this.node, att);\n    }\n});\nvar cssAttr = {\n    \"alignment-baseline\": 0,\n    \"baseline-shift\": 0,\n    \"clip\": 0,\n    \"clip-path\": 0,\n    \"clip-rule\": 0,\n    \"color\": 0,\n    \"color-interpolation\": 0,\n    \"color-interpolation-filters\": 0,\n    \"color-profile\": 0,\n    \"color-rendering\": 0,\n    \"cursor\": 0,\n    \"direction\": 0,\n    \"display\": 0,\n    \"dominant-baseline\": 0,\n    \"enable-background\": 0,\n    \"fill\": 0,\n    \"fill-opacity\": 0,\n    \"fill-rule\": 0,\n    \"filter\": 0,\n    \"flood-color\": 0,\n    \"flood-opacity\": 0,\n    \"font\": 0,\n    \"font-family\": 0,\n    \"font-size\": 0,\n    \"font-size-adjust\": 0,\n    \"font-stretch\": 0,\n    \"font-style\": 0,\n    \"font-variant\": 0,\n    \"font-weight\": 0,\n    \"glyph-orientation-horizontal\": 0,\n    \"glyph-orientation-vertical\": 0,\n    \"image-rendering\": 0,\n    \"kerning\": 0,\n    \"letter-spacing\": 0,\n    \"lighting-color\": 0,\n    \"marker\": 0,\n    \"marker-end\": 0,\n    \"marker-mid\": 0,\n    \"marker-start\": 0,\n    \"mask\": 0,\n    \"opacity\": 0,\n    \"overflow\": 0,\n    \"pointer-events\": 0,\n    \"shape-rendering\": 0,\n    \"stop-color\": 0,\n    \"stop-opacity\": 0,\n    \"stroke\": 0,\n    \"stroke-dasharray\": 0,\n    \"stroke-dashoffset\": 0,\n    \"stroke-linecap\": 0,\n    \"stroke-linejoin\": 0,\n    \"stroke-miterlimit\": 0,\n    \"stroke-opacity\": 0,\n    \"stroke-width\": 0,\n    \"text-anchor\": 0,\n    \"text-decoration\": 0,\n    \"text-rendering\": 0,\n    \"unicode-bidi\": 0,\n    \"visibility\": 0,\n    \"word-spacing\": 0,\n    \"writing-mode\": 0\n};\n\neve.on(\"snap.util.attr\", function (value) {\n    var att = eve.nt(),\n        attr = {};\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    attr[att] = value;\n    var style = att.replace(/-(\\w)/gi, function (all, letter) {\n            return letter.toUpperCase();\n        }),\n        css = att.replace(/[A-Z]/g, function (letter) {\n            return \"-\" + letter.toLowerCase();\n        });\n    if (cssAttr[has](css)) {\n        this.node.style[style] = value == null ? E : value;\n    } else {\n        $(this.node, attr);\n    }\n});\n(function (proto) {}(Paper.prototype));\n\n// simple ajax\n/*\\\n * Snap.ajax\n [ method ]\n **\n * Simple implementation of Ajax\n **\n - url (string) URL\n - postData (object|string) data for post request\n - callback (function) callback\n - scope (object) #optional scope of callback\n * or\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n = (XMLHttpRequest) the XMLHttpRequest object, just in case\n\\*/\nSnap.ajax = function (url, postData, callback, scope){\n    var req = new XMLHttpRequest,\n        id = ID();\n    if (req) {\n        if (is(postData, \"function\")) {\n            scope = callback;\n            callback = postData;\n            postData = null;\n        } else if (is(postData, \"object\")) {\n            var pd = [];\n            for (var key in postData) if (postData.hasOwnProperty(key)) {\n                pd.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(postData[key]));\n            }\n            postData = pd.join(\"&\");\n        }\n        req.open(postData ? \"POST\" : \"GET\", url, true);\n        if (postData) {\n            req.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n            req.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n        }\n        if (callback) {\n            eve.once(\"snap.ajax.\" + id + \".0\", callback);\n            eve.once(\"snap.ajax.\" + id + \".200\", callback);\n            eve.once(\"snap.ajax.\" + id + \".304\", callback);\n        }\n        req.onreadystatechange = function() {\n            if (req.readyState != 4) return;\n            eve(\"snap.ajax.\" + id + \".\" + req.status, scope, req);\n        };\n        if (req.readyState == 4) {\n            return req;\n        }\n        req.send(postData);\n        return req;\n    }\n};\n/*\\\n * Snap.load\n [ method ]\n **\n * Loads external SVG file as a @Fragment (see @Snap.ajax for more advanced AJAX)\n **\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n\\*/\nSnap.load = function (url, callback, scope) {\n    Snap.ajax(url, function (req) {\n        var f = Snap.parse(req.responseText);\n        scope ? callback.call(scope, f) : callback(f);\n    });\n};\nvar getOffset = function (elem) {\n    var box = elem.getBoundingClientRect(),\n        doc = elem.ownerDocument,\n        body = doc.body,\n        docElem = doc.documentElement,\n        clientTop = docElem.clientTop || body.clientTop || 0, clientLeft = docElem.clientLeft || body.clientLeft || 0,\n        top  = box.top  + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop ) - clientTop,\n        left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;\n    return {\n        y: top,\n        x: left\n    };\n};\n/*\\\n * Snap.getElementByPoint\n [ method ]\n **\n * Returns you topmost element under given point.\n **\n = (object) Snap element object\n - x (number) x coordinate from the top left corner of the window\n - y (number) y coordinate from the top left corner of the window\n > Usage\n | Snap.getElementByPoint(mouseX, mouseY).attr({stroke: \"#f00\"});\n\\*/\nSnap.getElementByPoint = function (x, y) {\n    var paper = this,\n        svg = paper.canvas,\n        target = glob.doc.elementFromPoint(x, y);\n    if (glob.win.opera && target.tagName == \"svg\") {\n        var so = getOffset(target),\n            sr = target.createSVGRect();\n        sr.x = x - so.x;\n        sr.y = y - so.y;\n        sr.width = sr.height = 1;\n        var hits = target.getIntersectionList(sr, null);\n        if (hits.length) {\n            target = hits[hits.length - 1];\n        }\n    }\n    if (!target) {\n        return null;\n    }\n    return wrap(target);\n};\n/*\\\n * Snap.plugin\n [ method ]\n **\n * Let you write plugins. You pass in a function with five arguments, like this:\n | Snap.plugin(function (Snap, Element, Paper, global, Fragment) {\n |     Snap.newmethod = function () {};\n |     Element.prototype.newmethod = function () {};\n |     Paper.prototype.newmethod = function () {};\n | });\n * Inside the function you have access to all main objects (and their\n * prototypes). This allow you to extend anything you want.\n **\n - f (function) your plugin body\n\\*/\nSnap.plugin = function (f) {\n    f(Snap, Element, Paper, glob, Fragment);\n};\nglob.win.Snap = Snap;\nreturn Snap;\n}(window || this));\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        unit2px = Snap._unit2px,\n        $ = Snap._.$,\n        make = Snap._.make,\n        getSomeDefs = Snap._.getSomeDefs,\n        has = \"hasOwnProperty\",\n        wrap = Snap._.wrap;\n    /*\\\n     * Element.getBBox\n     [ method ]\n     **\n     * Returns the bounding box descriptor for the given element\n     **\n     = (object) bounding box descriptor:\n     o {\n     o     cx: (number) x of the center,\n     o     cy: (number) x of the center,\n     o     h: (number) height,\n     o     height: (number) height,\n     o     path: (string) path command for the box,\n     o     r0: (number) radius of a circle that fully encloses the box,\n     o     r1: (number) radius of the smallest circle that can be enclosed,\n     o     r2: (number) radius of the largest circle that can be enclosed,\n     o     vb: (string) box as a viewbox command,\n     o     w: (number) width,\n     o     width: (number) width,\n     o     x2: (number) x of the right side,\n     o     x: (number) x of the left side,\n     o     y2: (number) y of the bottom edge,\n     o     y: (number) y of the top edge\n     o }\n    \\*/\n    elproto.getBBox = function (isWithoutTransform) {\n        if (this.type == \"tspan\") {\n            return Snap._.box(this.node.getClientRects().item(0));\n        }\n        if (!Snap.Matrix || !Snap.path) {\n            return this.node.getBBox();\n        }\n        var el = this,\n            m = new Snap.Matrix;\n        if (el.removed) {\n            return Snap._.box();\n        }\n        while (el.type == \"use\") {\n            if (!isWithoutTransform) {\n                m = m.add(el.transform().localMatrix.translate(el.attr(\"x\") || 0, el.attr(\"y\") || 0));\n            }\n            if (el.original) {\n                el = el.original;\n            } else {\n                var href = el.attr(\"xlink:href\");\n                el = el.original = el.node.ownerDocument.getElementById(href.substring(href.indexOf(\"#\") + 1));\n            }\n        }\n        var _ = el._,\n            pathfinder = Snap.path.get[el.type] || Snap.path.get.deflt;\n        try {\n            if (isWithoutTransform) {\n                _.bboxwt = pathfinder ? Snap.path.getBBox(el.realPath = pathfinder(el)) : Snap._.box(el.node.getBBox());\n                return Snap._.box(_.bboxwt);\n            } else {\n                el.realPath = pathfinder(el);\n                el.matrix = el.transform().localMatrix;\n                _.bbox = Snap.path.getBBox(Snap.path.map(el.realPath, m.add(el.matrix)));\n                return Snap._.box(_.bbox);\n            }\n        } catch (e) {\n            // Firefox doesn’t give you bbox of hidden element\n            return Snap._.box();\n        }\n    };\n    var propString = function () {\n        return this.string;\n    };\n    function extractTransform(el, tstr) {\n        if (tstr == null) {\n            var doReturn = true;\n            if (el.type == \"linearGradient\" || el.type == \"radialGradient\") {\n                tstr = el.node.getAttribute(\"gradientTransform\");\n            } else if (el.type == \"pattern\") {\n                tstr = el.node.getAttribute(\"patternTransform\");\n            } else {\n                tstr = el.node.getAttribute(\"transform\");\n            }\n            if (!tstr) {\n                return new Snap.Matrix;\n            }\n            tstr = Snap._.svgTransform2string(tstr);\n        } else {\n            if (!Snap._.rgTransform.test(tstr)) {\n                tstr = Snap._.svgTransform2string(tstr);\n            } else {\n                tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, el._.transform || \"\");\n            }\n            if (is(tstr, \"array\")) {\n                tstr = Snap.path ? Snap.path.toString.call(tstr) : Str(tstr);\n            }\n            el._.transform = tstr;\n        }\n        var m = Snap._.transform2matrix(tstr, el.getBBox(1));\n        if (doReturn) {\n            return m;\n        } else {\n            el.matrix = m;\n        }\n    }\n    /*\\\n     * Element.transform\n     [ method ]\n     **\n     * Gets or sets transformation of the element\n     **\n     - tstr (string) transform string in Snap or SVG format\n     = (Element) the current element\n     * or\n     = (object) transformation descriptor:\n     o {\n     o     string (string) transform string,\n     o     globalMatrix (Matrix) matrix of all transformations applied to element or its parents,\n     o     localMatrix (Matrix) matrix of transformations applied only to the element,\n     o     diffMatrix (Matrix) matrix of difference between global and local transformations,\n     o     global (string) global transformation as string,\n     o     local (string) local transformation as string,\n     o     toString (function) returns `string` property\n     o }\n    \\*/\n    elproto.transform = function (tstr) {\n        var _ = this._;\n        if (tstr == null) {\n            var papa = this,\n                global = new Snap.Matrix(this.node.getCTM()),\n                local = extractTransform(this),\n                ms = [local],\n                m = new Snap.Matrix,\n                i,\n                localString = local.toTransformString(),\n                string = Str(local) == Str(this.matrix) ?\n                            Str(_.transform) : localString;\n            while (papa.type != \"svg\" && (papa = papa.parent())) {\n                ms.push(extractTransform(papa));\n            }\n            i = ms.length;\n            while (i--) {\n                m.add(ms[i]);\n            }\n            return {\n                string: string,\n                globalMatrix: global,\n                totalMatrix: m,\n                localMatrix: local,\n                diffMatrix: global.clone().add(local.invert()),\n                global: global.toTransformString(),\n                total: m.toTransformString(),\n                local: localString,\n                toString: propString\n            };\n        }\n        if (tstr instanceof Snap.Matrix) {\n            this.matrix = tstr;\n            this._.transform = tstr.toTransformString();\n        } else {\n            extractTransform(this, tstr);\n        }\n\n        if (this.node) {\n            if (this.type == \"linearGradient\" || this.type == \"radialGradient\") {\n                $(this.node, {gradientTransform: this.matrix});\n            } else if (this.type == \"pattern\") {\n                $(this.node, {patternTransform: this.matrix});\n            } else {\n                $(this.node, {transform: this.matrix});\n            }\n        }\n\n        return this;\n    };\n    /*\\\n     * Element.parent\n     [ method ]\n     **\n     * Returns the element's parent\n     **\n     = (Element) the parent element\n    \\*/\n    elproto.parent = function () {\n        return wrap(this.node.parentNode);\n    };\n    /*\\\n     * Element.append\n     [ method ]\n     **\n     * Appends the given element to current one\n     **\n     - el (Element|Set) element to append\n     = (Element) the parent element\n    \\*/\n    /*\\\n     * Element.add\n     [ method ]\n     **\n     * See @Element.append\n    \\*/\n    elproto.append = elproto.add = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this;\n                el.forEach(function (el) {\n                    it.add(el);\n                });\n                return this;\n            }\n            el = wrap(el);\n            this.node.appendChild(el.node);\n            el.paper = this.paper;\n        }\n        return this;\n    };\n    /*\\\n     * Element.appendTo\n     [ method ]\n     **\n     * Appends the current element to the given one\n     **\n     - el (Element) parent element to append to\n     = (Element) the child element\n    \\*/\n    elproto.appendTo = function (el) {\n        if (el) {\n            el = wrap(el);\n            el.append(this);\n        }\n        return this;\n    };\n    /*\\\n     * Element.prepend\n     [ method ]\n     **\n     * Prepends the given element to the current one\n     **\n     - el (Element) element to prepend\n     = (Element) the parent element\n    \\*/\n    elproto.prepend = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this,\n                    first;\n                el.forEach(function (el) {\n                    if (first) {\n                        first.after(el);\n                    } else {\n                        it.prepend(el);\n                    }\n                    first = el;\n                });\n                return this;\n            }\n            el = wrap(el);\n            var parent = el.parent();\n            this.node.insertBefore(el.node, this.node.firstChild);\n            this.add && this.add();\n            el.paper = this.paper;\n            this.parent() && this.parent().add();\n            parent && parent.add();\n        }\n        return this;\n    };\n    /*\\\n     * Element.prependTo\n     [ method ]\n     **\n     * Prepends the current element to the given one\n     **\n     - el (Element) parent element to prepend to\n     = (Element) the child element\n    \\*/\n    elproto.prependTo = function (el) {\n        el = wrap(el);\n        el.prepend(this);\n        return this;\n    };\n    /*\\\n     * Element.before\n     [ method ]\n     **\n     * Inserts given element before the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.before = function (el) {\n        if (el.type == \"set\") {\n            var it = this;\n            el.forEach(function (el) {\n                var parent = el.parent();\n                it.node.parentNode.insertBefore(el.node, it.node);\n                parent && parent.add();\n            });\n            this.parent().add();\n            return this;\n        }\n        el = wrap(el);\n        var parent = el.parent();\n        this.node.parentNode.insertBefore(el.node, this.node);\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.after\n     [ method ]\n     **\n     * Inserts given element after the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.after = function (el) {\n        el = wrap(el);\n        var parent = el.parent();\n        if (this.node.nextSibling) {\n            this.node.parentNode.insertBefore(el.node, this.node.nextSibling);\n        } else {\n            this.node.parentNode.appendChild(el.node);\n        }\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.insertBefore\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertBefore = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.insertAfter\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertAfter = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node.nextSibling);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.remove\n     [ method ]\n     **\n     * Removes element from the DOM\n     = (Element) the detached element\n    \\*/\n    elproto.remove = function () {\n        var parent = this.parent();\n        this.node.parentNode && this.node.parentNode.removeChild(this.node);\n        delete this.paper;\n        this.removed = true;\n        parent && parent.add();\n        return this;\n    };\n    /*\\\n     * Element.select\n     [ method ]\n     **\n     * Gathers the nested @Element matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Element) result of query selection\n    \\*/\n    elproto.select = function (query) {\n        return wrap(this.node.querySelector(query));\n    };\n    /*\\\n     * Element.selectAll\n     [ method ]\n     **\n     * Gathers nested @Element objects matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Set|array) result of query selection\n    \\*/\n    elproto.selectAll = function (query) {\n        var nodelist = this.node.querySelectorAll(query),\n            set = (Snap.set || Array)();\n        for (var i = 0; i < nodelist.length; i++) {\n            set.push(wrap(nodelist[i]));\n        }\n        return set;\n    };\n    /*\\\n     * Element.asPX\n     [ method ]\n     **\n     * Returns given attribute of the element as a `px` value (not %, em, etc.)\n     **\n     - attr (string) attribute name\n     - value (string) #optional attribute value\n     = (Element) result of query selection\n    \\*/\n    elproto.asPX = function (attr, value) {\n        if (value == null) {\n            value = this.attr(attr);\n        }\n        return +unit2px(this, attr, value);\n    };\n    // SIERRA Element.use(): I suggest adding a note about how to access the original element the returned <use> instantiates. It's a part of SVG with which ordinary web developers may be least familiar.\n    /*\\\n     * Element.use\n     [ method ]\n     **\n     * Creates a `<use>` element linked to the current element\n     **\n     = (Element) the `<use>` element\n    \\*/\n    elproto.use = function () {\n        var use,\n            id = this.node.id;\n        if (!id) {\n            id = this.id;\n            $(this.node, {\n                id: id\n            });\n        }\n        if (this.type == \"linearGradient\" || this.type == \"radialGradient\" ||\n            this.type == \"pattern\") {\n            use = make(this.type, this.node.parentNode);\n        } else {\n            use = make(\"use\", this.node.parentNode);\n        }\n        $(use.node, {\n            \"xlink:href\": \"#\" + id\n        });\n        use.original = this;\n        return use;\n    };\n    function fixids(el) {\n        var els = el.selectAll(\"*\"),\n            it,\n            url = /^\\s*url\\((\"|'|)(.*)\\1\\)\\s*$/,\n            ids = [],\n            uses = {};\n        function urltest(it, name) {\n            var val = $(it.node, name);\n            val = val && val.match(url);\n            val = val && val[2];\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    var attr = {};\n                    attr[name] = Snap.url(id);\n                    $(it.node, attr);\n                });\n            }\n        }\n        function linktest(it) {\n            var val = $(it.node, \"xlink:href\");\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    it.attr(\"xlink:href\", \"#\" + id);\n                });\n            }\n        }\n        for (var i = 0, ii = els.length; i < ii; i++) {\n            it = els[i];\n            urltest(it, \"fill\");\n            urltest(it, \"stroke\");\n            urltest(it, \"filter\");\n            urltest(it, \"mask\");\n            urltest(it, \"clip-path\");\n            linktest(it);\n            var oldid = $(it.node, \"id\");\n            if (oldid) {\n                $(it.node, {id: it.id});\n                ids.push({\n                    old: oldid,\n                    id: it.id\n                });\n            }\n        }\n        for (i = 0, ii = ids.length; i < ii; i++) {\n            var fs = uses[ids[i].old];\n            if (fs) {\n                for (var j = 0, jj = fs.length; j < jj; j++) {\n                    fs[j](ids[i].id);\n                }\n            }\n        }\n    }\n    /*\\\n     * Element.clone\n     [ method ]\n     **\n     * Creates a clone of the element and inserts it after the element\n     **\n     = (Element) the clone\n    \\*/\n    elproto.clone = function () {\n        var clone = wrap(this.node.cloneNode(true));\n        if ($(clone.node, \"id\")) {\n            $(clone.node, {id: clone.id});\n        }\n        fixids(clone);\n        clone.insertAfter(this);\n        return clone;\n    };\n    /*\\\n     * Element.toDefs\n     [ method ]\n     **\n     * Moves element to the shared `<defs>` area\n     **\n     = (Element) the element\n    \\*/\n    elproto.toDefs = function () {\n        var defs = getSomeDefs(this);\n        defs.appendChild(this.node);\n        return this;\n    };\n    /*\\\n     * Element.toPattern\n     [ method ]\n     **\n     * Creates a `<pattern>` element from the current element\n     **\n     * To create a pattern you have to specify the pattern rect:\n     - x (string|number)\n     - y (string|number)\n     - width (string|number)\n     - height (string|number)\n     = (Element) the `<pattern>` element\n     * You can use pattern later on as an argument for `fill` attribute:\n     | var p = paper.path(\"M10-5-10,15M15,0,0,15M0-5-20,15\").attr({\n     |         fill: \"none\",\n     |         stroke: \"#bada55\",\n     |         strokeWidth: 5\n     |     }).pattern(0, 0, 10, 10),\n     |     c = paper.circle(200, 200, 100);\n     | c.attr({\n     |     fill: p\n     | });\n    \\*/\n    elproto.pattern = elproto.toPattern = function (x, y, width, height) {\n        var p = make(\"pattern\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        $(p.node, {\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            patternUnits: \"userSpaceOnUse\",\n            id: p.id,\n            viewBox: [x, y, width, height].join(\" \")\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n// SIERRA Element.marker(): clarify what a reference point is. E.g., helps you offset the object from its edge such as when centering it over a path.\n// SIERRA Element.marker(): I suggest the method should accept default reference point values.  Perhaps centered with (refX = width/2) and (refY = height/2)? Also, couldn't it assume the element's current _width_ and _height_? And please specify what _x_ and _y_ mean: offsets? If so, from where?  Couldn't they also be assigned default values?\n    /*\\\n     * Element.marker\n     [ method ]\n     **\n     * Creates a `<marker>` element from the current element\n     **\n     * To create a marker you have to specify the bounding rect and reference point:\n     - x (number)\n     - y (number)\n     - width (number)\n     - height (number)\n     - refX (number)\n     - refY (number)\n     = (Element) the `<marker>` element\n     * You can specify the marker later as an argument for `marker-start`, `marker-end`, `marker-mid`, and `marker` attributes. The `marker` attribute places the marker at every point along the path, and `marker-mid` places them at every point except the start and end.\n    \\*/\n    // TODO add usage for markers\n    elproto.marker = function (x, y, width, height, refX, refY) {\n        var p = make(\"marker\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            refX = x.refX || x.cx;\n            refY = x.refY || x.cy;\n            x = x.x;\n        }\n        $(p.node, {\n            viewBox: [x, y, width, height].join(\" \"),\n            markerWidth: width,\n            markerHeight: height,\n            orient: \"auto\",\n            refX: refX || 0,\n            refY: refY || 0,\n            id: p.id\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n    var eldata = {};\n    /*\\\n     * Element.data\n     [ method ]\n     **\n     * Adds or retrieves given value associated with given key. (Don’t confuse\n     * with `data-` attributes)\n     *\n     * See also @Element.removeData\n     - key (string) key to store data\n     - value (any) #optional value to store\n     = (object) @Element\n     * or, if value is not specified:\n     = (any) value\n     > Usage\n     | for (var i = 0, i < 5, i++) {\n     |     paper.circle(10 + 15 * i, 10, 10)\n     |          .attr({fill: \"#000\"})\n     |          .data(\"i\", i)\n     |          .click(function () {\n     |             alert(this.data(\"i\"));\n     |          });\n     | }\n    \\*/\n    elproto.data = function (key, value) {\n        var data = eldata[this.id] = eldata[this.id] || {};\n        if (arguments.length == 0){\n            eve(\"snap.data.get.\" + this.id, this, data, null);\n            return data;\n        }\n        if (arguments.length == 1) {\n            if (Snap.is(key, \"object\")) {\n                for (var i in key) if (key[has](i)) {\n                    this.data(i, key[i]);\n                }\n                return this;\n            }\n            eve(\"snap.data.get.\" + this.id, this, data[key], key);\n            return data[key];\n        }\n        data[key] = value;\n        eve(\"snap.data.set.\" + this.id, this, value, key);\n        return this;\n    };\n    /*\\\n     * Element.removeData\n     [ method ]\n     **\n     * Removes value associated with an element by given key.\n     * If key is not provided, removes all the data of the element.\n     - key (string) #optional key\n     = (object) @Element\n    \\*/\n    elproto.removeData = function (key) {\n        if (key == null) {\n            eldata[this.id] = {};\n        } else {\n            eldata[this.id] && delete eldata[this.id][key];\n        }\n        return this;\n    };\n    /*\\\n     * Element.outerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element, equivalent to HTML's `outerHTML`.\n     *\n     * See also @Element.innerSVG\n     = (string) SVG code for the element\n    \\*/\n    /*\\\n     * Element.toString\n     [ method ]\n     **\n     * See @Element.outerSVG\n    \\*/\n    elproto.outerSVG = elproto.toString = toString(1);\n    /*\\\n     * Element.innerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element's contents, equivalent to HTML's `innerHTML`\n     = (string) SVG code for the element\n    \\*/\n    elproto.innerSVG = toString();\n    function toString(type) {\n        return function () {\n            var res = type ? \"<\" + this.type : \"\",\n                attr = this.node.attributes,\n                chld = this.node.childNodes;\n            if (type) {\n                for (var i = 0, ii = attr.length; i < ii; i++) {\n                    res += \" \" + attr[i].name + '=\"' +\n                            attr[i].value.replace(/\"/g, '\\\\\"') + '\"';\n                }\n            }\n            if (chld.length) {\n                type && (res += \">\");\n                for (i = 0, ii = chld.length; i < ii; i++) {\n                    if (chld[i].nodeType == 3) {\n                        res += chld[i].nodeValue;\n                    } else if (chld[i].nodeType == 1) {\n                        res += wrap(chld[i]).toString();\n                    }\n                }\n                type && (res += \"</\" + this.type + \">\");\n            } else {\n                type && (res += \"/>\");\n            }\n            return res;\n        };\n    }\n    elproto.toDataURL = function () {\n        if (window && window.btoa) {\n            var bb = this.getBBox(),\n                svg = Snap.format('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"{width}\" height=\"{height}\" viewBox=\"{x} {y} {width} {height}\">{contents}</svg>', {\n                x: +bb.x.toFixed(3),\n                y: +bb.y.toFixed(3),\n                width: +bb.width.toFixed(3),\n                height: +bb.height.toFixed(3),\n                contents: this.outerSVG()\n            });\n            return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(svg)));\n        }\n    };\n    /*\\\n     * Fragment.select\n     [ method ]\n     **\n     * See @Element.select\n    \\*/\n    Fragment.prototype.select = elproto.select;\n    /*\\\n     * Fragment.selectAll\n     [ method ]\n     **\n     * See @Element.selectAll\n    \\*/\n    Fragment.prototype.selectAll = elproto.selectAll;\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var objectToString = Object.prototype.toString,\n        Str = String,\n        math = Math,\n        E = \"\";\n    function Matrix(a, b, c, d, e, f) {\n        if (b == null && objectToString.call(a) == \"[object SVGMatrix]\") {\n            this.a = a.a;\n            this.b = a.b;\n            this.c = a.c;\n            this.d = a.d;\n            this.e = a.e;\n            this.f = a.f;\n            return;\n        }\n        if (a != null) {\n            this.a = +a;\n            this.b = +b;\n            this.c = +c;\n            this.d = +d;\n            this.e = +e;\n            this.f = +f;\n        } else {\n            this.a = 1;\n            this.b = 0;\n            this.c = 0;\n            this.d = 1;\n            this.e = 0;\n            this.f = 0;\n        }\n    }\n    (function (matrixproto) {\n        /*\\\n         * Matrix.add\n         [ method ]\n         **\n         * Adds the given matrix to existing one\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         * or\n         - matrix (object) @Matrix\n        \\*/\n        matrixproto.add = function (a, b, c, d, e, f) {\n            if (a && a instanceof Matrix) {\n                return this.add(a.a, a.b, a.c, a.d, a.e, a.f);\n            }\n            var aNew = a * this.a + b * this.c,\n                bNew = a * this.b + b * this.d;\n            this.e += e * this.a + f * this.c;\n            this.f += e * this.b + f * this.d;\n            this.c = c * this.a + d * this.c;\n            this.d = c * this.b + d * this.d;\n\n            this.a = aNew;\n            this.b = bNew;\n            return this;\n        };\n        /*\\\n         * Matrix.multLeft\n         [ method ]\n         **\n         * Multiplies a passed affine transform to the left: M * this.\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         * or\n         - matrix (object) @Matrix\n        \\*/\n        Matrix.prototype.multLeft = function (a, b, c, d, e, f) {\n            if (a && a instanceof Matrix) {\n                return this.multLeft(a.a, a.b, a.c, a.d, a.e, a.f);\n            }\n            var aNew = a * this.a + c * this.b,\n                cNew = a * this.c + c * this.d,\n                eNew = a * this.e + c * this.f + e;\n            this.b = b * this.a + d * this.b;\n            this.d = b * this.c + d * this.d;\n            this.f = b * this.e + d * this.f + f;\n\n            this.a = aNew;\n            this.c = cNew;\n            this.e = eNew;\n            return this;\n        };\n        /*\\\n         * Matrix.invert\n         [ method ]\n         **\n         * Returns an inverted version of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.invert = function () {\n            var me = this,\n                x = me.a * me.d - me.b * me.c;\n            return new Matrix(me.d / x, -me.b / x, -me.c / x, me.a / x, (me.c * me.f - me.d * me.e) / x, (me.b * me.e - me.a * me.f) / x);\n        };\n        /*\\\n         * Matrix.clone\n         [ method ]\n         **\n         * Returns a copy of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.clone = function () {\n            return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\n        };\n        /*\\\n         * Matrix.translate\n         [ method ]\n         **\n         * Translate the matrix\n         - x (number) horizontal offset distance\n         - y (number) vertical offset distance\n        \\*/\n        matrixproto.translate = function (x, y) {\n            this.e += x * this.a + y * this.c;\n            this.f += x * this.b + y * this.d;\n            return this;\n        };\n        /*\\\n         * Matrix.scale\n         [ method ]\n         **\n         * Scales the matrix\n         - x (number) amount to be scaled, with `1` resulting in no change\n         - y (number) #optional amount to scale along the vertical axis. (Otherwise `x` applies to both axes.)\n         - cx (number) #optional horizontal origin point from which to scale\n         - cy (number) #optional vertical origin point from which to scale\n         * Default cx, cy is the middle point of the element.\n        \\*/\n        matrixproto.scale = function (x, y, cx, cy) {\n            y == null && (y = x);\n            (cx || cy) && this.translate(cx, cy);\n            this.a *= x;\n            this.b *= x;\n            this.c *= y;\n            this.d *= y;\n            (cx || cy) && this.translate(-cx, -cy);\n            return this;\n        };\n        /*\\\n         * Matrix.rotate\n         [ method ]\n         **\n         * Rotates the matrix\n         - a (number) angle of rotation, in degrees\n         - x (number) horizontal origin point from which to rotate\n         - y (number) vertical origin point from which to rotate\n        \\*/\n        matrixproto.rotate = function (a, x, y) {\n            a = Snap.rad(a);\n            x = x || 0;\n            y = y || 0;\n            var cos = +math.cos(a).toFixed(9),\n                sin = +math.sin(a).toFixed(9);\n            this.add(cos, sin, -sin, cos, x, y);\n            return this.add(1, 0, 0, 1, -x, -y);\n        };\n        /*\\\n         * Matrix.skewX\n         [ method ]\n         **\n         * Skews the matrix along the x-axis\n         - x (number) Angle to skew along the x-axis (in degrees).\n        \\*/\n        matrixproto.skewX = function (x) {\n            return this.skew(x, 0);\n        };\n        /*\\\n         * Matrix.skewY\n         [ method ]\n         **\n         * Skews the matrix along the y-axis\n         - y (number) Angle to skew along the y-axis (in degrees).\n        \\*/\n        matrixproto.skewY = function (y) {\n            return this.skew(0, y);\n        };\n        /*\\\n         * Matrix.skew\n         [ method ]\n         **\n         * Skews the matrix\n         - y (number) Angle to skew along the y-axis (in degrees).\n         - x (number) Angle to skew along the x-axis (in degrees).\n        \\*/\n        matrixproto.skew = function (x, y) {\n            x = x || 0;\n            y = y || 0;\n            x = Snap.rad(x);\n            y = Snap.rad(y);\n            var c = math.tan(x).toFixed(9);\n            var b = math.tan(y).toFixed(9);\n            return this.add(1, b, c, 1, 0, 0);\n        };\n        /*\\\n         * Matrix.x\n         [ method ]\n         **\n         * Returns x coordinate for given point after transformation described by the matrix. See also @Matrix.y\n         - x (number)\n         - y (number)\n         = (number) x\n        \\*/\n        matrixproto.x = function (x, y) {\n            return x * this.a + y * this.c + this.e;\n        };\n        /*\\\n         * Matrix.y\n         [ method ]\n         **\n         * Returns y coordinate for given point after transformation described by the matrix. See also @Matrix.x\n         - x (number)\n         - y (number)\n         = (number) y\n        \\*/\n        matrixproto.y = function (x, y) {\n            return x * this.b + y * this.d + this.f;\n        };\n        matrixproto.get = function (i) {\n            return +this[Str.fromCharCode(97 + i)].toFixed(4);\n        };\n        matrixproto.toString = function () {\n            return \"matrix(\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + \")\";\n        };\n        matrixproto.offset = function () {\n            return [this.e.toFixed(4), this.f.toFixed(4)];\n        };\n        function norm(a) {\n            return a[0] * a[0] + a[1] * a[1];\n        }\n        function normalize(a) {\n            var mag = math.sqrt(norm(a));\n            a[0] && (a[0] /= mag);\n            a[1] && (a[1] /= mag);\n        }\n        /*\\\n         * Matrix.determinant\n         [ method ]\n         **\n         * Finds determinant of the given matrix.\n         = (number) determinant\n        \\*/\n        matrixproto.determinant = function () {\n            return this.a * this.d - this.b * this.c;\n        };\n        /*\\\n         * Matrix.split\n         [ method ]\n         **\n         * Splits matrix into primitive transformations\n         = (object) in format:\n         o dx (number) translation by x\n         o dy (number) translation by y\n         o scalex (number) scale by x\n         o scaley (number) scale by y\n         o shear (number) shear\n         o rotate (number) rotation in deg\n         o isSimple (boolean) could it be represented via simple transformations\n        \\*/\n        matrixproto.split = function () {\n            var out = {};\n            // translation\n            out.dx = this.e;\n            out.dy = this.f;\n\n            // scale and shear\n            var row = [[this.a, this.b], [this.c, this.d]];\n            out.scalex = math.sqrt(norm(row[0]));\n            normalize(row[0]);\n\n            out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1];\n            row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear];\n\n            out.scaley = math.sqrt(norm(row[1]));\n            normalize(row[1]);\n            out.shear /= out.scaley;\n\n            if (this.determinant() < 0) {\n                out.scalex = -out.scalex;\n            }\n\n            // rotation\n            var sin = row[0][1],\n                cos = row[1][1];\n            if (cos < 0) {\n                out.rotate = Snap.deg(math.acos(cos));\n                if (sin < 0) {\n                    out.rotate = 360 - out.rotate;\n                }\n            } else {\n                out.rotate = Snap.deg(math.asin(sin));\n            }\n\n            out.isSimple = !+out.shear.toFixed(9) && (out.scalex.toFixed(9) == out.scaley.toFixed(9) || !out.rotate);\n            out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate;\n            out.noRotation = !+out.shear.toFixed(9) && !out.rotate;\n            return out;\n        };\n        /*\\\n         * Matrix.toTransformString\n         [ method ]\n         **\n         * Returns transform string that represents given matrix\n         = (string) transform string\n        \\*/\n        matrixproto.toTransformString = function (shorter) {\n            var s = shorter || this.split();\n            if (!+s.shear.toFixed(9)) {\n                s.scalex = +s.scalex.toFixed(4);\n                s.scaley = +s.scaley.toFixed(4);\n                s.rotate = +s.rotate.toFixed(4);\n                return  (s.dx || s.dy ? \"t\" + [+s.dx.toFixed(4), +s.dy.toFixed(4)] : E) +\n                        (s.rotate ? \"r\" + [+s.rotate.toFixed(4), 0, 0] : E) +\n                        (s.scalex != 1 || s.scaley != 1 ? \"s\" + [s.scalex, s.scaley, 0, 0] : E);\n            } else {\n                return \"m\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];\n            }\n        };\n    })(Matrix.prototype);\n    /*\\\n     * Snap.Matrix\n     [ method ]\n     **\n     * Matrix constructor, extend on your own risk.\n     * To create matrices use @Snap.matrix.\n    \\*/\n    Snap.Matrix = Matrix;\n    /*\\\n     * Snap.matrix\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns a matrix based on the given parameters\n     - a (number)\n     - b (number)\n     - c (number)\n     - d (number)\n     - e (number)\n     - f (number)\n     * or\n     - svgMatrix (SVGMatrix)\n     = (object) @Matrix\n    \\*/\n    Snap.matrix = function (a, b, c, d, e, f) {\n        return new Matrix(a, b, c, d, e, f);\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var has = \"hasOwnProperty\",\n        make = Snap._.make,\n        wrap = Snap._.wrap,\n        is = Snap.is,\n        getSomeDefs = Snap._.getSomeDefs,\n        reURLValue = /^url\\((['\"]?)([^)]+)\\1\\)$/,\n        $ = Snap._.$,\n        URL = Snap.url,\n        Str = String,\n        separator = Snap._.separator,\n        E = \"\";\n    /*\\\n     * Snap.deurl\n     [ method ]\n     **\n     * Unwraps path from `\"url(<path>)\"`.\n     - value (string) url path\n     = (string) unwrapped path\n    \\*/\n    Snap.deurl = function (value) {\n        var res = String(value).match(reURLValue);\n        return res ? res[2] : value;\n    }\n    // Attributes event handlers\n    eve.on(\"snap.util.attr.mask\", function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value.type == \"mask\") {\n                var mask = value;\n            } else {\n                mask = make(\"mask\", getSomeDefs(this));\n                mask.node.appendChild(value.node);\n            }\n            !mask.node.id && $(mask.node, {\n                id: mask.id\n            });\n            $(this.node, {\n                mask: URL(mask.id)\n            });\n        }\n    });\n    (function (clipIt) {\n        eve.on(\"snap.util.attr.clip\", clipIt);\n        eve.on(\"snap.util.attr.clip-path\", clipIt);\n        eve.on(\"snap.util.attr.clipPath\", clipIt);\n    }(function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            var clip,\n                node = value.node;\n            while (node) {\n                if (node.nodeName === \"clipPath\") {\n                    clip = new Element(node);\n                    break;\n                }\n                if (node.nodeName === \"svg\") {\n                    clip = undefined;\n                    break;\n                }\n                node = node.parentNode;\n            }\n            if (!clip) {\n                clip = make(\"clipPath\", getSomeDefs(this));\n                clip.node.appendChild(value.node);\n                !clip.node.id && $(clip.node, {\n                    id: clip.id\n                });\n            }\n            $(this.node, {\n                \"clip-path\": URL(clip.node.id || clip.id)\n            });\n        }\n    }));\n    function fillStroke(name) {\n        return function (value) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1 &&\n                (value.node.firstChild.tagName == \"radialGradient\" ||\n                value.node.firstChild.tagName == \"linearGradient\" ||\n                value.node.firstChild.tagName == \"pattern\")) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value instanceof Element) {\n                if (value.type == \"radialGradient\" || value.type == \"linearGradient\"\n                   || value.type == \"pattern\") {\n                    if (!value.node.id) {\n                        $(value.node, {\n                            id: value.id\n                        });\n                    }\n                    var fill = URL(value.node.id);\n                } else {\n                    fill = value.attr(name);\n                }\n            } else {\n                fill = Snap.color(value);\n                if (fill.error) {\n                    var grad = Snap(getSomeDefs(this).ownerSVGElement).gradient(value);\n                    if (grad) {\n                        if (!grad.node.id) {\n                            $(grad.node, {\n                                id: grad.id\n                            });\n                        }\n                        fill = URL(grad.node.id);\n                    } else {\n                        fill = value;\n                    }\n                } else {\n                    fill = Str(fill);\n                }\n            }\n            var attrs = {};\n            attrs[name] = fill;\n            $(this.node, attrs);\n            this.node.style[name] = E;\n        };\n    }\n    eve.on(\"snap.util.attr.fill\", fillStroke(\"fill\"));\n    eve.on(\"snap.util.attr.stroke\", fillStroke(\"stroke\"));\n    var gradrg = /^([lr])(?:\\(([^)]*)\\))?(.*)$/i;\n    eve.on(\"snap.util.grad.parse\", function parseGrad(string) {\n        string = Str(string);\n        var tokens = string.match(gradrg);\n        if (!tokens) {\n            return null;\n        }\n        var type = tokens[1],\n            params = tokens[2],\n            stops = tokens[3];\n        params = params.split(/\\s*,\\s*/).map(function (el) {\n            return +el == el ? +el : el;\n        });\n        if (params.length == 1 && params[0] == 0) {\n            params = [];\n        }\n        stops = stops.split(\"-\");\n        stops = stops.map(function (el) {\n            el = el.split(\":\");\n            var out = {\n                color: el[0]\n            };\n            if (el[1]) {\n                out.offset = parseFloat(el[1]);\n            }\n            return out;\n        });\n        var len = stops.length,\n            start = 0,\n            j = 0;\n        function seed(i, end) {\n            var step = (end - start) / (i - j);\n            for (var k = j; k < i; k++) {\n                stops[k].offset = +(+start + step * (k - j)).toFixed(2);\n            }\n            j = i;\n            start = end;\n        }\n        len--;\n        for (var i = 0; i < len; i++) if (\"offset\" in stops[i]) {\n            seed(i, stops[i].offset);\n        }\n        stops[len].offset = stops[len].offset || 100;\n        seed(len, stops[len].offset);\n        return {\n            type: type,\n            params: params,\n            stops: stops\n        };\n    });\n\n    eve.on(\"snap.util.attr.d\", function (value) {\n        eve.stop();\n        if (is(value, \"array\") && is(value[0], \"array\")) {\n            value = Snap.path.toString.call(value);\n        }\n        value = Str(value);\n        if (value.match(/[ruo]/i)) {\n            value = Snap.path.toAbsolute(value);\n        }\n        $(this.node, {d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.#text\", function (value) {\n        eve.stop();\n        value = Str(value);\n        var txt = glob.doc.createTextNode(value);\n        while (this.node.firstChild) {\n            this.node.removeChild(this.node.firstChild);\n        }\n        this.node.appendChild(txt);\n    })(-1);\n    eve.on(\"snap.util.attr.path\", function (value) {\n        eve.stop();\n        this.attr({d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.class\", function (value) {\n        eve.stop();\n        this.node.className.baseVal = value;\n    })(-1);\n    eve.on(\"snap.util.attr.viewBox\", function (value) {\n        var vb;\n        if (is(value, \"object\") && \"x\" in value) {\n            vb = [value.x, value.y, value.width, value.height].join(\" \");\n        } else if (is(value, \"array\")) {\n            vb = value.join(\" \");\n        } else {\n            vb = value;\n        }\n        $(this.node, {\n            viewBox: vb\n        });\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.transform\", function (value) {\n        this.transform(value);\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.r\", function (value) {\n        if (this.type == \"rect\") {\n            eve.stop();\n            $(this.node, {\n                rx: value,\n                ry: value\n            });\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.textpath\", function (value) {\n        eve.stop();\n        if (this.type == \"text\") {\n            var id, tp, node;\n            if (!value && this.textPath) {\n                tp = this.textPath;\n                while (tp.node.firstChild) {\n                    this.node.appendChild(tp.node.firstChild);\n                }\n                tp.remove();\n                delete this.textPath;\n                return;\n            }\n            if (is(value, \"string\")) {\n                var defs = getSomeDefs(this),\n                    path = wrap(defs.parentNode).path(value);\n                defs.appendChild(path.node);\n                id = path.id;\n                path.attr({id: id});\n            } else {\n                value = wrap(value);\n                if (value instanceof Element) {\n                    id = value.attr(\"id\");\n                    if (!id) {\n                        id = value.id;\n                        value.attr({id: id});\n                    }\n                }\n            }\n            if (id) {\n                tp = this.textPath;\n                node = this.node;\n                if (tp) {\n                    tp.attr({\"xlink:href\": \"#\" + id});\n                } else {\n                    tp = $(\"textPath\", {\n                        \"xlink:href\": \"#\" + id\n                    });\n                    while (node.firstChild) {\n                        tp.appendChild(node.firstChild);\n                    }\n                    node.appendChild(tp);\n                    this.textPath = wrap(tp);\n                }\n            }\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.text\", function (value) {\n        if (this.type == \"text\") {\n            var i = 0,\n                node = this.node,\n                tuner = function (chunk) {\n                    var out = $(\"tspan\");\n                    if (is(chunk, \"array\")) {\n                        for (var i = 0; i < chunk.length; i++) {\n                            out.appendChild(tuner(chunk[i]));\n                        }\n                    } else {\n                        out.appendChild(glob.doc.createTextNode(chunk));\n                    }\n                    out.normalize && out.normalize();\n                    return out;\n                };\n            while (node.firstChild) {\n                node.removeChild(node.firstChild);\n            }\n            var tuned = tuner(value);\n            while (tuned.firstChild) {\n                node.appendChild(tuned.firstChild);\n            }\n        }\n        eve.stop();\n    })(-1);\n    function setFontSize(value) {\n        eve.stop();\n        if (value == +value) {\n            value += \"px\";\n        }\n        this.node.style.fontSize = value;\n    }\n    eve.on(\"snap.util.attr.fontSize\", setFontSize)(-1);\n    eve.on(\"snap.util.attr.font-size\", setFontSize)(-1);\n\n\n    eve.on(\"snap.util.getattr.transform\", function () {\n        eve.stop();\n        return this.transform();\n    })(-1);\n    eve.on(\"snap.util.getattr.textpath\", function () {\n        eve.stop();\n        return this.textPath;\n    })(-1);\n    // Markers\n    (function () {\n        function getter(end) {\n            return function () {\n                eve.stop();\n                var style = glob.doc.defaultView.getComputedStyle(this.node, null).getPropertyValue(\"marker-\" + end);\n                if (style == \"none\") {\n                    return style;\n                } else {\n                    return Snap(glob.doc.getElementById(style.match(reURLValue)[1]));\n                }\n            };\n        }\n        function setter(end) {\n            return function (value) {\n                eve.stop();\n                var name = \"marker\" + end.charAt(0).toUpperCase() + end.substring(1);\n                if (value == \"\" || !value) {\n                    this.node.style[name] = \"none\";\n                    return;\n                }\n                if (value.type == \"marker\") {\n                    var id = value.node.id;\n                    if (!id) {\n                        $(value.node, {id: value.id});\n                    }\n                    this.node.style[name] = URL(id);\n                    return;\n                }\n            };\n        }\n        eve.on(\"snap.util.getattr.marker-end\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.markerEnd\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.marker-start\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.markerStart\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.marker-mid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.getattr.markerMid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.marker-end\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.markerEnd\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.marker-start\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.markerStart\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.marker-mid\", setter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.markerMid\", setter(\"mid\"))(-1);\n    }());\n    eve.on(\"snap.util.getattr.r\", function () {\n        if (this.type == \"rect\" && $(this.node, \"rx\") == $(this.node, \"ry\")) {\n            eve.stop();\n            return $(this.node, \"rx\");\n        }\n    })(-1);\n    function textExtract(node) {\n        var out = [];\n        var children = node.childNodes;\n        for (var i = 0, ii = children.length; i < ii; i++) {\n            var chi = children[i];\n            if (chi.nodeType == 3) {\n                out.push(chi.nodeValue);\n            }\n            if (chi.tagName == \"tspan\") {\n                if (chi.childNodes.length == 1 && chi.firstChild.nodeType == 3) {\n                    out.push(chi.firstChild.nodeValue);\n                } else {\n                    out.push(textExtract(chi));\n                }\n            }\n        }\n        return out;\n    }\n    eve.on(\"snap.util.getattr.text\", function () {\n        if (this.type == \"text\" || this.type == \"tspan\") {\n            eve.stop();\n            var out = textExtract(this.node);\n            return out.length == 1 ? out[0] : out;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.#text\", function () {\n        return this.node.textContent;\n    })(-1);\n    eve.on(\"snap.util.getattr.fill\", function (internal) {\n        if (internal) {\n            return;\n        }\n        eve.stop();\n        var value = eve(\"snap.util.getattr.fill\", this, true).firstDefined();\n        return Snap(Snap.deurl(value)) || value;\n    })(-1);\n    eve.on(\"snap.util.getattr.stroke\", function (internal) {\n        if (internal) {\n            return;\n        }\n        eve.stop();\n        var value = eve(\"snap.util.getattr.stroke\", this, true).firstDefined();\n        return Snap(Snap.deurl(value)) || value;\n    })(-1);\n    eve.on(\"snap.util.getattr.viewBox\", function () {\n        eve.stop();\n        var vb = $(this.node, \"viewBox\");\n        if (vb) {\n            vb = vb.split(separator);\n            return Snap._.box(+vb[0], +vb[1], +vb[2], +vb[3]);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.points\", function () {\n        var p = $(this.node, \"points\");\n        eve.stop();\n        if (p) {\n            return p.split(separator);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.path\", function () {\n        var p = $(this.node, \"d\");\n        eve.stop();\n        return p;\n    })(-1);\n    eve.on(\"snap.util.getattr.class\", function () {\n        return this.node.className.baseVal;\n    })(-1);\n    function getFontSize() {\n        eve.stop();\n        return this.node.style.fontSize;\n    }\n    eve.on(\"snap.util.getattr.fontSize\", getFontSize)(-1);\n    eve.on(\"snap.util.getattr.font-size\", getFontSize)(-1);\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var rgNotSpace = /\\S+/g,\n        rgBadSpace = /[\\t\\r\\n\\f]/g,\n        rgTrim = /(^\\s+|\\s+$)/g,\n        Str = String,\n        elproto = Element.prototype;\n    /*\\\n     * Element.addClass\n     [ method ]\n     **\n     * Adds given class name or list of class names to the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.addClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n\n        if (classes.length) {\n            j = 0;\n            while (clazz = classes[j++]) {\n                pos = curClasses.indexOf(clazz);\n                if (!~pos) {\n                    curClasses.push(clazz);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.removeClass\n     [ method ]\n     **\n     * Removes given class name or list of class names from the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.removeClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        if (curClasses.length) {\n            j = 0;\n            while (clazz = classes[j++]) {\n                pos = curClasses.indexOf(clazz);\n                if (~pos) {\n                    curClasses.splice(pos, 1);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.hasClass\n     [ method ]\n     **\n     * Checks if the element has a given class name in the list of class names applied to it.\n     - value (string) class name\n     **\n     = (boolean) `true` if the element has given class\n    \\*/\n    elproto.hasClass = function (value) {\n        var elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [];\n        return !!~curClasses.indexOf(value);\n    };\n    /*\\\n     * Element.toggleClass\n     [ method ]\n     **\n     * Add or remove one or more classes from the element, depending on either\n     * the class’s presence or the value of the `flag` argument.\n     - value (string) class name or space separated list of class names\n     - flag (boolean) value to determine whether the class should be added or removed\n     **\n     = (Element) original element.\n    \\*/\n    elproto.toggleClass = function (value, flag) {\n        if (flag != null) {\n            if (flag) {\n                return this.addClass(value);\n            } else {\n                return this.removeClass(value);\n            }\n        }\n        var classes = (value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        j = 0;\n        while (clazz = classes[j++]) {\n            pos = curClasses.indexOf(clazz);\n            if (~pos) {\n                curClasses.splice(pos, 1);\n            } else {\n                curClasses.push(clazz);\n            }\n        }\n\n        finalValue = curClasses.join(\" \");\n        if (className != finalValue) {\n            elem.className.baseVal = finalValue;\n        }\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var operators = {\n            \"+\": function (x, y) {\n                    return x + y;\n                },\n            \"-\": function (x, y) {\n                    return x - y;\n                },\n            \"/\": function (x, y) {\n                    return x / y;\n                },\n            \"*\": function (x, y) {\n                    return x * y;\n                }\n        },\n        Str = String,\n        reUnit = /[a-z]+$/i,\n        reAddon = /^\\s*([+\\-\\/*])\\s*=\\s*([\\d.eE+\\-]+)\\s*([^\\d\\s]+)?\\s*$/;\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    eve.on(\"snap.util.attr\", function (val) {\n        var plus = Str(val).match(reAddon);\n        if (plus) {\n            var evnt = eve.nt(),\n                name = evnt.substring(evnt.lastIndexOf(\".\") + 1),\n                a = this.attr(name),\n                atr = {};\n            eve.stop();\n            var unit = plus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[plus[1]];\n            if (aUnit && aUnit == unit) {\n                val = op(parseFloat(a), +plus[2]);\n            } else {\n                a = this.asPX(name);\n                val = op(this.asPX(name), this.asPX(name, plus[2] + unit));\n            }\n            if (isNaN(a) || isNaN(val)) {\n                return;\n            }\n            atr[name] = val;\n            this.attr(atr);\n        }\n    })(-10);\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this,\n            bplus = Str(b).match(reAddon);\n        if (bplus) {\n            eve.stop();\n            var unit = bplus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[bplus[1]];\n            if (aUnit && aUnit == unit) {\n                return {\n                    from: parseFloat(a),\n                    to: op(parseFloat(a), +bplus[2]),\n                    f: getUnit(aUnit)\n                };\n            } else {\n                a = this.asPX(name);\n                return {\n                    from: a,\n                    to: op(a, this.asPX(name, bplus[2] + unit)),\n                    f: getNumber\n                };\n            }\n        }\n    })(-10);\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var proto = Paper.prototype,\n        is = Snap.is;\n    /*\\\n     * Paper.rect\n     [ method ]\n     *\n     * Draws a rectangle\n     **\n     - x (number) x coordinate of the top left corner\n     - y (number) y coordinate of the top left corner\n     - width (number) width\n     - height (number) height\n     - rx (number) #optional horizontal radius for rounded corners, default is 0\n     - ry (number) #optional vertical radius for rounded corners, default is rx or 0\n     = (object) the `rect` element\n     **\n     > Usage\n     | // regular rectangle\n     | var c = paper.rect(10, 10, 50, 50);\n     | // rectangle with rounded corners\n     | var c = paper.rect(40, 40, 50, 50, 10);\n    \\*/\n    proto.rect = function (x, y, w, h, rx, ry) {\n        var attr;\n        if (ry == null) {\n            ry = rx;\n        }\n        if (is(x, \"object\") && x == \"[object Object]\") {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                width: w,\n                height: h\n            };\n            if (rx != null) {\n                attr.rx = rx;\n                attr.ry = ry;\n            }\n        }\n        return this.el(\"rect\", attr);\n    };\n    /*\\\n     * Paper.circle\n     [ method ]\n     **\n     * Draws a circle\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - r (number) radius\n     = (object) the `circle` element\n     **\n     > Usage\n     | var c = paper.circle(50, 50, 40);\n    \\*/\n    proto.circle = function (cx, cy, r) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr = {\n                cx: cx,\n                cy: cy,\n                r: r\n            };\n        }\n        return this.el(\"circle\", attr);\n    };\n\n    var preload = (function () {\n        function onerror() {\n            this.parentNode.removeChild(this);\n        }\n        return function (src, f) {\n            var img = glob.doc.createElement(\"img\"),\n                body = glob.doc.body;\n            img.style.cssText = \"position:absolute;left:-9999em;top:-9999em\";\n            img.onload = function () {\n                f.call(img);\n                img.onload = img.onerror = null;\n                body.removeChild(img);\n            };\n            img.onerror = onerror;\n            body.appendChild(img);\n            img.src = src;\n        };\n    }());\n\n    /*\\\n     * Paper.image\n     [ method ]\n     **\n     * Places an image on the surface\n     **\n     - src (string) URI of the source image\n     - x (number) x offset position\n     - y (number) y offset position\n     - width (number) width of the image\n     - height (number) height of the image\n     = (object) the `image` element\n     * or\n     = (object) Snap element object with type `image`\n     **\n     > Usage\n     | var c = paper.image(\"apple.png\", 10, 10, 80, 80);\n    \\*/\n    proto.image = function (src, x, y, width, height) {\n        var el = this.el(\"image\");\n        if (is(src, \"object\") && \"src\" in src) {\n            el.attr(src);\n        } else if (src != null) {\n            var set = {\n                \"xlink:href\": src,\n                preserveAspectRatio: \"none\"\n            };\n            if (x != null && y != null) {\n                set.x = x;\n                set.y = y;\n            }\n            if (width != null && height != null) {\n                set.width = width;\n                set.height = height;\n            } else {\n                preload(src, function () {\n                    Snap._.$(el.node, {\n                        width: this.offsetWidth,\n                        height: this.offsetHeight\n                    });\n                });\n            }\n            Snap._.$(el.node, set);\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ellipse\n     [ method ]\n     **\n     * Draws an ellipse\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - rx (number) horizontal radius\n     - ry (number) vertical radius\n     = (object) the `ellipse` element\n     **\n     > Usage\n     | var c = paper.ellipse(50, 50, 40, 20);\n    \\*/\n    proto.ellipse = function (cx, cy, rx, ry) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr ={\n                cx: cx,\n                cy: cy,\n                rx: rx,\n                ry: ry\n            };\n        }\n        return this.el(\"ellipse\", attr);\n    };\n    // SIERRA Paper.path(): Unclear from the link what a Catmull-Rom curveto is, and why it would make life any easier.\n    /*\\\n     * Paper.path\n     [ method ]\n     **\n     * Creates a `<path>` element using the given string as the path's definition\n     - pathString (string) #optional path string in SVG format\n     * Path string consists of one-letter commands, followed by comma seprarated arguments in numerical form. Example:\n     | \"M10,20L30,40\"\n     * This example features two commands: `M`, with arguments `(10, 20)` and `L` with arguments `(30, 40)`. Uppercase letter commands express coordinates in absolute terms, while lowercase commands express them in relative terms from the most recently declared coordinates.\n     *\n     # <p>Here is short list of commands available, for more details see <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path's data attribute's format are described in the SVG specification.\">SVG path string format</a> or <a href=\"https://developer.mozilla.org/en/SVG/Tutorial/Paths\">article about path strings at MDN</a>.</p>\n     # <table><thead><tr><th>Command</th><th>Name</th><th>Parameters</th></tr></thead><tbody>\n     # <tr><td>M</td><td>moveto</td><td>(x y)+</td></tr>\n     # <tr><td>Z</td><td>closepath</td><td>(none)</td></tr>\n     # <tr><td>L</td><td>lineto</td><td>(x y)+</td></tr>\n     # <tr><td>H</td><td>horizontal lineto</td><td>x+</td></tr>\n     # <tr><td>V</td><td>vertical lineto</td><td>y+</td></tr>\n     # <tr><td>C</td><td>curveto</td><td>(x1 y1 x2 y2 x y)+</td></tr>\n     # <tr><td>S</td><td>smooth curveto</td><td>(x2 y2 x y)+</td></tr>\n     # <tr><td>Q</td><td>quadratic Bézier curveto</td><td>(x1 y1 x y)+</td></tr>\n     # <tr><td>T</td><td>smooth quadratic Bézier curveto</td><td>(x y)+</td></tr>\n     # <tr><td>A</td><td>elliptical arc</td><td>(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</td></tr>\n     # <tr><td>R</td><td><a href=\"http://en.wikipedia.org/wiki/Catmull–Rom_spline#Catmull.E2.80.93Rom_spline\">Catmull-Rom curveto</a>*</td><td>x1 y1 (x y)+</td></tr></tbody></table>\n     * * _Catmull-Rom curveto_ is a not standard SVG command and added to make life easier.\n     * Note: there is a special case when a path consists of only three commands: `M10,10R…z`. In this case the path connects back to its starting point.\n     > Usage\n     | var c = paper.path(\"M10 10L90 90\");\n     | // draw a diagonal line:\n     | // move to 10,10, line to 90,90\n    \\*/\n    proto.path = function (d) {\n        var attr;\n        if (is(d, \"object\") && !is(d, \"array\")) {\n            attr = d;\n        } else if (d) {\n            attr = {d: d};\n        }\n        return this.el(\"path\", attr);\n    };\n    /*\\\n     * Paper.g\n     [ method ]\n     **\n     * Creates a group element\n     **\n     - varargs (…) #optional elements to nest within the group\n     = (object) the `g` element\n     **\n     > Usage\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g(c2, c1); // note that the order of elements is different\n     * or\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g();\n     | g.add(c2, c1);\n    \\*/\n    /*\\\n     * Paper.group\n     [ method ]\n     **\n     * See @Paper.g\n    \\*/\n    proto.group = proto.g = function (first) {\n        var attr,\n            el = this.el(\"g\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.svg\n     [ method ]\n     **\n     * Creates a nested SVG element.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `svg` element\n     **\n    \\*/\n    proto.svg = function (x, y, width, height, vbx, vby, vbw, vbh) {\n        var attrs = {};\n        if (is(x, \"object\") && y == null) {\n            attrs = x;\n        } else {\n            if (x != null) {\n                attrs.x = x;\n            }\n            if (y != null) {\n                attrs.y = y;\n            }\n            if (width != null) {\n                attrs.width = width;\n            }\n            if (height != null) {\n                attrs.height = height;\n            }\n            if (vbx != null && vby != null && vbw != null && vbh != null) {\n                attrs.viewBox = [vbx, vby, vbw, vbh];\n            }\n        }\n        return this.el(\"svg\", attrs);\n    };\n    /*\\\n     * Paper.mask\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a mask.\n     **\n     = (object) the `mask` element\n     **\n    \\*/\n    proto.mask = function (first) {\n        var attr,\n            el = this.el(\"mask\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ptrn\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a pattern.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `pattern` element\n     **\n    \\*/\n    proto.ptrn = function (x, y, width, height, vx, vy, vw, vh) {\n        if (is(x, \"object\")) {\n            var attr = x;\n        } else {\n            attr = {patternUnits: \"userSpaceOnUse\"};\n            if (x) {\n                attr.x = x;\n            }\n            if (y) {\n                attr.y = y;\n            }\n            if (width != null) {\n                attr.width = width;\n            }\n            if (height != null) {\n                attr.height = height;\n            }\n            if (vx != null && vy != null && vw != null && vh != null) {\n                attr.viewBox = [vx, vy, vw, vh];\n            } else {\n                attr.viewBox = [x || 0, y || 0, width || 0, height || 0];\n            }\n        }\n        return this.el(\"pattern\", attr);\n    };\n    /*\\\n     * Paper.use\n     [ method ]\n     **\n     * Creates a <use> element.\n     - id (string) @optional id of element to link\n     * or\n     - id (Element) @optional element to link\n     **\n     = (object) the `use` element\n     **\n    \\*/\n    proto.use = function (id) {\n        if (id != null) {\n            if (id instanceof Element) {\n                if (!id.attr(\"id\")) {\n                    id.attr({id: Snap._.id(id)});\n                }\n                id = id.attr(\"id\");\n            }\n            if (String(id).charAt() == \"#\") {\n                id = id.substring(1);\n            }\n            return this.el(\"use\", {\"xlink:href\": \"#\" + id});\n        } else {\n            return Element.prototype.use.call(this);\n        }\n    };\n    /*\\\n     * Paper.symbol\n     [ method ]\n     **\n     * Creates a <symbol> element.\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     = (object) the `symbol` element\n     **\n    \\*/\n    proto.symbol = function (vx, vy, vw, vh) {\n        var attr = {};\n        if (vx != null && vy != null && vw != null && vh != null) {\n            attr.viewBox = [vx, vy, vw, vh];\n        }\n\n        return this.el(\"symbol\", attr);\n    };\n    /*\\\n     * Paper.text\n     [ method ]\n     **\n     * Draws a text string\n     **\n     - x (number) x coordinate position\n     - y (number) y coordinate position\n     - text (string|array) The text string to draw or array of strings to nest within separate `<tspan>` elements\n     = (object) the `text` element\n     **\n     > Usage\n     | var t1 = paper.text(50, 50, \"Snap\");\n     | var t2 = paper.text(50, 50, [\"S\",\"n\",\"a\",\"p\"]);\n     | // Text path usage\n     | t1.attr({textpath: \"M10,10L100,100\"});\n     | // or\n     | var pth = paper.path(\"M10,10L100,100\");\n     | t1.attr({textpath: pth});\n    \\*/\n    proto.text = function (x, y, text) {\n        var attr = {};\n        if (is(x, \"object\")) {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                text: text || \"\"\n            };\n        }\n        return this.el(\"text\", attr);\n    };\n    /*\\\n     * Paper.line\n     [ method ]\n     **\n     * Draws a line\n     **\n     - x1 (number) x coordinate position of the start\n     - y1 (number) y coordinate position of the start\n     - x2 (number) x coordinate position of the end\n     - y2 (number) y coordinate position of the end\n     = (object) the `line` element\n     **\n     > Usage\n     | var t1 = paper.line(50, 50, 100, 100);\n    \\*/\n    proto.line = function (x1, y1, x2, y2) {\n        var attr = {};\n        if (is(x1, \"object\")) {\n            attr = x1;\n        } else if (x1 != null) {\n            attr = {\n                x1: x1,\n                x2: x2,\n                y1: y1,\n                y2: y2\n            };\n        }\n        return this.el(\"line\", attr);\n    };\n    /*\\\n     * Paper.polyline\n     [ method ]\n     **\n     * Draws a polyline\n     **\n     - points (array) array of points\n     * or\n     - varargs (…) points\n     = (object) the `polyline` element\n     **\n     > Usage\n     | var p1 = paper.polyline([10, 10, 100, 100]);\n     | var p2 = paper.polyline(10, 10, 100, 100);\n    \\*/\n    proto.polyline = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polyline\", attr);\n    };\n    /*\\\n     * Paper.polygon\n     [ method ]\n     **\n     * Draws a polygon. See @Paper.polyline\n    \\*/\n    proto.polygon = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polygon\", attr);\n    };\n    // gradients\n    (function () {\n        var $ = Snap._.$;\n        // gradients' helpers\n        /*\\\n         * Element.stops\n         [ method ]\n         **\n         * Only for gradients!\n         * Returns array of gradient stops elements.\n         = (array) the stops array.\n        \\*/\n        function Gstops() {\n            return this.selectAll(\"stop\");\n        }\n        /*\\\n         * Element.addStop\n         [ method ]\n         **\n         * Only for gradients!\n         * Adds another stop to the gradient.\n         - color (string) stops color\n         - offset (number) stops offset 0..100\n         = (object) gradient element\n        \\*/\n        function GaddStop(color, offset) {\n            var stop = $(\"stop\"),\n                attr = {\n                    offset: +offset + \"%\"\n                };\n            color = Snap.color(color);\n            attr[\"stop-color\"] = color.hex;\n            if (color.opacity < 1) {\n                attr[\"stop-opacity\"] = color.opacity;\n            }\n            $(stop, attr);\n            var stops = this.stops(),\n                inserted;\n            for (var i = 0; i < stops.length; i++) {\n                var stopOffset = parseFloat(stops[i].attr(\"offset\"));\n                if (stopOffset > offset) {\n                    this.node.insertBefore(stop, stops[i].node);\n                    inserted = true;\n                    break;\n                }\n            }\n            if (!inserted) {\n                this.node.appendChild(stop);\n            }\n            return this;\n        }\n        function GgetBBox() {\n            if (this.type == \"linearGradient\") {\n                var x1 = $(this.node, \"x1\") || 0,\n                    x2 = $(this.node, \"x2\") || 1,\n                    y1 = $(this.node, \"y1\") || 0,\n                    y2 = $(this.node, \"y2\") || 0;\n                return Snap._.box(x1, y1, math.abs(x2 - x1), math.abs(y2 - y1));\n            } else {\n                var cx = this.node.cx || .5,\n                    cy = this.node.cy || .5,\n                    r = this.node.r || 0;\n                return Snap._.box(cx - r, cy - r, r * 2, r * 2);\n            }\n        }\n        /*\\\n         * Element.setStops\n         [ method ]\n         **\n         * Only for gradients!\n         * Updates stops of the gradient based on passed gradient descriptor. See @Ppaer.gradient\n         - str (string) gradient descriptor part after `()`.\n         = (object) gradient element\n         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n         | g.setStops(\"#fff-#000-#f00-#fc0\");\n        \\*/\n        function GsetStops(str) {\n            var grad = str,\n                stops = this.stops();\n            if (typeof str == \"string\") {\n                grad = eve(\"snap.util.grad.parse\", null, \"l(0,0,0,1)\" + str).firstDefined().stops;\n            }\n            if (!Snap.is(grad, \"array\")) {\n                return;\n            }\n            for (var i = 0; i < stops.length; i++) {\n                if (grad[i]) {\n                    var color = Snap.color(grad[i].color),\n                        attr = {\"offset\": grad[i].offset + \"%\"};\n                    attr[\"stop-color\"] = color.hex;\n                    if (color.opacity < 1) {\n                        attr[\"stop-opacity\"] = color.opacity;\n                    }\n                    stops[i].attr(attr);\n                } else {\n                    stops[i].remove();\n                }\n            }\n            for (i = stops.length; i < grad.length; i++) {\n                this.addStop(grad[i].color, grad[i].offset);\n            }\n            return this;\n        }\n        function gradient(defs, str) {\n            var grad = eve(\"snap.util.grad.parse\", null, str).firstDefined(),\n                el;\n            if (!grad) {\n                return null;\n            }\n            grad.params.unshift(defs);\n            if (grad.type.toLowerCase() == \"l\") {\n                el = gradientLinear.apply(0, grad.params);\n            } else {\n                el = gradientRadial.apply(0, grad.params);\n            }\n            if (grad.type != grad.type.toLowerCase()) {\n                $(el.node, {\n                    gradientUnits: \"userSpaceOnUse\"\n                });\n            }\n            var stops = grad.stops,\n                len = stops.length;\n            for (var i = 0; i < len; i++) {\n                var stop = stops[i];\n                el.addStop(stop.color, stop.offset);\n            }\n            return el;\n        }\n        function gradientLinear(defs, x1, y1, x2, y2) {\n            var el = Snap._.make(\"linearGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            el.setStops = GsetStops;\n            if (x1 != null) {\n                $(el.node, {\n                    x1: x1,\n                    y1: y1,\n                    x2: x2,\n                    y2: y2\n                });\n            }\n            return el;\n        }\n        function gradientRadial(defs, cx, cy, r, fx, fy) {\n            var el = Snap._.make(\"radialGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            if (cx != null) {\n                $(el.node, {\n                    cx: cx,\n                    cy: cy,\n                    r: r\n                });\n            }\n            if (fx != null && fy != null) {\n                $(el.node, {\n                    fx: fx,\n                    fy: fy\n                });\n            }\n            return el;\n        }\n        /*\\\n         * Paper.gradient\n         [ method ]\n         **\n         * Creates a gradient element\n         **\n         - gradient (string) gradient descriptor\n         > Gradient Descriptor\n         * The gradient descriptor is an expression formatted as\n         * follows: `<type>(<coords>)<colors>`.  The `<type>` can be\n         * either linear or radial.  The uppercase `L` or `R` letters\n         * indicate absolute coordinates offset from the SVG surface.\n         * Lowercase `l` or `r` letters indicate coordinates\n         * calculated relative to the element to which the gradient is\n         * applied.  Coordinates specify a linear gradient vector as\n         * `x1`, `y1`, `x2`, `y2`, or a radial gradient as `cx`, `cy`,\n         * `r` and optional `fx`, `fy` specifying a focal point away\n         * from the center of the circle. Specify `<colors>` as a list\n         * of dash-separated CSS color values.  Each color may be\n         * followed by a custom offset value, separated with a colon\n         * character.\n         > Examples\n         * Linear gradient, relative from top-left corner to bottom-right\n         * corner, from black through red to white:\n         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n         * Linear gradient, absolute from (0, 0) to (100, 100), from black\n         * through red at 25% to white:\n         | var g = paper.gradient(\"L(0, 0, 100, 100)#000-#f00:25-#fff\");\n         * Radial gradient, relative from the center of the element with radius\n         * half the width, from black to white:\n         | var g = paper.gradient(\"r(0.5, 0.5, 0.5)#000-#fff\");\n         * To apply the gradient:\n         | paper.circle(50, 50, 40).attr({\n         |     fill: g\n         | });\n         = (object) the `gradient` element\n        \\*/\n        proto.gradient = function (str) {\n            return gradient(this.defs, str);\n        };\n        proto.gradientLinear = function (x1, y1, x2, y2) {\n            return gradientLinear(this.defs, x1, y1, x2, y2);\n        };\n        proto.gradientRadial = function (cx, cy, r, fx, fy) {\n            return gradientRadial(this.defs, cx, cy, r, fx, fy);\n        };\n        /*\\\n         * Paper.toString\n         [ method ]\n         **\n         * Returns SVG code for the @Paper\n         = (string) SVG code for the @Paper\n        \\*/\n        proto.toString = function () {\n            var doc = this.node.ownerDocument,\n                f = doc.createDocumentFragment(),\n                d = doc.createElement(\"div\"),\n                svg = this.node.cloneNode(true),\n                res;\n            f.appendChild(d);\n            d.appendChild(svg);\n            Snap._.$(svg, {xmlns: \"http://www.w3.org/2000/svg\"});\n            res = d.innerHTML;\n            f.removeChild(f.firstChild);\n            return res;\n        };\n        /*\\\n         * Paper.toDataURL\n         [ method ]\n         **\n         * Returns SVG code for the @Paper as Data URI string.\n         = (string) Data URI string\n        \\*/\n        proto.toDataURL = function () {\n            if (window && window.btoa) {\n                return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(this)));\n            }\n        };\n        /*\\\n         * Paper.clear\n         [ method ]\n         **\n         * Removes all child nodes of the paper, except <defs>.\n        \\*/\n        proto.clear = function () {\n            var node = this.node.firstChild,\n                next;\n            while (node) {\n                next = node.nextSibling;\n                if (node.tagName != \"defs\") {\n                    node.parentNode.removeChild(node);\n                } else {\n                    proto.clear.call({node: node});\n                }\n                node = next;\n            }\n        };\n    }());\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        clone = Snap._.clone,\n        has = \"hasOwnProperty\",\n        p2s = /,?([a-z]),?/gi,\n        toFloat = parseFloat,\n        math = Math,\n        PI = math.PI,\n        mmin = math.min,\n        mmax = math.max,\n        pow = math.pow,\n        abs = math.abs;\n    function paths(ps) {\n        var p = paths.ps = paths.ps || {};\n        if (p[ps]) {\n            p[ps].sleep = 100;\n        } else {\n            p[ps] = {\n                sleep: 100\n            };\n        }\n        setTimeout(function () {\n            for (var key in p) if (p[has](key) && key != ps) {\n                p[key].sleep--;\n                !p[key].sleep && delete p[key];\n            }\n        });\n        return p[ps];\n    }\n    function box(x, y, width, height) {\n        if (x == null) {\n            x = y = width = height = 0;\n        }\n        if (y == null) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        return {\n            x: x,\n            y: y,\n            width: width,\n            w: width,\n            height: height,\n            h: height,\n            x2: x + width,\n            y2: y + height,\n            cx: x + width / 2,\n            cy: y + height / 2,\n            r1: math.min(width, height) / 2,\n            r2: math.max(width, height) / 2,\n            r0: math.sqrt(width * width + height * height) / 2,\n            path: rectPath(x, y, width, height),\n            vb: [x, y, width, height].join(\" \")\n        };\n    }\n    function toString() {\n        return this.join(\",\").replace(p2s, \"$1\");\n    }\n    function pathClone(pathArray) {\n        var res = clone(pathArray);\n        res.toString = toString;\n        return res;\n    }\n    function getPointAtSegmentLength(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {\n        if (length == null) {\n            return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);\n        } else {\n            return findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y,\n                getTotLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));\n        }\n    }\n    function getLengthFactory(istotal, subpath) {\n        function O(val) {\n            return +(+val).toFixed(3);\n        }\n        return Snap._.cacher(function (path, length, onlystart) {\n            if (path instanceof Element) {\n                path = path.attr(\"d\");\n            }\n            path = path2curve(path);\n            var x, y, p, l, sp = \"\", subpaths = {}, point,\n                len = 0;\n            for (var i = 0, ii = path.length; i < ii; i++) {\n                p = path[i];\n                if (p[0] == \"M\") {\n                    x = +p[1];\n                    y = +p[2];\n                } else {\n                    l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                    if (len + l > length) {\n                        if (subpath && !subpaths.start) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            sp += [\n                                \"C\" + O(point.start.x),\n                                O(point.start.y),\n                                O(point.m.x),\n                                O(point.m.y),\n                                O(point.x),\n                                O(point.y)\n                            ];\n                            if (onlystart) {return sp;}\n                            subpaths.start = sp;\n                            sp = [\n                                \"M\" + O(point.x),\n                                O(point.y) + \"C\" + O(point.n.x),\n                                O(point.n.y),\n                                O(point.end.x),\n                                O(point.end.y),\n                                O(p[5]),\n                                O(p[6])\n                            ].join();\n                            len += l;\n                            x = +p[5];\n                            y = +p[6];\n                            continue;\n                        }\n                        if (!istotal && !subpath) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            return point;\n                        }\n                    }\n                    len += l;\n                    x = +p[5];\n                    y = +p[6];\n                }\n                sp += p.shift() + p;\n            }\n            subpaths.end = sp;\n            point = istotal ? len : subpath ? subpaths : findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\n            return point;\n        }, null, Snap._.clone);\n    }\n    var getTotalLength = getLengthFactory(1),\n        getPointAtLength = getLengthFactory(),\n        getSubpathsAtLength = getLengthFactory(0, 1);\n    function findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t,\n            t13 = pow(t1, 3),\n            t12 = pow(t1, 2),\n            t2 = t * t,\n            t3 = t2 * t,\n            x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\n            y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\n            mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\n            my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\n            nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\n            ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\n            ax = t1 * p1x + t * c1x,\n            ay = t1 * p1y + t * c1y,\n            cx = t1 * c2x + t * p2x,\n            cy = t1 * c2y + t * p2y,\n            alpha = 90 - math.atan2(mx - nx, my - ny) * 180 / PI;\n        // (mx > nx || my < ny) && (alpha += 180);\n        return {\n            x: x,\n            y: y,\n            m: {x: mx, y: my},\n            n: {x: nx, y: ny},\n            start: {x: ax, y: ay},\n            end: {x: cx, y: cy},\n            alpha: alpha\n        };\n    }\n    function bezierBBox(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n        if (!Snap.is(p1x, \"array\")) {\n            p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n        }\n        var bbox = curveDim.apply(null, p1x);\n        return box(\n            bbox.min.x,\n            bbox.min.y,\n            bbox.max.x - bbox.min.x,\n            bbox.max.y - bbox.min.y\n        );\n    }\n    function isPointInsideBBox(bbox, x, y) {\n        return  x >= bbox.x &&\n                x <= bbox.x + bbox.width &&\n                y >= bbox.y &&\n                y <= bbox.y + bbox.height;\n    }\n    function isBBoxIntersect(bbox1, bbox2) {\n        bbox1 = box(bbox1);\n        bbox2 = box(bbox2);\n        return isPointInsideBBox(bbox2, bbox1.x, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2)\n            || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x\n                || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)\n            && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y\n                || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n    }\n    function base3(t, p1, p2, p3, p4) {\n        var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n            t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n        return t * t2 - 3 * p1 + 3 * p2;\n    }\n    function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n        if (z == null) {\n            z = 1;\n        }\n        z = z > 1 ? 1 : z < 0 ? 0 : z;\n        var z2 = z / 2,\n            n = 12,\n            Tvalues = [-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],\n            Cvalues = [0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],\n            sum = 0;\n        for (var i = 0; i < n; i++) {\n            var ct = z2 * Tvalues[i] + z2,\n                xbase = base3(ct, x1, x2, x3, x4),\n                ybase = base3(ct, y1, y2, y3, y4),\n                comb = xbase * xbase + ybase * ybase;\n            sum += Cvalues[i] * math.sqrt(comb);\n        }\n        return z2 * sum;\n    }\n    function getTotLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\n        if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\n            return;\n        }\n        var t = 1,\n            step = t / 2,\n            t2 = t - step,\n            l,\n            e = .01;\n        l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        while (abs(l - ll) > e) {\n            step /= 2;\n            t2 += (l < ll ? 1 : -1) * step;\n            l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        }\n        return t2;\n    }\n    function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n        if (\n            mmax(x1, x2) < mmin(x3, x4) ||\n            mmin(x1, x2) > mmax(x3, x4) ||\n            mmax(y1, y2) < mmin(y3, y4) ||\n            mmin(y1, y2) > mmax(y3, y4)\n        ) {\n            return;\n        }\n        var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n            ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n            denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n        if (!denominator) {\n            return;\n        }\n        var px = nx / denominator,\n            py = ny / denominator,\n            px2 = +px.toFixed(2),\n            py2 = +py.toFixed(2);\n        if (\n            px2 < +mmin(x1, x2).toFixed(2) ||\n            px2 > +mmax(x1, x2).toFixed(2) ||\n            px2 < +mmin(x3, x4).toFixed(2) ||\n            px2 > +mmax(x3, x4).toFixed(2) ||\n            py2 < +mmin(y1, y2).toFixed(2) ||\n            py2 > +mmax(y1, y2).toFixed(2) ||\n            py2 < +mmin(y3, y4).toFixed(2) ||\n            py2 > +mmax(y3, y4).toFixed(2)\n        ) {\n            return;\n        }\n        return {x: px, y: py};\n    }\n    function inter(bez1, bez2) {\n        return interHelper(bez1, bez2);\n    }\n    function interCount(bez1, bez2) {\n        return interHelper(bez1, bez2, 1);\n    }\n    function interHelper(bez1, bez2, justCount) {\n        var bbox1 = bezierBBox(bez1),\n            bbox2 = bezierBBox(bez2);\n        if (!isBBoxIntersect(bbox1, bbox2)) {\n            return justCount ? 0 : [];\n        }\n        var l1 = bezlen.apply(0, bez1),\n            l2 = bezlen.apply(0, bez2),\n            n1 = ~~(l1 / 8),\n            n2 = ~~(l2 / 8),\n            dots1 = [],\n            dots2 = [],\n            xy = {},\n            res = justCount ? 0 : [];\n        for (var i = 0; i < n1 + 1; i++) {\n            var p = findDotsAtSegment.apply(0, bez1.concat(i / n1));\n            dots1.push({x: p.x, y: p.y, t: i / n1});\n        }\n        for (i = 0; i < n2 + 1; i++) {\n            p = findDotsAtSegment.apply(0, bez2.concat(i / n2));\n            dots2.push({x: p.x, y: p.y, t: i / n2});\n        }\n        for (i = 0; i < n1; i++) {\n            for (var j = 0; j < n2; j++) {\n                var di = dots1[i],\n                    di1 = dots1[i + 1],\n                    dj = dots2[j],\n                    dj1 = dots2[j + 1],\n                    ci = abs(di1.x - di.x) < .001 ? \"y\" : \"x\",\n                    cj = abs(dj1.x - dj.x) < .001 ? \"y\" : \"x\",\n                    is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n                if (is) {\n                    if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\n                        continue;\n                    }\n                    xy[is.x.toFixed(4)] = is.y.toFixed(4);\n                    var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\n                        t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n                    if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n                        if (justCount) {\n                            res++;\n                        } else {\n                            res.push({\n                                x: is.x,\n                                y: is.y,\n                                t1: t1,\n                                t2: t2\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function pathIntersection(path1, path2) {\n        return interPathHelper(path1, path2);\n    }\n    function pathIntersectionNumber(path1, path2) {\n        return interPathHelper(path1, path2, 1);\n    }\n    function interPathHelper(path1, path2, justCount) {\n        path1 = path2curve(path1);\n        path2 = path2curve(path2);\n        var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2,\n            res = justCount ? 0 : [];\n        for (var i = 0, ii = path1.length; i < ii; i++) {\n            var pi = path1[i];\n            if (pi[0] == \"M\") {\n                x1 = x1m = pi[1];\n                y1 = y1m = pi[2];\n            } else {\n                if (pi[0] == \"C\") {\n                    bez1 = [x1, y1].concat(pi.slice(1));\n                    x1 = bez1[6];\n                    y1 = bez1[7];\n                } else {\n                    bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n                    x1 = x1m;\n                    y1 = y1m;\n                }\n                for (var j = 0, jj = path2.length; j < jj; j++) {\n                    var pj = path2[j];\n                    if (pj[0] == \"M\") {\n                        x2 = x2m = pj[1];\n                        y2 = y2m = pj[2];\n                    } else {\n                        if (pj[0] == \"C\") {\n                            bez2 = [x2, y2].concat(pj.slice(1));\n                            x2 = bez2[6];\n                            y2 = bez2[7];\n                        } else {\n                            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n                            x2 = x2m;\n                            y2 = y2m;\n                        }\n                        var intr = interHelper(bez1, bez2, justCount);\n                        if (justCount) {\n                            res += intr;\n                        } else {\n                            for (var k = 0, kk = intr.length; k < kk; k++) {\n                                intr[k].segment1 = i;\n                                intr[k].segment2 = j;\n                                intr[k].bez1 = bez1;\n                                intr[k].bez2 = bez2;\n                            }\n                            res = res.concat(intr);\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function isPointInsidePath(path, x, y) {\n        var bbox = pathBBox(path);\n        return isPointInsideBBox(bbox, x, y) &&\n               interPathHelper(path, [[\"M\", x, y], [\"H\", bbox.x2 + 10]], 1) % 2 == 1;\n    }\n    function pathBBox(path) {\n        var pth = paths(path);\n        if (pth.bbox) {\n            return clone(pth.bbox);\n        }\n        if (!path) {\n            return box();\n        }\n        path = path2curve(path);\n        var x = 0,\n            y = 0,\n            X = [],\n            Y = [],\n            p;\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            p = path[i];\n            if (p[0] == \"M\") {\n                x = p[1];\n                y = p[2];\n                X.push(x);\n                Y.push(y);\n            } else {\n                var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                X = X.concat(dim.min.x, dim.max.x);\n                Y = Y.concat(dim.min.y, dim.max.y);\n                x = p[5];\n                y = p[6];\n            }\n        }\n        var xmin = mmin.apply(0, X),\n            ymin = mmin.apply(0, Y),\n            xmax = mmax.apply(0, X),\n            ymax = mmax.apply(0, Y),\n            bb = box(xmin, ymin, xmax - xmin, ymax - ymin);\n        pth.bbox = clone(bb);\n        return bb;\n    }\n    function rectPath(x, y, w, h, r) {\n        if (r) {\n            return [\n                [\"M\", +x + +r, y],\n                [\"l\", w - r * 2, 0],\n                [\"a\", r, r, 0, 0, 1, r, r],\n                [\"l\", 0, h - r * 2],\n                [\"a\", r, r, 0, 0, 1, -r, r],\n                [\"l\", r * 2 - w, 0],\n                [\"a\", r, r, 0, 0, 1, -r, -r],\n                [\"l\", 0, r * 2 - h],\n                [\"a\", r, r, 0, 0, 1, r, -r],\n                [\"z\"]\n            ];\n        }\n        var res = [[\"M\", x, y], [\"l\", w, 0], [\"l\", 0, h], [\"l\", -w, 0], [\"z\"]];\n        res.toString = toString;\n        return res;\n    }\n    function ellipsePath(x, y, rx, ry, a) {\n        if (a == null && ry == null) {\n            ry = rx;\n        }\n        x = +x;\n        y = +y;\n        rx = +rx;\n        ry = +ry;\n        if (a != null) {\n            var rad = Math.PI / 180,\n                x1 = x + rx * Math.cos(-ry * rad),\n                x2 = x + rx * Math.cos(-a * rad),\n                y1 = y + rx * Math.sin(-ry * rad),\n                y2 = y + rx * Math.sin(-a * rad),\n                res = [[\"M\", x1, y1], [\"A\", rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\n        } else {\n            res = [\n                [\"M\", x, y],\n                [\"m\", 0, -ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry],\n                [\"z\"]\n            ];\n        }\n        res.toString = toString;\n        return res;\n    }\n    var unit2px = Snap._unit2px,\n        getPath = {\n        path: function (el) {\n            return el.attr(\"path\");\n        },\n        circle: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx, attr.cy, attr.r);\n        },\n        ellipse: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx || 0, attr.cy || 0, attr.rx, attr.ry);\n        },\n        rect: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height, attr.rx, attr.ry);\n        },\n        image: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height);\n        },\n        line: function (el) {\n            return \"M\" + [el.attr(\"x1\") || 0, el.attr(\"y1\") || 0, el.attr(\"x2\"), el.attr(\"y2\")];\n        },\n        polyline: function (el) {\n            return \"M\" + el.attr(\"points\");\n        },\n        polygon: function (el) {\n            return \"M\" + el.attr(\"points\") + \"z\";\n        },\n        deflt: function (el) {\n            var bbox = el.node.getBBox();\n            return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\n        }\n    };\n    function pathToRelative(pathArray) {\n        var pth = paths(pathArray),\n            lowerCase = String.prototype.toLowerCase;\n        if (pth.rel) {\n            return pathClone(pth.rel);\n        }\n        if (!Snap.is(pathArray, \"array\") || !Snap.is(pathArray && pathArray[0], \"array\")) {\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0;\n        if (pathArray[0][0] == \"M\") {\n            x = pathArray[0][1];\n            y = pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res.push([\"M\", x, y]);\n        }\n        for (var i = start, ii = pathArray.length; i < ii; i++) {\n            var r = res[i] = [],\n                pa = pathArray[i];\n            if (pa[0] != lowerCase.call(pa[0])) {\n                r[0] = lowerCase.call(pa[0]);\n                switch (r[0]) {\n                    case \"a\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +(pa[6] - x).toFixed(3);\n                        r[7] = +(pa[7] - y).toFixed(3);\n                        break;\n                    case \"v\":\n                        r[1] = +(pa[1] - y).toFixed(3);\n                        break;\n                    case \"m\":\n                        mx = pa[1];\n                        my = pa[2];\n                    default:\n                        for (var j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +(pa[j] - (j % 2 ? x : y)).toFixed(3);\n                        }\n                }\n            } else {\n                r = res[i] = [];\n                if (pa[0] == \"m\") {\n                    mx = pa[1] + x;\n                    my = pa[2] + y;\n                }\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    res[i][k] = pa[k];\n                }\n            }\n            var len = res[i].length;\n            switch (res[i][0]) {\n                case \"z\":\n                    x = mx;\n                    y = my;\n                    break;\n                case \"h\":\n                    x += +res[i][len - 1];\n                    break;\n                case \"v\":\n                    y += +res[i][len - 1];\n                    break;\n                default:\n                    x += +res[i][len - 2];\n                    y += +res[i][len - 1];\n            }\n        }\n        res.toString = toString;\n        pth.rel = pathClone(res);\n        return res;\n    }\n    function pathToAbsolute(pathArray) {\n        var pth = paths(pathArray);\n        if (pth.abs) {\n            return pathClone(pth.abs);\n        }\n        if (!is(pathArray, \"array\") || !is(pathArray && pathArray[0], \"array\")) { // rough assumption\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        if (!pathArray || !pathArray.length) {\n            return [[\"M\", 0, 0]];\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0,\n            pa0;\n        if (pathArray[0][0] == \"M\") {\n            x = +pathArray[0][1];\n            y = +pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res[0] = [\"M\", x, y];\n        }\n        var crz = pathArray.length == 3 &&\n            pathArray[0][0] == \"M\" &&\n            pathArray[1][0].toUpperCase() == \"R\" &&\n            pathArray[2][0].toUpperCase() == \"Z\";\n        for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n            res.push(r = []);\n            pa = pathArray[i];\n            pa0 = pa[0];\n            if (pa0 != pa0.toUpperCase()) {\n                r[0] = pa0.toUpperCase();\n                switch (r[0]) {\n                    case \"A\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +pa[6] + x;\n                        r[7] = +pa[7] + y;\n                        break;\n                    case \"V\":\n                        r[1] = +pa[1] + y;\n                        break;\n                    case \"H\":\n                        r[1] = +pa[1] + x;\n                        break;\n                    case \"R\":\n                        var dots = [x, y].concat(pa.slice(1));\n                        for (var j = 2, jj = dots.length; j < jj; j++) {\n                            dots[j] = +dots[j] + x;\n                            dots[++j] = +dots[j] + y;\n                        }\n                        res.pop();\n                        res = res.concat(catmullRom2bezier(dots, crz));\n                        break;\n                    case \"O\":\n                        res.pop();\n                        dots = ellipsePath(x, y, pa[1], pa[2]);\n                        dots.push(dots[0]);\n                        res = res.concat(dots);\n                        break;\n                    case \"U\":\n                        res.pop();\n                        res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                        r = [\"U\"].concat(res[res.length - 1].slice(-2));\n                        break;\n                    case \"M\":\n                        mx = +pa[1] + x;\n                        my = +pa[2] + y;\n                    default:\n                        for (j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +pa[j] + (j % 2 ? x : y);\n                        }\n                }\n            } else if (pa0 == \"R\") {\n                dots = [x, y].concat(pa.slice(1));\n                res.pop();\n                res = res.concat(catmullRom2bezier(dots, crz));\n                r = [\"R\"].concat(pa.slice(-2));\n            } else if (pa0 == \"O\") {\n                res.pop();\n                dots = ellipsePath(x, y, pa[1], pa[2]);\n                dots.push(dots[0]);\n                res = res.concat(dots);\n            } else if (pa0 == \"U\") {\n                res.pop();\n                res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                r = [\"U\"].concat(res[res.length - 1].slice(-2));\n            } else {\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    r[k] = pa[k];\n                }\n            }\n            pa0 = pa0.toUpperCase();\n            if (pa0 != \"O\") {\n                switch (r[0]) {\n                    case \"Z\":\n                        x = +mx;\n                        y = +my;\n                        break;\n                    case \"H\":\n                        x = r[1];\n                        break;\n                    case \"V\":\n                        y = r[1];\n                        break;\n                    case \"M\":\n                        mx = r[r.length - 2];\n                        my = r[r.length - 1];\n                    default:\n                        x = r[r.length - 2];\n                        y = r[r.length - 1];\n                }\n            }\n        }\n        res.toString = toString;\n        pth.abs = pathClone(res);\n        return res;\n    }\n    function l2c(x1, y1, x2, y2) {\n        return [x1, y1, x2, y2, x2, y2];\n    }\n    function q2c(x1, y1, ax, ay, x2, y2) {\n        var _13 = 1 / 3,\n            _23 = 2 / 3;\n        return [\n                _13 * x1 + _23 * ax,\n                _13 * y1 + _23 * ay,\n                _13 * x2 + _23 * ax,\n                _13 * y2 + _23 * ay,\n                x2,\n                y2\n            ];\n    }\n    function a2c(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n        // for more information of where this math came from visit:\n        // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n        var _120 = PI * 120 / 180,\n            rad = PI / 180 * (+angle || 0),\n            res = [],\n            xy,\n            rotate = Snap._.cacher(function (x, y, rad) {\n                var X = x * math.cos(rad) - y * math.sin(rad),\n                    Y = x * math.sin(rad) + y * math.cos(rad);\n                return {x: X, y: Y};\n            });\n        if (!rx || !ry) {\n            return [x1, y1, x2, y2, x2, y2];\n        }\n        if (!recursive) {\n            xy = rotate(x1, y1, -rad);\n            x1 = xy.x;\n            y1 = xy.y;\n            xy = rotate(x2, y2, -rad);\n            x2 = xy.x;\n            y2 = xy.y;\n            var cos = math.cos(PI / 180 * angle),\n                sin = math.sin(PI / 180 * angle),\n                x = (x1 - x2) / 2,\n                y = (y1 - y2) / 2;\n            var h = x * x / (rx * rx) + y * y / (ry * ry);\n            if (h > 1) {\n                h = math.sqrt(h);\n                rx = h * rx;\n                ry = h * ry;\n            }\n            var rx2 = rx * rx,\n                ry2 = ry * ry,\n                k = (large_arc_flag == sweep_flag ? -1 : 1) *\n                    math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n                cx = k * rx * y / ry + (x1 + x2) / 2,\n                cy = k * -ry * x / rx + (y1 + y2) / 2,\n                f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\n                f2 = math.asin(((y2 - cy) / ry).toFixed(9));\n\n            f1 = x1 < cx ? PI - f1 : f1;\n            f2 = x2 < cx ? PI - f2 : f2;\n            f1 < 0 && (f1 = PI * 2 + f1);\n            f2 < 0 && (f2 = PI * 2 + f2);\n            if (sweep_flag && f1 > f2) {\n                f1 = f1 - PI * 2;\n            }\n            if (!sweep_flag && f2 > f1) {\n                f2 = f2 - PI * 2;\n            }\n        } else {\n            f1 = recursive[0];\n            f2 = recursive[1];\n            cx = recursive[2];\n            cy = recursive[3];\n        }\n        var df = f2 - f1;\n        if (abs(df) > _120) {\n            var f2old = f2,\n                x2old = x2,\n                y2old = y2;\n            f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n            x2 = cx + rx * math.cos(f2);\n            y2 = cy + ry * math.sin(f2);\n            res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n        }\n        df = f2 - f1;\n        var c1 = math.cos(f1),\n            s1 = math.sin(f1),\n            c2 = math.cos(f2),\n            s2 = math.sin(f2),\n            t = math.tan(df / 4),\n            hx = 4 / 3 * rx * t,\n            hy = 4 / 3 * ry * t,\n            m1 = [x1, y1],\n            m2 = [x1 + hx * s1, y1 - hy * c1],\n            m3 = [x2 + hx * s2, y2 - hy * c2],\n            m4 = [x2, y2];\n        m2[0] = 2 * m1[0] - m2[0];\n        m2[1] = 2 * m1[1] - m2[1];\n        if (recursive) {\n            return [m2, m3, m4].concat(res);\n        } else {\n            res = [m2, m3, m4].concat(res).join().split(\",\");\n            var newres = [];\n            for (var i = 0, ii = res.length; i < ii; i++) {\n                newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n            }\n            return newres;\n        }\n    }\n    function findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t;\n        return {\n            x: pow(t1, 3) * p1x + pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + pow(t, 3) * p2x,\n            y: pow(t1, 3) * p1y + pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + pow(t, 3) * p2y\n        };\n    }\n\n    // Returns bounding box of cubic bezier curve.\n    // Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n    // Original version: NISHIO Hirokazu\n    // Modifications: https://github.com/timo22345\n    function curveDim(x0, y0, x1, y1, x2, y2, x3, y3) {\n        var tvalues = [],\n            bounds = [[], []],\n            a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n        for (var i = 0; i < 2; ++i) {\n            if (i == 0) {\n                b = 6 * x0 - 12 * x1 + 6 * x2;\n                a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n                c = 3 * x1 - 3 * x0;\n            } else {\n                b = 6 * y0 - 12 * y1 + 6 * y2;\n                a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n                c = 3 * y1 - 3 * y0;\n            }\n            if (abs(a) < 1e-12) {\n                if (abs(b) < 1e-12) {\n                    continue;\n                }\n                t = -c / b;\n                if (0 < t && t < 1) {\n                    tvalues.push(t);\n                }\n                continue;\n            }\n            b2ac = b * b - 4 * c * a;\n            sqrtb2ac = math.sqrt(b2ac);\n            if (b2ac < 0) {\n                continue;\n            }\n            t1 = (-b + sqrtb2ac) / (2 * a);\n            if (0 < t1 && t1 < 1) {\n                tvalues.push(t1);\n            }\n            t2 = (-b - sqrtb2ac) / (2 * a);\n            if (0 < t2 && t2 < 1) {\n                tvalues.push(t2);\n            }\n        }\n\n        var x, y, j = tvalues.length,\n            jlen = j,\n            mt;\n        while (j--) {\n            t = tvalues[j];\n            mt = 1 - t;\n            bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n            bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n        }\n\n        bounds[0][jlen] = x0;\n        bounds[1][jlen] = y0;\n        bounds[0][jlen + 1] = x3;\n        bounds[1][jlen + 1] = y3;\n        bounds[0].length = bounds[1].length = jlen + 2;\n\n\n        return {\n          min: {x: mmin.apply(0, bounds[0]), y: mmin.apply(0, bounds[1])},\n          max: {x: mmax.apply(0, bounds[0]), y: mmax.apply(0, bounds[1])}\n        };\n    }\n\n    function path2curve(path, path2) {\n        var pth = !path2 && paths(path);\n        if (!path2 && pth.curve) {\n            return pathClone(pth.curve);\n        }\n        var p = pathToAbsolute(path),\n            p2 = path2 && pathToAbsolute(path2),\n            attrs = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            attrs2 = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            processPath = function (path, d, pcom) {\n                var nx, ny;\n                if (!path) {\n                    return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\n                }\n                !(path[0] in {T: 1, Q: 1}) && (d.qx = d.qy = null);\n                switch (path[0]) {\n                    case \"M\":\n                        d.X = path[1];\n                        d.Y = path[2];\n                        break;\n                    case \"A\":\n                        path = [\"C\"].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n                        break;\n                    case \"S\":\n                        if (pcom == \"C\" || pcom == \"S\") { // In \"S\" case we have to take into account, if the previous command is C/S.\n                            nx = d.x * 2 - d.bx;          // And reflect the previous\n                            ny = d.y * 2 - d.by;          // command's control point relative to the current point.\n                        }\n                        else {                            // or some else or nothing\n                            nx = d.x;\n                            ny = d.y;\n                        }\n                        path = [\"C\", nx, ny].concat(path.slice(1));\n                        break;\n                    case \"T\":\n                        if (pcom == \"Q\" || pcom == \"T\") { // In \"T\" case we have to take into account, if the previous command is Q/T.\n                            d.qx = d.x * 2 - d.qx;        // And make a reflection similar\n                            d.qy = d.y * 2 - d.qy;        // to case \"S\".\n                        }\n                        else {                            // or something else or nothing\n                            d.qx = d.x;\n                            d.qy = d.y;\n                        }\n                        path = [\"C\"].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n                        break;\n                    case \"Q\":\n                        d.qx = path[1];\n                        d.qy = path[2];\n                        path = [\"C\"].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n                        break;\n                    case \"L\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], path[2]));\n                        break;\n                    case \"H\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], d.y));\n                        break;\n                    case \"V\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.x, path[1]));\n                        break;\n                    case \"Z\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.X, d.Y));\n                        break;\n                }\n                return path;\n            },\n            fixArc = function (pp, i) {\n                if (pp[i].length > 7) {\n                    pp[i].shift();\n                    var pi = pp[i];\n                    while (pi.length) {\n                        pcoms1[i] = \"A\"; // if created multiple C:s, their original seg is saved\n                        p2 && (pcoms2[i] = \"A\"); // the same as above\n                        pp.splice(i++, 0, [\"C\"].concat(pi.splice(0, 6)));\n                    }\n                    pp.splice(i, 1);\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            fixM = function (path1, path2, a1, a2, i) {\n                if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\n                    path2.splice(i, 0, [\"M\", a2.x, a2.y]);\n                    a1.bx = 0;\n                    a1.by = 0;\n                    a1.x = path1[i][1];\n                    a1.y = path1[i][2];\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            pcoms1 = [], // path commands of original path p\n            pcoms2 = [], // path commands of original path p2\n            pfirst = \"\", // temporary holder for original path command\n            pcom = \"\"; // holder for previous path command of original path\n        for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\n            p[i] && (pfirst = p[i][0]); // save current path command\n\n            if (pfirst != \"C\") // C is not saved yet, because it may be result of conversion\n            {\n                pcoms1[i] = pfirst; // Save current path command\n                i && ( pcom = pcoms1[i - 1]); // Get previous path command pcom\n            }\n            p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n            if (pcoms1[i] != \"A\" && pfirst == \"C\") pcoms1[i] = \"C\"; // A is the only command\n            // which may produce multiple C:s\n            // so we have to make sure that C is also C in original path\n\n            fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n            if (p2) { // the same procedures is done to p2\n                p2[i] && (pfirst = p2[i][0]);\n                if (pfirst != \"C\") {\n                    pcoms2[i] = pfirst;\n                    i && (pcom = pcoms2[i - 1]);\n                }\n                p2[i] = processPath(p2[i], attrs2, pcom);\n\n                if (pcoms2[i] != \"A\" && pfirst == \"C\") {\n                    pcoms2[i] = \"C\";\n                }\n\n                fixArc(p2, i);\n            }\n            fixM(p, p2, attrs, attrs2, i);\n            fixM(p2, p, attrs2, attrs, i);\n            var seg = p[i],\n                seg2 = p2 && p2[i],\n                seglen = seg.length,\n                seg2len = p2 && seg2.length;\n            attrs.x = seg[seglen - 2];\n            attrs.y = seg[seglen - 1];\n            attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n            attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n            attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\n            attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\n            attrs2.x = p2 && seg2[seg2len - 2];\n            attrs2.y = p2 && seg2[seg2len - 1];\n        }\n        if (!p2) {\n            pth.curve = pathClone(p);\n        }\n        return p2 ? [p, p2] : p;\n    }\n    function mapPath(path, matrix) {\n        if (!matrix) {\n            return path;\n        }\n        var x, y, i, j, ii, jj, pathi;\n        path = path2curve(path);\n        for (i = 0, ii = path.length; i < ii; i++) {\n            pathi = path[i];\n            for (j = 1, jj = pathi.length; j < jj; j += 2) {\n                x = matrix.x(pathi[j], pathi[j + 1]);\n                y = matrix.y(pathi[j], pathi[j + 1]);\n                pathi[j] = x;\n                pathi[j + 1] = y;\n            }\n        }\n        return path;\n    }\n\n    // http://schepers.cc/getting-to-the-point\n    function catmullRom2bezier(crp, z) {\n        var d = [];\n        for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n            var p = [\n                        {x: +crp[i - 2], y: +crp[i - 1]},\n                        {x: +crp[i],     y: +crp[i + 1]},\n                        {x: +crp[i + 2], y: +crp[i + 3]},\n                        {x: +crp[i + 4], y: +crp[i + 5]}\n                    ];\n            if (z) {\n                if (!i) {\n                    p[0] = {x: +crp[iLen - 2], y: +crp[iLen - 1]};\n                } else if (iLen - 4 == i) {\n                    p[3] = {x: +crp[0], y: +crp[1]};\n                } else if (iLen - 2 == i) {\n                    p[2] = {x: +crp[0], y: +crp[1]};\n                    p[3] = {x: +crp[2], y: +crp[3]};\n                }\n            } else {\n                if (iLen - 4 == i) {\n                    p[3] = p[2];\n                } else if (!i) {\n                    p[0] = {x: +crp[i], y: +crp[i + 1]};\n                }\n            }\n            d.push([\"C\",\n                  (-p[0].x + 6 * p[1].x + p[2].x) / 6,\n                  (-p[0].y + 6 * p[1].y + p[2].y) / 6,\n                  (p[1].x + 6 * p[2].x - p[3].x) / 6,\n                  (p[1].y + 6*p[2].y - p[3].y) / 6,\n                  p[2].x,\n                  p[2].y\n            ]);\n        }\n\n        return d;\n    }\n\n    // export\n    Snap.path = paths;\n\n    /*\\\n     * Snap.path.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the given path in pixels\n     **\n     - path (string) SVG path string\n     **\n     = (number) length\n    \\*/\n    Snap.path.getTotalLength = getTotalLength;\n    /*\\\n     * Snap.path.getPointAtLength\n     [ method ]\n     **\n     * Returns the coordinates of the point located at the given length along the given path\n     **\n     - path (string) SVG path string\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    Snap.path.getPointAtLength = getPointAtLength;\n    /*\\\n     * Snap.path.getSubpath\n     [ method ]\n     **\n     * Returns the subpath of a given path between given start and end lengths\n     **\n     - path (string) SVG path string\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    Snap.path.getSubpath = function (path, from, to) {\n        if (this.getTotalLength(path) - to < 1e-6) {\n            return getSubpathsAtLength(path, from).end;\n        }\n        var a = getSubpathsAtLength(path, to, 1);\n        return from ? getSubpathsAtLength(a, from).end : a;\n    };\n    /*\\\n     * Element.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the path in pixels (only works for `path` elements)\n     = (number) length\n    \\*/\n    elproto.getTotalLength = function () {\n        if (this.node.getTotalLength) {\n            return this.node.getTotalLength();\n        }\n    };\n    // SIERRA Element.getPointAtLength()/Element.getTotalLength(): If a <path> is broken into different segments, is the jump distance to the new coordinates set by the _M_ or _m_ commands calculated as part of the path's total length?\n    /*\\\n     * Element.getPointAtLength\n     [ method ]\n     **\n     * Returns coordinates of the point located at the given length on the given path (only works for `path` elements)\n     **\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    elproto.getPointAtLength = function (length) {\n        return getPointAtLength(this.attr(\"d\"), length);\n    };\n    // SIERRA Element.getSubpath(): Similar to the problem for Element.getPointAtLength(). Unclear how this would work for a segmented path. Overall, the concept of _subpath_ and what I'm calling a _segment_ (series of non-_M_ or _Z_ commands) is unclear.\n    /*\\\n     * Element.getSubpath\n     [ method ]\n     **\n     * Returns subpath of a given element from given start and end lengths (only works for `path` elements)\n     **\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    elproto.getSubpath = function (from, to) {\n        return Snap.path.getSubpath(this.attr(\"d\"), from, to);\n    };\n    Snap._.box = box;\n    /*\\\n     * Snap.path.findDotsAtSegment\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds dot coordinates on the given cubic beziér curve at the given t\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     - t (number) position on the curve (0..1)\n     = (object) point information in format:\n     o {\n     o     x: (number) x coordinate of the point,\n     o     y: (number) y coordinate of the point,\n     o     m: {\n     o         x: (number) x coordinate of the left anchor,\n     o         y: (number) y coordinate of the left anchor\n     o     },\n     o     n: {\n     o         x: (number) x coordinate of the right anchor,\n     o         y: (number) y coordinate of the right anchor\n     o     },\n     o     start: {\n     o         x: (number) x coordinate of the start of the curve,\n     o         y: (number) y coordinate of the start of the curve\n     o     },\n     o     end: {\n     o         x: (number) x coordinate of the end of the curve,\n     o         y: (number) y coordinate of the end of the curve\n     o     },\n     o     alpha: (number) angle of the curve derivative at the point\n     o }\n    \\*/\n    Snap.path.findDotsAtSegment = findDotsAtSegment;\n    /*\\\n     * Snap.path.bezierBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given cubic beziér curve\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     * or\n     - bez (array) array of six points for beziér curve\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.bezierBBox = bezierBBox;\n    /*\\\n     * Snap.path.isPointInsideBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside bounding box\n     - bbox (string) bounding box\n     - x (string) x coordinate of the point\n     - y (string) y coordinate of the point\n     = (boolean) `true` if point is inside\n    \\*/\n    Snap.path.isPointInsideBBox = isPointInsideBBox;\n    Snap.closest = function (x, y, X, Y) {\n        var r = 100,\n            b = box(x - r / 2, y - r / 2, r, r),\n            inside = [],\n            getter = X[0].hasOwnProperty(\"x\") ? function (i) {\n                return {\n                    x: X[i].x,\n                    y: X[i].y\n                };\n            } : function (i) {\n                return {\n                    x: X[i],\n                    y: Y[i]\n                };\n            },\n            found = 0;\n        while (r <= 1e6 && !found) {\n            for (var i = 0, ii = X.length; i < ii; i++) {\n                var xy = getter(i);\n                if (isPointInsideBBox(b, xy.x, xy.y)) {\n                    found++;\n                    inside.push(xy);\n                    break;\n                }\n            }\n            if (!found) {\n                r *= 2;\n                b = box(x - r / 2, y - r / 2, r, r)\n            }\n        }\n        if (r == 1e6) {\n            return;\n        }\n        var len = Infinity,\n            res;\n        for (i = 0, ii = inside.length; i < ii; i++) {\n            var l = Snap.len(x, y, inside[i].x, inside[i].y);\n            if (len > l) {\n                len = l;\n                inside[i].len = l;\n                res = inside[i];\n            }\n        }\n        return res;\n    };\n    /*\\\n     * Snap.path.isBBoxIntersect\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if two bounding boxes intersect\n     - bbox1 (string) first bounding box\n     - bbox2 (string) second bounding box\n     = (boolean) `true` if bounding boxes intersect\n    \\*/\n    Snap.path.isBBoxIntersect = isBBoxIntersect;\n    /*\\\n     * Snap.path.intersection\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds intersections of two paths\n     - path1 (string) path string\n     - path2 (string) path string\n     = (array) dots of intersection\n     o [\n     o     {\n     o         x: (number) x coordinate of the point,\n     o         y: (number) y coordinate of the point,\n     o         t1: (number) t value for segment of path1,\n     o         t2: (number) t value for segment of path2,\n     o         segment1: (number) order number for segment of path1,\n     o         segment2: (number) order number for segment of path2,\n     o         bez1: (array) eight coordinates representing beziér curve for the segment of path1,\n     o         bez2: (array) eight coordinates representing beziér curve for the segment of path2\n     o     }\n     o ]\n    \\*/\n    Snap.path.intersection = pathIntersection;\n    Snap.path.intersectionNumber = pathIntersectionNumber;\n    /*\\\n     * Snap.path.isPointInside\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside a given closed path.\n     *\n     * Note: fill mode doesn’t affect the result of this method.\n     - path (string) path string\n     - x (number) x of the point\n     - y (number) y of the point\n     = (boolean) `true` if point is inside the path\n    \\*/\n    Snap.path.isPointInside = isPointInsidePath;\n    /*\\\n     * Snap.path.getBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given path\n     - path (string) path string\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.getBBox = pathBBox;\n    Snap.path.get = getPath;\n    /*\\\n     * Snap.path.toRelative\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into relative values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toRelative = pathToRelative;\n    /*\\\n     * Snap.path.toAbsolute\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into absolute values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toAbsolute = pathToAbsolute;\n    /*\\\n     * Snap.path.toCubic\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path to a new path where all segments are cubic beziér curves\n     - pathString (string|array) path string or array of segments\n     = (array) array of segments\n    \\*/\n    Snap.path.toCubic = path2curve;\n    /*\\\n     * Snap.path.map\n     [ method ]\n     **\n     * Transform the path string with the given matrix\n     - path (string) path string\n     - matrix (object) see @Matrix\n     = (string) transformed path string\n    \\*/\n    Snap.path.map = mapPath;\n    Snap.path.toString = toString;\n    Snap.path.clone = pathClone;\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var mmax = Math.max,\n        mmin = Math.min;\n\n    // Set\n    var Set = function (items) {\n        this.items = [];\n\tthis.bindings = {};\n        this.length = 0;\n        this.type = \"set\";\n        if (items) {\n            for (var i = 0, ii = items.length; i < ii; i++) {\n                if (items[i]) {\n                    this[this.items.length] = this.items[this.items.length] = items[i];\n                    this.length++;\n                }\n            }\n        }\n    },\n    setproto = Set.prototype;\n    /*\\\n     * Set.push\n     [ method ]\n     **\n     * Adds each argument to the current set\n     = (object) original element\n    \\*/\n    setproto.push = function () {\n        var item,\n            len;\n        for (var i = 0, ii = arguments.length; i < ii; i++) {\n            item = arguments[i];\n            if (item) {\n                len = this.items.length;\n                this[len] = this.items[len] = item;\n                this.length++;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.pop\n     [ method ]\n     **\n     * Removes last element and returns it\n     = (object) element\n    \\*/\n    setproto.pop = function () {\n        this.length && delete this[this.length--];\n        return this.items.pop();\n    };\n    /*\\\n     * Set.forEach\n     [ method ]\n     **\n     * Executes given function for each element in the set\n     *\n     * If the function returns `false`, the loop stops running.\n     **\n     - callback (function) function to run\n     - thisArg (object) context object for the callback\n     = (object) Set object\n    \\*/\n    setproto.forEach = function (callback, thisArg) {\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            if (callback.call(thisArg, this.items[i], i) === false) {\n                return this;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.animate\n     [ method ]\n     **\n     * Animates each element in set in sync.\n     *\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     * or\n     - animation (array) array of animation parameter for each element in set in format `[attrs, duration, easing, callback]`\n     > Usage\n     | // animate all elements in set to radius 10\n     | set.animate({r: 10}, 500, mina.easein);\n     | // or\n     | // animate first element to radius 10, but second to radius 20 and in different time\n     | set.animate([{r: 10}, 500, mina.easein], [{r: 20}, 1500, mina.easein]);\n     = (Element) the current element\n    \\*/\n    setproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Snap._.Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = easing.dur;\n            attrs = attrs.attr;\n        }\n        var args = arguments;\n        if (Snap.is(attrs, \"array\") && Snap.is(args[args.length - 1], \"array\")) {\n            var each = true;\n        }\n        var begin,\n            handler = function () {\n                if (begin) {\n                    this.b = begin;\n                } else {\n                    begin = this.b;\n                }\n            },\n            cb = 0,\n            set = this,\n            callbacker = callback && function () {\n                if (++cb == set.length) {\n                    callback.call(this);\n                }\n            };\n        return this.forEach(function (el, i) {\n            eve.once(\"snap.animcreated.\" + el.id, handler);\n            if (each) {\n                args[i] && el.animate.apply(el, args[i]);\n            } else {\n                el.animate(attrs, ms, easing, callbacker);\n            }\n        });\n    };\n    /*\\\n     * Set.remove\n     [ method ]\n     **\n     * Removes all children of the set.\n     *\n     = (object) Set object\n    \\*/\n    setproto.remove = function () {\n        while (this.length) {\n            this.pop().remove();\n        }\n        return this;\n    };\n    /*\\\n     * Set.bind\n     [ method ]\n     **\n     * Specifies how to handle a specific attribute when applied\n     * to a set.\n     *\n     **\n     - attr (string) attribute name\n     - callback (function) function to run\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     - eattr (string) attribute on the element to bind the attribute to\n     = (object) Set object\n    \\*/\n    setproto.bind = function (attr, a, b) {\n        var data = {};\n        if (typeof a == \"function\") {\n            this.bindings[attr] = a;\n        } else {\n            var aname = b || attr;\n            this.bindings[attr] = function (v) {\n                data[aname] = v;\n                a.attr(data);\n            };\n        }\n        return this;\n    };\n    /*\\\n     * Set.attr\n     [ method ]\n     **\n     * Equivalent of @Element.attr.\n     = (object) Set object\n    \\*/\n    setproto.attr = function (value) {\n        var unbound = {};\n        for (var k in value) {\n            if (this.bindings[k]) {\n                this.bindings[k](value[k]);\n            } else {\n                unbound[k] = value[k];\n            }\n        }\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            this.items[i].attr(unbound);\n        }\n        return this;\n    };\n    /*\\\n     * Set.clear\n     [ method ]\n     **\n     * Removes all elements from the set\n    \\*/\n    setproto.clear = function () {\n        while (this.length) {\n            this.pop();\n        }\n    };\n    /*\\\n     * Set.splice\n     [ method ]\n     **\n     * Removes range of elements from the set\n     **\n     - index (number) position of the deletion\n     - count (number) number of element to remove\n     - insertion… (object) #optional elements to insert\n     = (object) set elements that were deleted\n    \\*/\n    setproto.splice = function (index, count, insertion) {\n        index = index < 0 ? mmax(this.length + index, 0) : index;\n        count = mmax(0, mmin(this.length - index, count));\n        var tail = [],\n            todel = [],\n            args = [],\n            i;\n        for (i = 2; i < arguments.length; i++) {\n            args.push(arguments[i]);\n        }\n        for (i = 0; i < count; i++) {\n            todel.push(this[index + i]);\n        }\n        for (; i < this.length - index; i++) {\n            tail.push(this[index + i]);\n        }\n        var arglen = args.length;\n        for (i = 0; i < arglen + tail.length; i++) {\n            this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];\n        }\n        i = this.items.length = this.length -= count - arglen;\n        while (this[i]) {\n            delete this[i++];\n        }\n        return new Set(todel);\n    };\n    /*\\\n     * Set.exclude\n     [ method ]\n     **\n     * Removes given element from the set\n     **\n     - element (object) element to remove\n     = (boolean) `true` if object was found and removed from the set\n    \\*/\n    setproto.exclude = function (el) {\n        for (var i = 0, ii = this.length; i < ii; i++) if (this[i] == el) {\n            this.splice(i, 1);\n            return true;\n        }\n        return false;\n    };\n    /*\\\n     * Set.insertAfter\n     [ method ]\n     **\n     * Inserts set elements after given element.\n     **\n     - element (object) set will be inserted after this element\n     = (object) Set object\n    \\*/\n    setproto.insertAfter = function (el) {\n        var i = this.items.length;\n        while (i--) {\n            this.items[i].insertAfter(el);\n        }\n        return this;\n    };\n    /*\\\n     * Set.getBBox\n     [ method ]\n     **\n     * Union of all bboxes of the set. See @Element.getBBox.\n     = (object) bounding box descriptor. See @Element.getBBox.\n    \\*/\n    setproto.getBBox = function () {\n        var x = [],\n            y = [],\n            x2 = [],\n            y2 = [];\n        for (var i = this.items.length; i--;) if (!this.items[i].removed) {\n            var box = this.items[i].getBBox();\n            x.push(box.x);\n            y.push(box.y);\n            x2.push(box.x + box.width);\n            y2.push(box.y + box.height);\n        }\n        x = mmin.apply(0, x);\n        y = mmin.apply(0, y);\n        x2 = mmax.apply(0, x2);\n        y2 = mmax.apply(0, y2);\n        return {\n            x: x,\n            y: y,\n            x2: x2,\n            y2: y2,\n            width: x2 - x,\n            height: y2 - y,\n            cx: x + (x2 - x) / 2,\n            cy: y + (y2 - y) / 2\n        };\n    };\n    /*\\\n     * Set.insertAfter\n     [ method ]\n     **\n     * Creates a clone of the set.\n     **\n     = (object) New Set object\n    \\*/\n    setproto.clone = function (s) {\n        s = new Set;\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            s.push(this.items[i].clone());\n        }\n        return s;\n    };\n    setproto.toString = function () {\n        return \"Snap\\u2018s set\";\n    };\n    setproto.type = \"set\";\n    // export\n    /*\\\n     * Snap.Set\n     [ property ]\n     **\n     * Set constructor.\n    \\*/\n    Snap.Set = Set;\n    /*\\\n     * Snap.set\n     [ method ]\n     **\n     * Creates a set and fills it with list of arguments.\n     **\n     = (object) New Set object\n     | var r = paper.rect(0, 0, 10, 10),\n     |     s1 = Snap.set(), // empty set\n     |     s2 = Snap.set(r, paper.circle(100, 100, 20)); // prefilled set\n    \\*/\n    Snap.set = function () {\n        var set = new Set;\n        if (arguments.length) {\n            set.push.apply(set, Array.prototype.slice.call(arguments, 0));\n        }\n        return set;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var names = {},\n        reUnit = /[%a-z]+$/i,\n        Str = String;\n    names.stroke = names.fill = \"colour\";\n    function getEmpty(item) {\n        var l = item[0];\n        switch (l.toLowerCase()) {\n            case \"t\": return [l, 0, 0];\n            case \"m\": return [l, 1, 0, 0, 1, 0, 0];\n            case \"r\": if (item.length == 4) {\n                return [l, 0, item[2], item[3]];\n            } else {\n                return [l, 0];\n            }\n            case \"s\": if (item.length == 5) {\n                return [l, 1, 1, item[3], item[4]];\n            } else if (item.length == 3) {\n                return [l, 1, 1];\n            } else {\n                return [l, 1];\n            }\n        }\n    }\n    function equaliseTransform(t1, t2, getBBox) {\n        t1 = t1 || new Snap.Matrix;\n        t2 = t2 || new Snap.Matrix;\n        t1 = Snap.parseTransformString(t1.toTransformString()) || [];\n        t2 = Snap.parseTransformString(t2.toTransformString()) || [];\n        var maxlength = Math.max(t1.length, t2.length),\n            from = [],\n            to = [],\n            i = 0, j, jj,\n            tt1, tt2;\n        for (; i < maxlength; i++) {\n            tt1 = t1[i] || getEmpty(t2[i]);\n            tt2 = t2[i] || getEmpty(tt1);\n            if (tt1[0] != tt2[0] ||\n                tt1[0].toLowerCase() == \"r\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3]) ||\n                tt1[0].toLowerCase() == \"s\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4])\n                ) {\n                    t1 = Snap._.transform2matrix(t1, getBBox());\n                    t2 = Snap._.transform2matrix(t2, getBBox());\n                    from = [[\"m\", t1.a, t1.b, t1.c, t1.d, t1.e, t1.f]];\n                    to = [[\"m\", t2.a, t2.b, t2.c, t2.d, t2.e, t2.f]];\n                    break;\n            }\n            from[i] = [];\n            to[i] = [];\n            for (j = 0, jj = Math.max(tt1.length, tt2.length); j < jj; j++) {\n                j in tt1 && (from[i][j] = tt1[j]);\n                j in tt2 && (to[i][j] = tt2[j]);\n            }\n        }\n        return {\n            from: path2array(from),\n            to: path2array(to),\n            f: getPath(from)\n        };\n    }\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    function getViewBox(val) {\n        return val.join(\" \");\n    }\n    function getColour(clr) {\n        return Snap.rgb(clr[0], clr[1], clr[2], clr[3]);\n    }\n    function getPath(path) {\n        var k = 0, i, ii, j, jj, out, a, b = [];\n        for (i = 0, ii = path.length; i < ii; i++) {\n            out = \"[\";\n            a = ['\"' + path[i][0] + '\"'];\n            for (j = 1, jj = path[i].length; j < jj; j++) {\n                a[j] = \"val[\" + k++ + \"]\";\n            }\n            out += a + \"]\";\n            b[i] = out;\n        }\n        return Function(\"val\", \"return Snap.path.toString.call([\" + b + \"])\");\n    }\n    function path2array(path) {\n        var out = [];\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            for (var j = 1, jj = path[i].length; j < jj; j++) {\n                out.push(path[i][j]);\n            }\n        }\n        return out;\n    }\n    function isNumeric(obj) {\n        return isFinite(obj);\n    }\n    function arrayEqual(arr1, arr2) {\n        if (!Snap.is(arr1, \"array\") || !Snap.is(arr2, \"array\")) {\n            return false;\n        }\n        return arr1.toString() == arr2.toString();\n    }\n    Element.prototype.equal = function (name, b) {\n        return eve(\"snap.util.equal\", this, name, b).firstDefined();\n    };\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this;\n        if (names[name] == \"colour\") {\n            A = Snap.color(a);\n            B = Snap.color(b);\n            return {\n                from: [A.r, A.g, A.b, A.opacity],\n                to: [B.r, B.g, B.b, B.opacity],\n                f: getColour\n            };\n        }\n        if (name == \"viewBox\") {\n            A = this.attr(name).vb.split(\" \").map(Number);\n            B = b.split(\" \").map(Number);\n            return {\n                from: A,\n                to: B,\n                f: getViewBox\n            };\n        }\n        if (name == \"transform\" || name == \"gradientTransform\" || name == \"patternTransform\") {\n            if (typeof b == \"string\") {\n                b = Str(b).replace(/\\.{3}|\\u2026/g, a);\n            }\n            a = this.matrix;\n            if (!Snap._.rgTransform.test(b)) {\n                b = Snap._.transform2matrix(Snap._.svgTransform2string(b), this.getBBox());\n            } else {\n                b = Snap._.transform2matrix(b, this.getBBox());\n            }\n            return equaliseTransform(a, b, function () {\n                return el.getBBox(1);\n            });\n        }\n        if (name == \"d\" || name == \"path\") {\n            A = Snap.path.toCubic(a, b);\n            return {\n                from: path2array(A[0]),\n                to: path2array(A[1]),\n                f: getPath(A[0])\n            };\n        }\n        if (name == \"points\") {\n            A = Str(a).split(Snap._.separator);\n            B = Str(b).split(Snap._.separator);\n            return {\n                from: A,\n                to: B,\n                f: function (val) { return val; }\n            };\n        }\n        if (isNumeric(a) && isNumeric(b)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getNumber\n            };\n        }\n        var aUnit = a.match(reUnit),\n            bUnit = Str(b).match(reUnit);\n        if (aUnit && arrayEqual(aUnit, bUnit)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getUnit(aUnit)\n            };\n        } else {\n            return {\n                from: this.asPX(name),\n                to: this.asPX(name, b),\n                f: getNumber\n            };\n        }\n    });\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n    has = \"hasOwnProperty\",\n    supportsTouch = \"createTouch\" in glob.doc,\n    events = [\n        \"click\", \"dblclick\", \"mousedown\", \"mousemove\", \"mouseout\",\n        \"mouseover\", \"mouseup\", \"touchstart\", \"touchmove\", \"touchend\",\n        \"touchcancel\"\n    ],\n    touchMap = {\n        mousedown: \"touchstart\",\n        mousemove: \"touchmove\",\n        mouseup: \"touchend\"\n    },\n    getScroll = function (xy, el) {\n        var name = xy == \"y\" ? \"scrollTop\" : \"scrollLeft\",\n            doc = el && el.node ? el.node.ownerDocument : glob.doc;\n        return doc[name in doc.documentElement ? \"documentElement\" : \"body\"][name];\n    },\n    preventDefault = function () {\n        this.returnValue = false;\n    },\n    preventTouch = function () {\n        return this.originalEvent.preventDefault();\n    },\n    stopPropagation = function () {\n        this.cancelBubble = true;\n    },\n    stopTouch = function () {\n        return this.originalEvent.stopPropagation();\n    },\n    addEvent = function (obj, type, fn, element) {\n        var realName = supportsTouch && touchMap[type] ? touchMap[type] : type,\n            f = function (e) {\n                var scrollY = getScroll(\"y\", element),\n                    scrollX = getScroll(\"x\", element);\n                if (supportsTouch && touchMap[has](type)) {\n                    for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++) {\n                        if (e.targetTouches[i].target == obj || obj.contains(e.targetTouches[i].target)) {\n                            var olde = e;\n                            e = e.targetTouches[i];\n                            e.originalEvent = olde;\n                            e.preventDefault = preventTouch;\n                            e.stopPropagation = stopTouch;\n                            break;\n                        }\n                    }\n                }\n                var x = e.clientX + scrollX,\n                    y = e.clientY + scrollY;\n                return fn.call(element, e, x, y);\n            };\n\n        if (type !== realName) {\n            obj.addEventListener(type, f, false);\n        }\n\n        obj.addEventListener(realName, f, false);\n\n        return function () {\n            if (type !== realName) {\n                obj.removeEventListener(type, f, false);\n            }\n\n            obj.removeEventListener(realName, f, false);\n            return true;\n        };\n    },\n    drag = [],\n    dragMove = function (e) {\n        var x = e.clientX,\n            y = e.clientY,\n            scrollY = getScroll(\"y\"),\n            scrollX = getScroll(\"x\"),\n            dragi,\n            j = drag.length;\n        while (j--) {\n            dragi = drag[j];\n            if (supportsTouch) {\n                var i = e.touches && e.touches.length,\n                    touch;\n                while (i--) {\n                    touch = e.touches[i];\n                    if (touch.identifier == dragi.el._drag.id || dragi.el.node.contains(touch.target)) {\n                        x = touch.clientX;\n                        y = touch.clientY;\n                        (e.originalEvent ? e.originalEvent : e).preventDefault();\n                        break;\n                    }\n                }\n            } else {\n                e.preventDefault();\n            }\n            var node = dragi.el.node,\n                o,\n                next = node.nextSibling,\n                parent = node.parentNode,\n                display = node.style.display;\n            // glob.win.opera && parent.removeChild(node);\n            // node.style.display = \"none\";\n            // o = dragi.el.paper.getElementByPoint(x, y);\n            // node.style.display = display;\n            // glob.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));\n            // o && eve(\"snap.drag.over.\" + dragi.el.id, dragi.el, o);\n            x += scrollX;\n            y += scrollY;\n            eve(\"snap.drag.move.\" + dragi.el.id, dragi.move_scope || dragi.el, x - dragi.el._drag.x, y - dragi.el._drag.y, x, y, e);\n        }\n    },\n    dragUp = function (e) {\n        Snap.unmousemove(dragMove).unmouseup(dragUp);\n        var i = drag.length,\n            dragi;\n        while (i--) {\n            dragi = drag[i];\n            dragi.el._drag = {};\n            eve(\"snap.drag.end.\" + dragi.el.id, dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el, e);\n            eve.off(\"snap.drag.*.\" + dragi.el.id);\n        }\n        drag = [];\n    };\n    /*\\\n     * Element.click\n     [ method ]\n     **\n     * Adds a click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unclick\n     [ method ]\n     **\n     * Removes a click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.dblclick\n     [ method ]\n     **\n     * Adds a double click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.undblclick\n     [ method ]\n     **\n     * Removes a double click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mousedown\n     [ method ]\n     **\n     * Adds a mousedown event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousedown\n     [ method ]\n     **\n     * Removes a mousedown event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mousemove\n     [ method ]\n     **\n     * Adds a mousemove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousemove\n     [ method ]\n     **\n     * Removes a mousemove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseout\n     [ method ]\n     **\n     * Adds a mouseout event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseout\n     [ method ]\n     **\n     * Removes a mouseout event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseover\n     [ method ]\n     **\n     * Adds a mouseover event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseover\n     [ method ]\n     **\n     * Removes a mouseover event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseup\n     [ method ]\n     **\n     * Adds a mouseup event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseup\n     [ method ]\n     **\n     * Removes a mouseup event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchstart\n     [ method ]\n     **\n     * Adds a touchstart event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchstart\n     [ method ]\n     **\n     * Removes a touchstart event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchmove\n     [ method ]\n     **\n     * Adds a touchmove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchmove\n     [ method ]\n     **\n     * Removes a touchmove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchend\n     [ method ]\n     **\n     * Adds a touchend event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchend\n     [ method ]\n     **\n     * Removes a touchend event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchcancel\n     [ method ]\n     **\n     * Adds a touchcancel event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchcancel\n     [ method ]\n     **\n     * Removes a touchcancel event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    for (var i = events.length; i--;) {\n        (function (eventName) {\n            Snap[eventName] = elproto[eventName] = function (fn, scope) {\n                if (Snap.is(fn, \"function\")) {\n                    this.events = this.events || [];\n                    this.events.push({\n                        name: eventName,\n                        f: fn,\n                        unbind: addEvent(this.node || document, eventName, fn, scope || this)\n                    });\n                } else {\n                    for (var i = 0, ii = this.events.length; i < ii; i++) if (this.events[i].name == eventName) {\n                        try {\n                            this.events[i].f.call(this);\n                        } catch (e) {}\n                    }\n                }\n                return this;\n            };\n            Snap[\"un\" + eventName] =\n            elproto[\"un\" + eventName] = function (fn) {\n                var events = this.events || [],\n                    l = events.length;\n                while (l--) if (events[l].name == eventName &&\n                               (events[l].f == fn || !fn)) {\n                    events[l].unbind();\n                    events.splice(l, 1);\n                    !events.length && delete this.events;\n                    return this;\n                }\n                return this;\n            };\n        })(events[i]);\n    }\n    /*\\\n     * Element.hover\n     [ method ]\n     **\n     * Adds hover event handlers to the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     - icontext (object) #optional context for hover in handler\n     - ocontext (object) #optional context for hover out handler\n     = (object) @Element\n    \\*/\n    elproto.hover = function (f_in, f_out, scope_in, scope_out) {\n        return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in);\n    };\n    /*\\\n     * Element.unhover\n     [ method ]\n     **\n     * Removes hover event handlers from the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     = (object) @Element\n    \\*/\n    elproto.unhover = function (f_in, f_out) {\n        return this.unmouseover(f_in).unmouseout(f_out);\n    };\n    var draggable = [];\n    // SIERRA unclear what _context_ refers to for starting, ending, moving the drag gesture.\n    // SIERRA Element.drag(): _x position of the mouse_: Where are the x/y values offset from?\n    // SIERRA Element.drag(): much of this member's doc appears to be duplicated for some reason.\n    // SIERRA Unclear about this sentence: _Additionally following drag events will be triggered: drag.start.<id> on start, drag.end.<id> on end and drag.move.<id> on every move._ Is there a global _drag_ object to which you can assign handlers keyed by an element's ID?\n    /*\\\n     * Element.drag\n     [ method ]\n     **\n     * Adds event handlers for an element's drag gesture\n     **\n     - onmove (function) handler for moving\n     - onstart (function) handler for drag start\n     - onend (function) handler for drag end\n     - mcontext (object) #optional context for moving handler\n     - scontext (object) #optional context for drag start handler\n     - econtext (object) #optional context for drag end handler\n     * Additionaly following `drag` events are triggered: `drag.start.<id>` on start, \n     * `drag.end.<id>` on end and `drag.move.<id>` on every move. When element is dragged over another element \n     * `drag.over.<id>` fires as well.\n     *\n     * Start event and start handler are called in specified context or in context of the element with following parameters:\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * Move event and move handler are called in specified context or in context of the element with following parameters:\n     o dx (number) shift by x from the start point\n     o dy (number) shift by y from the start point\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * End event and end handler are called in specified context or in context of the element with following parameters:\n     o event (object) DOM event object\n     = (object) @Element\n    \\*/\n    elproto.drag = function (onmove, onstart, onend, move_scope, start_scope, end_scope) {\n        var el = this;\n        if (!arguments.length) {\n            var origTransform;\n            return el.drag(function (dx, dy) {\n                this.attr({\n                    transform: origTransform + (origTransform ? \"T\" : \"t\") + [dx, dy]\n                });\n            }, function () {\n                origTransform = this.transform().local;\n            });\n        }\n        function start(e, x, y) {\n            (e.originalEvent || e).preventDefault();\n            el._drag.x = x;\n            el._drag.y = y;\n            el._drag.id = e.identifier;\n            !drag.length && Snap.mousemove(dragMove).mouseup(dragUp);\n            drag.push({el: el, move_scope: move_scope, start_scope: start_scope, end_scope: end_scope});\n            onstart && eve.on(\"snap.drag.start.\" + el.id, onstart);\n            onmove && eve.on(\"snap.drag.move.\" + el.id, onmove);\n            onend && eve.on(\"snap.drag.end.\" + el.id, onend);\n            eve(\"snap.drag.start.\" + el.id, start_scope || move_scope || el, x, y, e);\n        }\n        function init(e, x, y) {\n            eve(\"snap.draginit.\" + el.id, el, e, x, y);\n        }\n        eve.on(\"snap.draginit.\" + el.id, start);\n        el._drag = {};\n        draggable.push({el: el, start: start, init: init});\n        el.mousedown(init);\n        return el;\n    };\n    /*\n     * Element.onDragOver\n     [ method ]\n     **\n     * Shortcut to assign event handler for `drag.over.<id>` event, where `id` is the element's `id` (see @Element.id)\n     - f (function) handler for event, first argument would be the element you are dragging over\n    \\*/\n    // elproto.onDragOver = function (f) {\n    //     f ? eve.on(\"snap.drag.over.\" + this.id, f) : eve.unbind(\"snap.drag.over.\" + this.id);\n    // };\n    /*\\\n     * Element.undrag\n     [ method ]\n     **\n     * Removes all drag event handlers from the given element\n    \\*/\n    elproto.undrag = function () {\n        var i = draggable.length;\n        while (i--) if (draggable[i].el == this) {\n            this.unmousedown(draggable[i].init);\n            draggable.splice(i, 1);\n            eve.unbind(\"snap.drag.*.\" + this.id);\n            eve.unbind(\"snap.draginit.\" + this.id);\n        }\n        !draggable.length && Snap.unmousemove(dragMove).unmouseup(dragUp);\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        pproto = Paper.prototype,\n        rgurl = /^\\s*url\\((.+)\\)/,\n        Str = String,\n        $ = Snap._.$;\n    Snap.filter = {};\n    /*\\\n     * Paper.filter\n     [ method ]\n     **\n     * Creates a `<filter>` element\n     **\n     - filstr (string) SVG fragment of filter provided as a string\n     = (object) @Element\n     * Note: It is recommended to use filters embedded into the page inside an empty SVG element.\n     > Usage\n     | var f = paper.filter('<feGaussianBlur stdDeviation=\"2\"/>'),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    pproto.filter = function (filstr) {\n        var paper = this;\n        if (paper.type != \"svg\") {\n            paper = paper.paper;\n        }\n        var f = Snap.parse(Str(filstr)),\n            id = Snap._.id(),\n            width = paper.node.offsetWidth,\n            height = paper.node.offsetHeight,\n            filter = $(\"filter\");\n        $(filter, {\n            id: id,\n            filterUnits: \"userSpaceOnUse\"\n        });\n        filter.appendChild(f.node);\n        paper.defs.appendChild(filter);\n        return new Element(filter);\n    };\n\n    eve.on(\"snap.util.getattr.filter\", function () {\n        eve.stop();\n        var p = $(this.node, \"filter\");\n        if (p) {\n            var match = Str(p).match(rgurl);\n            return match && Snap.select(match[1]);\n        }\n    });\n    eve.on(\"snap.util.attr.filter\", function (value) {\n        if (value instanceof Element && value.type == \"filter\") {\n            eve.stop();\n            var id = value.node.id;\n            if (!id) {\n                $(value.node, {id: value.id});\n                id = value.id;\n            }\n            $(this.node, {\n                filter: Snap.url(id)\n            });\n        }\n        if (!value || value == \"none\") {\n            eve.stop();\n            this.node.removeAttribute(\"filter\");\n        }\n    });\n    /*\\\n     * Snap.filter.blur\n     [ method ]\n     **\n     * Returns an SVG markup string for the blur filter\n     **\n     - x (number) amount of horizontal blur, in pixels\n     - y (number) #optional amount of vertical blur, in pixels\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.blur(5, 10)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.blur = function (x, y) {\n        if (x == null) {\n            x = 2;\n        }\n        var def = y == null ? x : [x, y];\n        return Snap.format('\\<feGaussianBlur stdDeviation=\"{def}\"/>', {\n            def: def\n        });\n    };\n    Snap.filter.blur.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.shadow\n     [ method ]\n     **\n     * Returns an SVG markup string for the shadow filter\n     **\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - blur (number) #optional amount of blur\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * which makes blur default to `4`. Or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - opacity (number) #optional `0..1` opacity of the shadow\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.shadow(0, 2, .3)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.shadow = function (dx, dy, blur, color, opacity) {\n        if (opacity == null) {\n            if (color == null) {\n                opacity = blur;\n                blur = 4;\n                color = \"#000\";\n            } else {\n                opacity = color;\n                color = blur;\n                blur = 4;\n            }\n        }\n        if (blur == null) {\n            blur = 4;\n        }\n        if (opacity == null) {\n            opacity = 1;\n        }\n        if (dx == null) {\n            dx = 0;\n            dy = 2;\n        }\n        if (dy == null) {\n            dy = dx;\n        }\n        color = Snap.color(color);\n        return Snap.format('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"{blur}\"/><feOffset dx=\"{dx}\" dy=\"{dy}\" result=\"offsetblur\"/><feFlood flood-color=\"{color}\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"{opacity}\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>', {\n            color: color,\n            dx: dx,\n            dy: dy,\n            blur: blur,\n            opacity: opacity\n        });\n    };\n    Snap.filter.shadow.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.grayscale\n     [ method ]\n     **\n     * Returns an SVG markup string for the grayscale filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.grayscale = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0\"/>', {\n            a: 0.2126 + 0.7874 * (1 - amount),\n            b: 0.7152 - 0.7152 * (1 - amount),\n            c: 0.0722 - 0.0722 * (1 - amount),\n            d: 0.2126 - 0.2126 * (1 - amount),\n            e: 0.7152 + 0.2848 * (1 - amount),\n            f: 0.0722 - 0.0722 * (1 - amount),\n            g: 0.2126 - 0.2126 * (1 - amount),\n            h: 0.0722 + 0.9278 * (1 - amount)\n        });\n    };\n    Snap.filter.grayscale.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.sepia\n     [ method ]\n     **\n     * Returns an SVG markup string for the sepia filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.sepia = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0\"/>', {\n            a: 0.393 + 0.607 * (1 - amount),\n            b: 0.769 - 0.769 * (1 - amount),\n            c: 0.189 - 0.189 * (1 - amount),\n            d: 0.349 - 0.349 * (1 - amount),\n            e: 0.686 + 0.314 * (1 - amount),\n            f: 0.168 - 0.168 * (1 - amount),\n            g: 0.272 - 0.272 * (1 - amount),\n            h: 0.534 - 0.534 * (1 - amount),\n            i: 0.131 + 0.869 * (1 - amount)\n        });\n    };\n    Snap.filter.sepia.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.saturate\n     [ method ]\n     **\n     * Returns an SVG markup string for the saturate filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.saturate = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"saturate\" values=\"{amount}\"/>', {\n            amount: 1 - amount\n        });\n    };\n    Snap.filter.saturate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.hueRotate\n     [ method ]\n     **\n     * Returns an SVG markup string for the hue-rotate filter\n     **\n     - angle (number) angle of rotation\n     = (string) filter representation\n    \\*/\n    Snap.filter.hueRotate = function (angle) {\n        angle = angle || 0;\n        return Snap.format('<feColorMatrix type=\"hueRotate\" values=\"{angle}\"/>', {\n            angle: angle\n        });\n    };\n    Snap.filter.hueRotate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.invert\n     [ method ]\n     **\n     * Returns an SVG markup string for the invert filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.invert = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n//        <feColorMatrix type=\"matrix\" values=\"-1 0 0 0 1  0 -1 0 0 1  0 0 -1 0 1  0 0 0 1 0\" color-interpolation-filters=\"sRGB\"/>\n        return Snap.format('<feComponentTransfer><feFuncR type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncG type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncB type=\"table\" tableValues=\"{amount} {amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: 1 - amount\n        });\n    };\n    Snap.filter.invert.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.brightness\n     [ method ]\n     **\n     * Returns an SVG markup string for the brightness filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.brightness = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\"/><feFuncG type=\"linear\" slope=\"{amount}\"/><feFuncB type=\"linear\" slope=\"{amount}\"/></feComponentTransfer>', {\n            amount: amount\n        });\n    };\n    Snap.filter.brightness.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.contrast\n     [ method ]\n     **\n     * Returns an SVG markup string for the contrast filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.contrast = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncG type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncB type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: .5 - amount / 2\n        });\n    };\n    Snap.filter.contrast.toString = function () {\n        return this();\n    };\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var box = Snap._.box,\n        is = Snap.is,\n        firstLetter = /^[^a-z]*([tbmlrc])/i,\n        toString = function () {\n            return \"T\" + this.dx + \",\" + this.dy;\n        };\n    /*\\\n     * Element.getAlign\n     [ method ]\n     **\n     * Returns shift needed to align the element relatively to given element.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object|string) Object in format `{dx: , dy: }` also has a string representation as a transformation string\n     > Usage\n     | el.transform(el.getAlign(el2, \"top\"));\n     * or\n     | var dy = el.getAlign(el2, \"top\").dy;\n    \\*/\n    Element.prototype.getAlign = function (el, way) {\n        if (way == null && is(el, \"string\")) {\n            way = el;\n            el = null;\n        }\n        el = el || this.paper;\n        var bx = el.getBBox ? el.getBBox() : box(el),\n            bb = this.getBBox(),\n            out = {};\n        way = way && way.match(firstLetter);\n        way = way ? way[1].toLowerCase() : \"c\";\n        switch (way) {\n            case \"t\":\n                out.dx = 0;\n                out.dy = bx.y - bb.y;\n            break;\n            case \"b\":\n                out.dx = 0;\n                out.dy = bx.y2 - bb.y2;\n            break;\n            case \"m\":\n                out.dx = 0;\n                out.dy = bx.cy - bb.cy;\n            break;\n            case \"l\":\n                out.dx = bx.x - bb.x;\n                out.dy = 0;\n            break;\n            case \"r\":\n                out.dx = bx.x2 - bb.x2;\n                out.dy = 0;\n            break;\n            default:\n                out.dx = bx.cx - bb.cx;\n                out.dy = 0;\n            break;\n        }\n        out.toString = toString;\n        return out;\n    };\n    /*\\\n     * Element.align\n     [ method ]\n     **\n     * Aligns the element relatively to given one via transformation.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object) this element\n     > Usage\n     | el.align(el2, \"top\");\n     * or\n     | el.align(\"middle\");\n    \\*/\n    Element.prototype.align = function (el, way) {\n        return this.transform(\"...\" + this.getAlign(el, way));\n    };\n});\n\n// Copyright (c) 2016 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        has = \"hasOwnProperty\";\n    function slice(from, to, f) {\n        return function (arr) {\n            var res = arr.slice(from, to);\n            if (res.length == 1) {\n                res = res[0];\n            }\n            return f ? f(res) : res;\n        };\n    }\n    var Animation = function (attr, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        this.attr = attr;\n        this.dur = ms;\n        easing && (this.easing = easing);\n        callback && (this.callback = callback);\n    };\n    Snap._.Animation = Animation;\n    /*\\\n     * Snap.animation\n     [ method ]\n     **\n     * Creates an animation object\n     **\n     - attr (object) attributes of final destination\n     - duration (number) duration of the animation, in milliseconds\n     - easing (function) #optional one of easing functions of @mina or custom one\n     - callback (function) #optional callback function that fires when animation ends\n     = (object) animation object\n    \\*/\n    Snap.animation = function (attr, ms, easing, callback) {\n        return new Animation(attr, ms, easing, callback);\n    };\n    /*\\\n     * Element.inAnim\n     [ method ]\n     **\n     * Returns a set of animations that may be able to manipulate the current element\n     **\n     = (object) in format:\n     o {\n     o     anim (object) animation object,\n     o     mina (object) @mina object,\n     o     curStatus (number) 0..1 — status of the animation: 0 — just started, 1 — just finished,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n    \\*/\n    elproto.inAnim = function () {\n        var el = this,\n            res = [];\n        for (var id in el.anims) if (el.anims[has](id)) {\n            (function (a) {\n                res.push({\n                    anim: new Animation(a._attrs, a.dur, a.easing, a._callback),\n                    mina: a,\n                    curStatus: a.status(),\n                    status: function (val) {\n                        return a.status(val);\n                    },\n                    stop: function () {\n                        a.stop();\n                    }\n                });\n            }(el.anims[id]));\n        }\n        return res;\n    };\n    /*\\\n     * Snap.animate\n     [ method ]\n     **\n     * Runs generic animation of one number into another with a caring function\n     **\n     - from (number|array) number or array of numbers\n     - to (number|array) number or array of numbers\n     - setter (function) caring function that accepts one number argument\n     - duration (number) duration, in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function to execute when animation ends\n     = (object) animation object in @mina format\n     o {\n     o     id (string) animation id, consider it read-only,\n     o     duration (function) gets or sets the duration of the animation,\n     o     easing (function) easing,\n     o     speed (function) gets or sets the speed of the animation,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n     | var rect = Snap().rect(0, 0, 10, 10);\n     | Snap.animate(0, 10, function (val) {\n     |     rect.attr({\n     |         x: val\n     |     });\n     | }, 1000);\n     | // in given context is equivalent to\n     | rect.animate({x: 10}, 1000);\n    \\*/\n    Snap.animate = function (from, to, setter, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        var now = mina.time(),\n            anim = mina(from, to, now, now + ms, mina.time, setter, easing);\n        callback && eve.once(\"mina.finish.\" + anim.id, callback);\n        return anim;\n    };\n    /*\\\n     * Element.stop\n     [ method ]\n     **\n     * Stops all the animations for the current element\n     **\n     = (Element) the current element\n    \\*/\n    elproto.stop = function () {\n        var anims = this.inAnim();\n        for (var i = 0, ii = anims.length; i < ii; i++) {\n            anims[i].stop();\n        }\n        return this;\n    };\n    /*\\\n     * Element.animate\n     [ method ]\n     **\n     * Animates the given attributes of the element\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     = (Element) the current element\n    \\*/\n    elproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = attrs.dur;\n            attrs = attrs.attr;\n        }\n        var fkeys = [], tkeys = [], keys = {}, from, to, f, eq,\n            el = this;\n        for (var key in attrs) if (attrs[has](key)) {\n            if (el.equal) {\n                eq = el.equal(key, Str(attrs[key]));\n                from = eq.from;\n                to = eq.to;\n                f = eq.f;\n            } else {\n                from = +el.attr(key);\n                to = +attrs[key];\n            }\n            var len = is(from, \"array\") ? from.length : 1;\n            keys[key] = slice(fkeys.length, fkeys.length + len, f);\n            fkeys = fkeys.concat(from);\n            tkeys = tkeys.concat(to);\n        }\n        var now = mina.time(),\n            anim = mina(fkeys, tkeys, now, now + ms, mina.time, function (val) {\n                var attr = {};\n                for (var key in keys) if (keys[has](key)) {\n                    attr[key] = keys[key](val);\n                }\n                el.attr(attr);\n            }, easing);\n        el.anims[anim.id] = anim;\n        anim._attrs = attrs;\n        anim._callback = callback;\n        eve(\"snap.animcreated.\" + el.id, anim);\n        eve.once(\"mina.finish.\" + anim.id, function () {\n            eve.off(\"mina.*.\" + anim.id);\n            delete el.anims[anim.id];\n            callback && callback.call(el);\n        });\n        eve.once(\"mina.stop.\" + anim.id, function () {\n            eve.off(\"mina.*.\" + anim.id);\n            delete el.anims[anim.id];\n        });\n        return el;\n    };\n});\n\n// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    // Colours are from https://www.materialui.co\n    var red         = \"#ffebee#ffcdd2#ef9a9a#e57373#ef5350#f44336#e53935#d32f2f#c62828#b71c1c#ff8a80#ff5252#ff1744#d50000\",\n        pink        = \"#FCE4EC#F8BBD0#F48FB1#F06292#EC407A#E91E63#D81B60#C2185B#AD1457#880E4F#FF80AB#FF4081#F50057#C51162\",\n        purple      = \"#F3E5F5#E1BEE7#CE93D8#BA68C8#AB47BC#9C27B0#8E24AA#7B1FA2#6A1B9A#4A148C#EA80FC#E040FB#D500F9#AA00FF\",\n        deeppurple  = \"#EDE7F6#D1C4E9#B39DDB#9575CD#7E57C2#673AB7#5E35B1#512DA8#4527A0#311B92#B388FF#7C4DFF#651FFF#6200EA\",\n        indigo      = \"#E8EAF6#C5CAE9#9FA8DA#7986CB#5C6BC0#3F51B5#3949AB#303F9F#283593#1A237E#8C9EFF#536DFE#3D5AFE#304FFE\",\n        blue        = \"#E3F2FD#BBDEFB#90CAF9#64B5F6#64B5F6#2196F3#1E88E5#1976D2#1565C0#0D47A1#82B1FF#448AFF#2979FF#2962FF\",\n        lightblue   = \"#E1F5FE#B3E5FC#81D4FA#4FC3F7#29B6F6#03A9F4#039BE5#0288D1#0277BD#01579B#80D8FF#40C4FF#00B0FF#0091EA\",\n        cyan        = \"#E0F7FA#B2EBF2#80DEEA#4DD0E1#26C6DA#00BCD4#00ACC1#0097A7#00838F#006064#84FFFF#18FFFF#00E5FF#00B8D4\",\n        teal        = \"#E0F2F1#B2DFDB#80CBC4#4DB6AC#26A69A#009688#00897B#00796B#00695C#004D40#A7FFEB#64FFDA#1DE9B6#00BFA5\",\n        green       = \"#E8F5E9#C8E6C9#A5D6A7#81C784#66BB6A#4CAF50#43A047#388E3C#2E7D32#1B5E20#B9F6CA#69F0AE#00E676#00C853\",\n        lightgreen  = \"#F1F8E9#DCEDC8#C5E1A5#AED581#9CCC65#8BC34A#7CB342#689F38#558B2F#33691E#CCFF90#B2FF59#76FF03#64DD17\",\n        lime        = \"#F9FBE7#F0F4C3#E6EE9C#DCE775#D4E157#CDDC39#C0CA33#AFB42B#9E9D24#827717#F4FF81#EEFF41#C6FF00#AEEA00\",\n        yellow      = \"#FFFDE7#FFF9C4#FFF59D#FFF176#FFEE58#FFEB3B#FDD835#FBC02D#F9A825#F57F17#FFFF8D#FFFF00#FFEA00#FFD600\",\n        amber       = \"#FFF8E1#FFECB3#FFE082#FFD54F#FFCA28#FFC107#FFB300#FFA000#FF8F00#FF6F00#FFE57F#FFD740#FFC400#FFAB00\",\n        orange      = \"#FFF3E0#FFE0B2#FFCC80#FFB74D#FFA726#FF9800#FB8C00#F57C00#EF6C00#E65100#FFD180#FFAB40#FF9100#FF6D00\",\n        deeporange  = \"#FBE9E7#FFCCBC#FFAB91#FF8A65#FF7043#FF5722#F4511E#E64A19#D84315#BF360C#FF9E80#FF6E40#FF3D00#DD2C00\",\n        brown       = \"#EFEBE9#D7CCC8#BCAAA4#A1887F#8D6E63#795548#6D4C41#5D4037#4E342E#3E2723\",\n        grey        = \"#FAFAFA#F5F5F5#EEEEEE#E0E0E0#BDBDBD#9E9E9E#757575#616161#424242#212121\",\n        bluegrey    = \"#ECEFF1#CFD8DC#B0BEC5#90A4AE#78909C#607D8B#546E7A#455A64#37474F#263238\";\n    /*\\\n     * Snap.mui\n     [ property ]\n     **\n     * Contain Material UI colours.\n     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.mui.deeppurple, stroke: Snap.mui.amber[600]});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.mui = {};\n    /*\\\n     * Snap.flat\n     [ property ]\n     **\n     * Contain Flat UI colours.\n     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.flat.carrot, stroke: Snap.flat.wetasphalt});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.flat = {};\n    function saveColor(colors) {\n        colors = colors.split(/(?=#)/);\n        var color = new String(colors[5]);\n        color[50] = colors[0];\n        color[100] = colors[1];\n        color[200] = colors[2];\n        color[300] = colors[3];\n        color[400] = colors[4];\n        color[500] = colors[5];\n        color[600] = colors[6];\n        color[700] = colors[7];\n        color[800] = colors[8];\n        color[900] = colors[9];\n        if (colors[10]) {\n            color.A100 = colors[10];\n            color.A200 = colors[11];\n            color.A400 = colors[12];\n            color.A700 = colors[13];\n        }\n        return color;\n    }\n    Snap.mui.red = saveColor(red);\n    Snap.mui.pink = saveColor(pink);\n    Snap.mui.purple = saveColor(purple);\n    Snap.mui.deeppurple = saveColor(deeppurple);\n    Snap.mui.indigo = saveColor(indigo);\n    Snap.mui.blue = saveColor(blue);\n    Snap.mui.lightblue = saveColor(lightblue);\n    Snap.mui.cyan = saveColor(cyan);\n    Snap.mui.teal = saveColor(teal);\n    Snap.mui.green = saveColor(green);\n    Snap.mui.lightgreen = saveColor(lightgreen);\n    Snap.mui.lime = saveColor(lime);\n    Snap.mui.yellow = saveColor(yellow);\n    Snap.mui.amber = saveColor(amber);\n    Snap.mui.orange = saveColor(orange);\n    Snap.mui.deeporange = saveColor(deeporange);\n    Snap.mui.brown = saveColor(brown);\n    Snap.mui.grey = saveColor(grey);\n    Snap.mui.bluegrey = saveColor(bluegrey);\n    Snap.flat.turquoise = \"#1abc9c\";\n    Snap.flat.greensea = \"#16a085\";\n    Snap.flat.sunflower = \"#f1c40f\";\n    Snap.flat.orange = \"#f39c12\";\n    Snap.flat.emerland = \"#2ecc71\";\n    Snap.flat.nephritis = \"#27ae60\";\n    Snap.flat.carrot = \"#e67e22\";\n    Snap.flat.pumpkin = \"#d35400\";\n    Snap.flat.peterriver = \"#3498db\";\n    Snap.flat.belizehole = \"#2980b9\";\n    Snap.flat.alizarin = \"#e74c3c\";\n    Snap.flat.pomegranate = \"#c0392b\";\n    Snap.flat.amethyst = \"#9b59b6\";\n    Snap.flat.wisteria = \"#8e44ad\";\n    Snap.flat.clouds = \"#ecf0f1\";\n    Snap.flat.silver = \"#bdc3c7\";\n    Snap.flat.wetasphalt = \"#34495e\";\n    Snap.flat.midnightblue = \"#2c3e50\";\n    Snap.flat.concrete = \"#95a5a6\";\n    Snap.flat.asbestos = \"#7f8c8d\";\n    /*\\\n     * Snap.importMUIColors\n     [ method ]\n     **\n     * Imports Material UI colours into global object.\n     | Snap.importMUIColors();\n     | Snap().rect(0, 0, 10, 10).attr({fill: deeppurple, stroke: amber[600]});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.importMUIColors = function () {\n        for (var color in Snap.mui) {\n            if (Snap.mui.hasOwnProperty(color)) {\n                window[color] = Snap.mui[color];\n            }\n        }\n    };\n});\n\nmodule.exports = Snap\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/snapsvg-cjs/dist/snap.svg-cjs.js\n// module id = 1291\n// module chunks = 79611799117203","import React, { Component } from 'react';\nimport GatsbyLink from 'gatsby-link'\nimport UserLinks from '../UserLinks/UserLinks';\n\nimport './Footer.scss';\n\nimport {\n  Container,\n  Row,\n  Col,\n} from '../mystyle'\n\nclass Footer extends Component {\n  render() {\n    const { config } = this.props;\n    const {copyright, phone} = config;\n    if (!copyright) {\n      return null;\n    }\n    return (\n      <footer className=\"footer\">\n        <div className=\"footer-inner\">\n          <div className=\"extra-zone\">\n            <div className=\"inner\">\n              <Container>\n                <div className=\"footer-widgets row\">\n                  <div className=\"col-xs-12 col-md-3 footer-widget-1\">\n                    <div className=\"widget widget-container\">\n                      <div className=\"widget-body\">\n                        <div className=\"textwidget\">\n                          <div className=\"group-icons\">\n                            <p className=\"home-icon\">\n                              <span className=\"pr-10\">\n                                <i className=\"ion-android-pin\"/>\n                              </span>\n                              {config.address}\n                            </p>\n                            <p className=\"phone-icon\">\n                              <span className=\"pr-10\">\n                                <i className=\"ion-android-call\"/>\n                              </span>\n                              <a href=\"tel:0988 990 168\">\n                                {phone}\n                              </a>\n                            </p>\n                            <p className=\"email-icon\">\n                              <span className=\"pr-10\">\n                                <i className=\"ion-android-mail\"/>\n                              </span>\n                              <a href={`mailto:${config.email}`} target=\"_blank\">{config.email}</a>\n                            </p>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-xs-12 col-md-3 footer-widget-2\">\n                    <div className=\"widget widget-container\">\n                      <div className=\"widget-body\">\n                        <div className=\"menu\">\n                          <ul className=\"menu\">\n                            <li className=\"menu-item\">\n                              <GatsbyLink to=\"/support-and-faq\">Hướng dẫn mua hàng</GatsbyLink>\n                            </li>\n                            <li className=\"menu-item\">\n                              <GatsbyLink to=\"/support-and-faq\">Hình thức thanh toán</GatsbyLink>\n                            </li>\n                          </ul>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-xs-12 col-md-3 footer-widget-3\">\n                    <div className=\"widget widget-container\">\n                      <div className=\"widget-body\">\n                        <div className=\"menu\">\n                          <dl>\n                            <dt>Vietcombank</dt>\n                            <dd>Lưu Bình An</dd>\n                            <dd>0181-003-023-502</dd>\n                          </dl>\n                          <dl>\n                            <dt>ACB</dt>\n                            <dd>Trương Thị Tố Mi</dd>\n                            <dd>0181-003-023-502</dd>\n                          </dl>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-xs-12 col-md-3 footer-widget-4\">\n                    <div className=\"widget widget-container\">\n                      <div className=\"widget-body\">\n                        <div className=\"menu\">\n                          <UserLinks config={config} labeled />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </Container>\n            </div>\n          </div>\n          <Container>\n            <Row>\n              <Col sm={6} xs={12}>\n                <div className=\"copyright\">\n                  {copyright}\n                </div>\n              </Col>\n              <Col sm={6} xs={12}>\n                <div className=\"credit\">\n                  <ul className=\"footer-nav\">\n                    <li>\n                      <GatsbyLink to=\"/support-and-faq\">Câu hỏi thường gặp</GatsbyLink>\n                    </li>\n                  </ul>\n                </div>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Footer/Footer.jsx","import Footer from './Footer.jsx'\n\nexport default Footer\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Footer/index.js","import React, { Component } from 'react';\nimport './UserLinks.css';\n\nclass UserLinks extends Component {\n  getLinkElements() {\n    const { userLinks } = this.props.config;\n    const { labeled } = this.props;\n    return userLinks.map(link => (\n      <p key={link.label}>\n        <a target=\"_blank\" href={link.url} className={`btn ${link.label}`}>\n          {link.iconClassName !== '' &&\n            <i className={`${link.iconClassName} pr-2`} />\n          }\n          {labeled ? link.label : ''}\n        </a>\n      </p>\n    ))\n  }\n  render() {\n    const { userLinks } = this.props.config;\n    if (!userLinks) {\n      return null;\n    }\n    return (\n      <div className=\"user-links\">\n        {this.getLinkElements()}\n      </div>\n    );\n  }\n}\n\nexport default UserLinks;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/UserLinks/UserLinks.jsx","import React from 'react';\nimport Helmet from 'react-helmet';\nimport GatsbyLink, {navigateTo, withPrefix} from 'gatsby-link';\nimport { push as MenuBuger } from 'react-burger-menu';\nimport {BackTop, Icon, Popover} from 'antd';\nimport 'antd/dist/antd.css'\n\nimport config from '../../data/SiteConfig';\nimport {PRIMARY_NAVIGATION} from '../../data/data';\nimport '../scss/antd.scss';\nimport '../scss/main.scss';\nimport '../scss/responsive.scss';\n\n\nimport {Container, Master, Nav, Row, Col, Button} from '../components/mystyle'\nimport Footer from '../components/Footer'\n\nimport logoImg from './logo-shop-mat-troi-nho.png';\n\nexport default class MainLayout extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showBugger: false\n    }\n  }\n  componentWillReceiveProps(nextProps) {\n    this.setState({showBugger: false})\n  }\n  getLocalTitle() {\n    function capitalize(string) {\n      return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n    const pathPrefix = config.pathPrefix ? config.pathPrefix : '/';\n    const currentPath = this.props.location.pathname\n      .replace(pathPrefix, '')\n      .replace('/', '');\n    let title = '';\n    if (currentPath === '') {\n      title = 'Home';\n    } else if (currentPath === 'tags/') {\n      title = 'Tags';\n    } else if (currentPath === 'categories/') {\n      title = 'Categories';\n    } else if (currentPath === 'about/') {\n      title = 'About';\n    } else if (currentPath.includes('posts')) {\n      title = 'Article';\n    } else if (currentPath.includes('tags/')) {\n      const tag = currentPath\n        .replace('tags/', '')\n        .replace('/', '')\n        .replace('-', ' ');\n      title = `Tagged in ${capitalize(tag)}`;\n    } else if (currentPath.includes('categories/')) {\n      const category = currentPath\n        .replace('categories/', '')\n        .replace('/', '')\n        .replace('-', ' ');\n      title = `${capitalize(category)}`;\n    }\n    return title;\n  }\n  contentGiaoHang = () => {\n    return (\n      <div>\n        <ul className=\"pl-30\">\n          <li>Giao hàng tiết kiệm</li>\n          <li>Giao hàng qua Viettel Post</li>\n          <li>Giao hàng nhanh trong ngày</li>\n        </ul>\n      </div>\n    )\n  }\n  contentThanhToan = () => {\n    return (\n      <div>\n        <p>Thanh toán sau khi nhận và kiểm tra hàng, áp dụng cho các quận ở TP.HCM</p>\n        <p>Chuyển khoản 50% hóa đơn cho các tỉnh khác.</p>\n      </div>\n    )\n  }\n  contentUuDai = () => {\n    return (\n      <div>\n        <p>Giảm theo % trên từng đơn hàng cho khách hàng thân thiết</p>\n      </div>\n    )\n  }\n  contentDoiTra = () => {\n    return (\n      <div>\n        <ul className=\"pl-30\">\n          <li>Sản phẩm bị lỗi do sản xuất</li>\n          <li>Không vừa size, đổi size miễn phí</li>\n        </ul>\n      </div>\n    )\n  }\n  renderChildrenMenu = (props) => {\n    return (\n      <ul className=\"list-group list-group-flush\">\n        {props.map((item, index) => {\n          return (\n            <li key={index} className=\"list-group-item\">\n              <span style={{cursor: 'pointer'}} onClick={() => this.callChangeLink(item.href)}>\n                {item.name}\n              </span>\n            </li>\n          )\n        })}\n      </ul>\n    )\n  }\n  callChangeLink = (href) => {\n    navigateTo(`${config.pathPrefix}${href}`);\n    this.setState({showBugger: false})\n  }\n  toggleMenu = (e) => {\n    this.setState({showBugger: true});\n  }\n  render() {\n    const { children } = this.props;\n    const pathArray = this.props.location.pathname;\n    const selectedKey = pathArray.split('/').slice(-1);\n    return (\n      <div className=\"mystyle\">\n        <Helmet>\n          <title>{`${config.siteTitle} |  ${this.getLocalTitle()}`}</title>\n          <meta name=\"description\" content={config.siteDescription} />\n        </Helmet>\n        <div id=\"outer-container\">\n          <Button className=\"bugger-menu-control\" primary onClick={this.toggleMenu}>\n            <i className=\"ion-android-menu\"/>\n          </Button>\n          <MenuBuger pageWrapId=\"page-wrap\" outerContainerId='outer-container' isOpen={this.state.showBugger} >\n            {PRIMARY_NAVIGATION.map((menu, index) => {\n              const hasChildrens = !!((menu.childrens !== undefined && menu.childrens.length !== 0))\n              return (\n                <ul className=\"menu-mobile list-group list-group-flush\" key={index}>\n                  <li className=\"list-group-item list-group-item-primary\">\n                    <span style={{cursor: 'pointer'}} onClick={() => this.callChangeLink(menu.href)}>\n                      {menu.name}\n                    </span>\n                  </li>\n                  { hasChildrens ? this.renderChildrenMenu(menu.childrens) : null }\n                </ul>\n              )\n            })}\n          </MenuBuger>\n          <main id=\"page-wrap\">\n            <div id=\"header\">\n              <div className=\"header\">\n                <div className=\"header-inner\">\n                  <Container fluid>\n                    <Row>\n                      <Col>\n                        <div className=\"d-flex\">\n                          <GatsbyLink to=\"/\" className=\"navbar-brand\">\n                            <img src={logoImg} alt={config.siteTitle} />\n                          </GatsbyLink>\n                          <Nav selectedKey={selectedKey[0]} items={PRIMARY_NAVIGATION} className=\"primary-nav\" />\n                          <div className=\"hightlight-features\">    \n                            <div className=\"highlight-item\">                              \n                              <div className=\"img-holder\">\n                                <i className=\"ion-bag\"></i>\n                              </div>\n                              <div className=\"desc-block\">\n                                <Popover content={this.contentGiaoHang()} title=\"Giao hàng tận nơi\" trigger=\"hover\">\n                                  <div className=\"\">Giao hàng toàn quốc</div>\n                                </Popover>\n                              </div>\n                            </div>\n                            <div className=\"highlight-item\">        \n                              <div className=\"img-holder\">\n                                <i className=\"ion-cash\"></i>\n                              </div>\n                              <div className=\"desc-block\">\n                                <Popover content={this.contentThanhToan()} title=\"Đa dạng hình thức thanh toán\" trigger=\"hover\">\n                                  <div className=\"\">Thanh toán khi nhận hàng</div>\n                                </Popover>\n                              </div>\n                            </div>\n                            <div className=\"highlight-item\">        \n                              <div className=\"img-holder\">\n                                <i className=\"ion-happy-outline\"></i>\n                              </div>\n                              <div className=\"desc-block\">\n                                <Popover content={this.contentUuDai()} title=\"Ưu đãi\" trigger=\"hover\">\n                                  <div className=\"\">Ưu đãi khách hàng thân thiết</div>\n                                </Popover>\n                              </div>\n                            </div>\n                            <div className=\"highlight-item\">        \n                              <div className=\"img-holder\">\n                                <i className=\"ion-cube\"></i>\n                              </div>\n                              <div className=\"desc-block\">\n                                <Popover content={this.contentDoiTra()} title=\"Chính sách đổi trả\" trigger=\"hover\">\n                                  <div className=\"\">Đổi trả hàng lỗi</div>\n                                </Popover>\n                              </div>\n                            </div>    \n                          </div>\n                        </div>\n                      </Col>\n                      <Col className=\"ml-a\">\n                        <div className=\"top-info-block\">\n                          <a href={config.facebook} target=\"_blank\" className=\"link-facebook\">\n                            <i className=\"ion-social-facebook\" />\n                          </a>\n                          <div className=\"hotline-badge hidden-xs\">\n                            <i className=\"ion-ios-telephone\" />\n                            <div className=\"hotline-number\"><a href={`tel:${config.phone}`}>{config.phone}</a></div>\n                          </div>\n                        </div>\n                      </Col>\n                    </Row>\n                  </Container>\n                </div>\n              </div>\n            </div>\n            <Master>\n              {children()}\n            </Master>\n            <Footer config={config} />\n            <BackTop />\n          </main>\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/layouts/index.jsx","module.exports = __webpack_public_path__ + \"static/logo-shop-mat-troi-nho.98819bbb.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/layouts/logo-shop-mat-troi-nho.png\n// module id = 1297\n// module chunks = 79611799117203"],"sourceRoot":""}